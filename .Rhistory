geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
p1
ggplot(data = prepare, aes(x = as.factor(comparison), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
prepare <- data.frame(rep(1:(length(obs.comp), 2), rep(comparison, 2), rbind(EM.full.clean[, -2], EM.meta.clean[, -2]), rep(c("Network meta-analysis", "Paiwise meta-analysis"), each = length(obs.comp)))
colnames(prepare) <- c("order", "comparison", "mean", "lower", "upper", "analysis")
rownames(prepare) <- NULL
## Forest plots of comparisons
p1 <- ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
p1
prepare <- data.frame(rep(1:(length(obs.comp), 2), rep(comparison, 2), rbind(EM.full.clean[, -2], EM.meta.clean[, -2]), rep(c("Network meta-analysis", "Paiwise meta-analysis"), each = length(obs.comp)))
colnames(prepare) <- c("order", "comparison", "mean", "lower", "upper", "analysis")
rownames(prepare) <- NULL
prepare <- data.frame(rep(1:length(obs.comp), 2), rep(comparison, 2), rbind(EM.full.clean[, -2], EM.meta.clean[, -2]), rep(c("Network meta-analysis", "Paiwise meta-analysis"), each = length(obs.comp)))
colnames(prepare) <- c("order", "comparison", "mean", "lower", "upper", "analysis")
rownames(prepare) <- NULL
## Forest plots of comparisons
p1 <- ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
p1
ggplot(data = dat, aes(x = factor(structure, level = structure_order), y = location, ymin = lower, ymax = upper, col = model, fill = model) ) +
#specify position here
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, col = "grey") +
#specify position here too
# geom_point(aes(shape = model), size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = structure, y = round(location, 3), label = round(location, 3), group = model), color = "black", hjust = -0.3, vjust = -0.1, size = 3.5,
check_overlap = F, parse = F, position = position_dodge(width = 0.8), show.guide = F, inherit.aes = T) +
labs(x = node.y, y = node.x, fill = "Assumption", colour = "Assumption", shape = "Assumption", group = "Assumption") +
coord_flip() +
ggtitle(title, subtitle) +
#theme_economist_white() +
theme_classic() +
scale_color_npg() +
theme(axis.title.y = element_text(color = "black", size = 12, face = "bold"), axis.title.x = element_text(color = "black", size = 12, face = "bold"),
axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
plot.title = element_text(size = 12.7, face = "bold", hjust = 0.5), plot.subtitle = element_text(size = 12.7, face = "bold", hjust = 0.5),
legend.title = element_text(color = "black", size = 12, face = "bold"), legend.position = "none", legend.direction = "horizontal", legend.text = element_text(size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
#geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
length(obs.comp)
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(1:18), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(aes(x = as.factor(order)), size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(aes(x = as.factor(order), y = as.numeric(mean)), size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(aes(x = as.factor(order), y = as.numeric(mean)), size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
prepare
prepare <- data.frame(rep(1:2, each = length(obs.comp)), rep(1:length(obs.comp), 2), rep(comparison, 2), rbind(EM.full.clean[, -2], EM.meta.clean[, -2]), rep(c("Network meta-analysis", "Paiwise meta-analysis"), each = length(obs.comp)))
colnames(prepare) <- c("id", "order", "comparison", "mean", "lower", "upper", "analysis")
rownames(prepare) <- NULL
## Forest plots of comparisons
p1 <- ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(aes(x = as.factor(order), y = as.numeric(mean)), size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(id), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
p1
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(aes(x = as.factor(id), y = as.numeric(mean)), size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.2, vjust = -0.3, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
prepare
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.2, vjust = -0.1, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.1, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = 0.2, vjust = -0.1, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = 0.2, vjust = 0.1, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
tau.meta.clean
is.data.frame(tau.meta.clean)
tau.meta.clean
data.frame(comparison, tau.meta.clean)
ggplot(data = prepare.tau, aes(x = as.factor(comparison), y = as.numeric(median), ymin = as.numeric(lower), ymax = as.numeric(upper))) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(median), 2), label = round(as.numeric(median), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "Between-trial standard deviation", y = "") +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12))
prepare.tau <- data.frame(comparison, tau.meta.clean)
colnames(prepare.tau) <- c("comparison", "median", "lower", "upper")
ggplot(data = prepare.tau, aes(x = as.factor(comparison), y = as.numeric(median), ymin = as.numeric(lower), ymax = as.numeric(upper))) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(median), 2), label = round(as.numeric(median), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "Between-trial standard deviation", y = "") +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12))
prepare.tau
prepare.tau <- data.frame(comparison, tau.meta.clean[, -2])
colnames(prepare.tau) <- c("comparison", "median", "lower", "upper")
p2 <-  ggplot(data = prepare.tau, aes(x = as.factor(comparison), y = as.numeric(median), ymin = as.numeric(lower), ymax = as.numeric(upper))) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(median), 2), label = round(as.numeric(median), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "Between-trial standard deviation", y = "") +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12))
p2
ggplot(data = prepare.tau, aes(x = as.factor(comparison), y = as.numeric(median), ymin = as.numeric(lower), ymax = as.numeric(upper))) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(median), 2), label = round(as.numeric(median), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "Between-trial standard deviation", y = "") +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare.tau, aes(x = as.factor(comparison), y = as.numeric(median), ymin = as.numeric(lower), ymax = as.numeric(upper))) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "white", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(comparison), y = round(as.numeric(median), 2), label = round(as.numeric(median), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "Between-trial standard deviation") +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "Effect estimate", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
legend.position = "bottom", legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
ggplot(data = prepare, aes(x = as.factor(order), y = as.numeric(mean), ymin = as.numeric(lower), ymax = as.numeric(upper), colour = analysis, group = analysis)) +
geom_linerange(size = 2, position = position_dodge(width = 0.5)) +
geom_hline(yintercept = 0, lty = 2, size = 1.5, col = "grey") +
geom_point(size = 1.5,  colour = "black", stroke = 0.3, position = position_dodge(width = 0.5)) +
geom_text(aes(x = as.factor(order), y = round(as.numeric(mean), 2), label = round(as.numeric(mean), 2)),
color = "black", hjust = -0.1, vjust = -0.5, size = 4.0, check_overlap = F, parse = F, position = position_dodge(width = 0.8), inherit.aes = T) +
labs(x = "", y = "Effect estimate", colour = "Analysis") +
scale_x_discrete(breaks = as.factor(1:length(obs.comp)), labels = prepare$comparison[1:length(obs.comp)]) +
scale_color_manual(breaks = c("Network meta-analysis", "Paiwise meta-analysis"), values = c("#009E73", "#D55E00")) +
coord_flip() +
theme_classic() +
theme(axis.text.x = element_text(color = "black", size = 12), axis.text.y = element_text(color = "black", size = 12),
axis.title.x = element_text(color = "black", face = "bold", size = 12), legend.position = "bottom",
legend.text =  element_text(color = "black", size = 12), legend.title =  element_text(color = "black", face = "bold", size = 12))
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
tau.full
tau.full[5]
tau.full[3]
tau.full[5]
tau.full[7]
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
devtools::load_all()
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
evtools::document()
devtools::document()
## Load all package material
devtools::load_all()
## Use example in excel format
library(readxl)
#(data.fas <- as.data.frame(read_excel("D:/Ongoing Projects/19.008_NMA pulpotomy (Fasoulas-Pandis)/31_Dataset/Data extraction NMA2.xlsx", na = "NA", sheet = "Dataset")[, c(15:17, 22:27, 32:37)]))
(data.fas <- as.data.frame(read_excel("O:/Research Projects/19.008_NMA pulpotomy (Fasoulas-Pandis)/31_Dataset/Data extraction NMA2.xlsx", na = "NA", sheet = "Dataset")[, c(15:17, 22:27, 32:37)]))
colnames(data.fas) <- c("t1", "t2", "t3", "arm1", "arm2", "arm3", "n1", "n2", "n3", "r1", "r2", "r3", "m1", "m2", "m3")
# Vector of unique intervention names
(interv.names <- na.omit(unique(unlist(data.fas[, 4:6]))))
## Perform NMA-PMM using optional arguments only
(res1 <- rnmamod::run.model(data = data.fas, measure = "OR",  heter.prior = list("halfnormal", 0, 1), D = 0))
## Run separate RE-MA for comparisons with at least two trials (save EM and tau)
(meta1 <- rnmamod::run.separate.meta(data = data.fas, measure = "OR",  heter.prior = list("uniform", 0, 5)))
## Present results from the separate RE-MAs and corresponding NMA results
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
## Load all package material
devtools::load_all()
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
rnmamod::UME.plot(res1, ume1, drug.names = interv.names)
## Load all package material
devtools::load_all()
rnmamod::UME.plot(res1, ume1, drug.names = interv.names, path = getwd())
(ume1 <- rnmamod::run.UME(data = data1[, -17], measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
## Load libraries
list.of.packages <- c("devtools", "R2jags", "ggplot2", "dplyr", "mcmcplots", "reshape2", "ggfittext", "gemtc", "netmeta",
"BUGSnet", "pcnetmeta", "gridExtra", "stringr", "ggpubr", "ggrepel", "testit", "writexl")
lapply(list.of.packages, require, character.only = T); rm(list.of.packages)
## Load all package material
devtools::load_all()
## Load 'rnmamod' library :-) (Only ONCE after running 'load_all()' for the first time in that day)
library(rnmamod)
## Use example in excel format
library(readxl)
#(data.fas <- as.data.frame(read_excel("D:/Ongoing Projects/19.008_NMA pulpotomy (Fasoulas-Pandis)/31_Dataset/Data extraction NMA2.xlsx", na = "NA", sheet = "Dataset")[, c(15:17, 22:27, 32:37)]))
(data.fas <- as.data.frame(read_excel("O:/Research Projects/19.008_NMA pulpotomy (Fasoulas-Pandis)/31_Dataset/Data extraction NMA2.xlsx", na = "NA", sheet = "Dataset")[, c(15:17, 22:27, 32:37)]))
colnames(data.fas) <- c("t1", "t2", "t3", "arm1", "arm2", "arm3", "n1", "n2", "n3", "r1", "r2", "r3", "m1", "m2", "m3")
# Vector of unique intervention names
(interv.names <- na.omit(unique(unlist(data.fas[, 4:6]))))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
data.fas
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
## Present results from the unrelated mean effects model
rnmamod::UME.plot(res1, ume1, drug.names = interv.names, path = getwd())
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
data.fas
(node1 <- rnmamod::run.nodesplit(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
rnmamod::nodesplit.plot(node1, drug.names = interv.names, tau.values = c(0.53, 0.04, 1.37)) # tau.values refer to posterior median and 95% CrI in full NMA
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
data.fas
(ume1 <- rnmamod::run.UME(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas[, -c(4:6)], measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(ume1 <- rnmamod::run.UME(data = data.fas[, -c(4:6)], measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
## Run separate RE-MA for comparisons with at least two trials (save EM and tau)
(meta1 <- rnmamod::run.separate.meta(data = data.fas, measure = "OR",  heter.prior = list("uniform", 0, 5)))
## Perform NMA-PMM using optional arguments only
(res1 <- rnmamod::run.model(data = data.fas, measure = "OR",  heter.prior = list("halfnormal", 0, 1), D = 0))
## Present results from the separate RE-MAs and corresponding NMA results
rnmamod::separate.meta.plot(full = res1, meta = meta1, drug.names = interv.names, path = getwd())
## Load all package material
devtools::load_all()
## Present results from the node-splitting approach
rnmamod::nodesplit.plot(node1, res1, drug.names = interv.names)
(res1 <- rnmamod::run.model(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, D = 0, n.chains = 3, n.iter = 10000, n.burnin = 1000, n.thin = 1))
(node1 <- rnmamod::run.nodesplit(data = data.fas, measure = "OR", assumption = "IDE-ARM", heter.prior = list("halfnormal", 0, 1), mean.misspar = 0, var.misspar = 1, n.chains = 2, n.iter = 10000, n.burnin = 1000, n.thin = 1))
## Present results from the node-splitting approach
rnmamod::nodesplit.plot(node1, res1, drug.names = interv.names)
