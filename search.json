[{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Description of the network","text":"vignette aims illustrate toolkits rnmamod package creation network plot summarisation corresponding outcome data. missing participant outcome data (MOD) extracted trials dataset, rnmamod package facilitates visualising proportion MOD across network within dataset.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"dataset-preparation","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Dataset preparation","title":"Description of the network","text":"use systematic review Bottomley et al., (2011) comprises 9 trials comparing six pharmacologic interventions placebo moderately severe scalp psoriasis. analysed binary outcome investigator global assessment response 4 weeks (?nma.bottomley2011). dataset one-trial-per-row format containing arm-level data trial. format widely used BUGS models. binary outcome, dataset must minimum three items: item t refers intervention identifier corresponding (intervention) arm; item r refers number observed events corresponding arm. item n refers number randomised participants corresponding arm. least one trial reports number missing participants per arm, also include item m dataset. trial reports total number missing participants rather number missing participants per arm, indicate NA item m arms corresponding trial. example, maximum number interventions observed trial four. Therefore, element comprises four columns (e.g., t1, t2, t3, t4) indicate maximum number arms dataset. Furthermore, trials dataset reported number missing participants per arm; therefore, element m appears dataset.","code":"study t1 t2 t3 t4  r1  r2  r3 r4 m1 m2 m3 m4  n1  n2  n3  n4 1             Buckley, 2008  1  6 NA NA  67  79  NA NA  2  1 NA NA 110 108  NA  NA 2              Tyring, 2008  6  7 NA NA  74  12  NA NA  2  0 NA NA 135  42  NA  NA 3           Kragballe, 2009  3  6 NA NA  19 114  NA NA  9  2 NA NA 105 207  NA  NA 4               Luger, 2008  3  6 NA NA 101 196  NA NA 44  9 NA NA 431 419  NA  NA 5              Klaber, 1994  2  3 NA NA 175 138  NA NA  2 11 NA NA 234 240  NA  NA 6             Barrett, 2005  3  4 NA NA  79  79  NA NA 19 18 NA NA 225 236  NA  NA 7 Klaber and McKinnon, 2000  3  5 NA NA  55  31  NA NA 35 16 NA NA 238 237  NA  NA 8      van de Kerkhof, 2009  1  3  6 NA 287  74 311 NA  7  8  4 NA 563 286 568  NA 9               Jemec, 2008  1  3  6  7 304  64 362 20  6 20  8  7 556 272 541 136"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"the-network-plot","dir":"Articles","previous_headings":"Example on a binary outcome","what":"The network plot","title":"Description of the network","text":"function netplot (see ?netplot help) creates network plot using two arguments: data dataset (one-trial-per-row format) drug_names names intervention dataset.  intervention names drug_names must sorted ascending order identifier. Hence, 1 element t refers BDP, (betamethasone dipropionate) 2 BMV (betamethasone valerate), 3 CPL (calcipotriol) . See Details ?nma.bottomley20119 names interventions. node refers intervention edge refers pairwise comparison. size node thickness edge weighted number trials investigated corresponding intervention pairwise comparison, respectively.","code":"netplot(data = nma.bottomley2011, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"), show_multi = TRUE, edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"network-characteristics","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Network characteristics","title":"Description of the network","text":"netplot also produces table characteristics network, number interventions, number possible comparisons, number direct comparisons (.e., comparisons interventions informed least one trial), : Description network","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-the-outcome","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of the outcome","title":"Description of the network","text":"Furthermore, netplot returns table summarises number trials, number randomised participants proportion completers (participants completed trial) per intervention. case binary outcome, table additionally illustrates distribution outcome proportion across corresponding trials: Interventions identical table returned observed comparisons network: Observed comparisons users can export tables xlsx file working directory project adding argument save_xls = TRUE describe_network function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-missing-participants-across-the-network","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of missing participants across the network","title":"Description of the network","text":"missing participants reported arm every trial, use heatmap_missing_network function illustrate distribution proportion missing participants per intervention (main diagonal) observed comparison (lower -diagonal) network (see Details ?heatmap_missing_network).  green colour implies median proportion missing participant 5%, hence, low risk associated missing participants. red colour implies median proportion missing participant 20%, hence, high risk associated missing participants; otherwise, orange indicates moderate risk. example, interventions observed comparisons associated low risk due participant losses.","code":"heatmap_missing_network(data = nma.bottomley2011, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"))"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-missing-participants-across-the-trials","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of missing participants across the trials","title":"Description of the network","text":"Use heatmap_missing_dataset function illustrate proportion missing participants arm every trial dataset :","code":"heatmap_missing_dataset(data = nma.bottomley2011, trial_names = nma.bottomley2011$study, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"))"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Description of the network","text":"Bottomley JM, Taylor RS, Ryttov J. effectiveness two-compound formulation calcipotriol betamethasone dipropionate gel treatment moderately severe scalp psoriasis: systematic review direct indirect evidence. Curr Med Res Opin 2011;27(1):251–268. doi: 10.1185/03007995.2010.541022","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Perform network meta-analysis","text":"vignette illustrates perform one-stage Bayesian random-effects network meta-analysis consistency equation using run_model function. function includes arguments handle aggregate missing participant outcome data (MOD) arm every trial via pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"example-on-a-binary-outcome","dir":"Articles","previous_headings":"","what":"Example on a binary outcome","title":"Perform network meta-analysis","text":"use network pharmacologic interventions chronic obstructive pulmonary disease (COPD) systematic review Baker et al. (2009). network comprises 21 trials comparing seven pharmacological interventions placebo. exacerbation COPD (harmful outcome) analysed binary outcome (see ?nma.baker2009).","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"run-the-model","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"Run the model","title":"Perform network meta-analysis","text":"run_model calls jags function R2jags package perform Bayesian analysis using BUGS code Dias colleagues (2013). minimum required arguments, function adjusts MOD missing--random assumption (MAR; default) via informative missingness odds ratio (IMOR) logarithmic scale (White et al. (2008)): minimum required arguments run_model include specifying: dataset (data-frame one-trial-per-row format) data (see ?data_preparation); effect measure measure (see ‘Arguments’ ?run_model): prior distribution heterogeneity parameter heter_prior (see ?heterogeneity_param_prior); direction outcome D (, D = 0 outcome harmful; see, ‘Arguments’ ?run_model) number chains n_chains (see ‘Arguments’ ?run_model – also subsequent arguments); number iterations n_iter; number burn-n_burnin, thinning n_thin.","code":"run_model(data = nma.baker2009,           measure = \"OR\",           heter_prior = list(\"halfnormal\", 0, 1),           D = 0,           n_chains = 3,           n_iter = 10000,           n_burnin = 1000,           n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"using-all-arguments","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"Using all arguments","title":"Perform network meta-analysis","text":"Suppose decide use empirically-based prior distribution -trial variance aligns outcome interventions investigation. also consider hierarchical structure prior normal distribution log IMOR specific interventions network (assumption = \"HIE-ARM\") (Turner et al., 2015a; Spineli, 2019). still assume MAR average variance log IMOR equal 1 (var_misspar = 1) also default argument. case, run_model must specified follows: argument model = \"RE\" refers random-effects model. fixed-effect model, use model = \"FE\". heter_prior = list(\"lognormal\", -2.06, 0.438) refers ‘symptoms reflecting continuation condition’ ‘pharmacological versus placebo’ comparison-type elicited Turner colleagues (2015b). argument mean_misspar = c(0, 0), first second element vector refers mean log IMOR non-reference interventions reference intervention network, respectively – latter always intervention identifier equal 1. Hence, non-reference interventions can consider mean log IMOR. See ‘Details’ ?missingness_param_prior","code":"run_model(data = nma.baker2009,           measure = \"OR\",           model = \"RE\",           assumption = \"HIE-ARM\",           heter_prior = list(\"lognormal\", -2.06, 0.438),           mean_misspar = c(0, 0),           var_misspar = 1,           D = 0,           n_chains = 3,           n_iter = 10000,           n_burnin = 1000,           n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"the-output","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"The output","title":"Perform network meta-analysis","text":"run_model returns list R2jags output summaries posterior distribution, Gelman-Rubin convergence diagnostic monitored parameters (see ‘Value’ ?run_model). output used S3 object functions package processed provide end-user-ready output. See, example, function ?league_heatmap creates league table effect sizes possible comparisons network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"no-or-partially-extracted-missing-participant-outcome-data","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"No or partially extracted missing participant outcome data","title":"Perform network meta-analysis","text":"run_model can also handle dataset MOD extracted MOD extracted trials trial-arms. illustrative purposes, removed item m nma.baker2009 indicate MOD extracted outcome: Using minimum required arguments, run_model run provide results. run_model calls data_preparation function. latter creates pseudo-data-frame item m (see ‘Value’ ?data_preparation) assigns NA trial-arms. data_preparation also creates pseudo-data-frame dimension items dataset, assigns zero value trial-arms indicate MOD extracted. pseudo-data-frames aim retain dataset trials without information MOD; otherwise, trials excluded analysis. See ‘Details’ ?data_preparation ?run_model.","code":"study t1 t2 t3 t4 r1 r2 r3 r4  n1  n2 n3 n4 1 Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA   8   8 NA NA 2        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 139 142 NA NA 3          Mahler, 1999  1  7 NA NA 47 28 NA NA 143 135 NA NA 4        Casaburi, 2000  1  8 NA NA 41 45 NA NA 191 279 NA NA 5       van Noord, 2000  1  7 NA NA 18 11 NA NA  50  47 NA NA 6         Rennard, 2001  1  7 NA NA 41 38 NA NA 135 132 NA NA"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Perform network meta-analysis","text":"Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607–617. doi: 10.1177/0272989X12458724 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis–part 1: two-stage methods. Stat Med 2008;27(5):711–27. doi: 10.1002/sim.3008 Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015a;34(12):2062–80. doi: 10.1002/sim.6475 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta- analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner RM, Jackson D, Wei Y, Thompson SG, Higgins JPT. Predictive distributions -study heterogeneity simple methods application Bayesian meta-analysis. Stat Med 2015b;34(6):984–98. doi: 10.1002/sim.6381","code":""},{"path":"https://loukiaspin.github.io/rnmamod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Loukia Spineli. Author, maintainer. Chrysostomos Kalyvas. Contributor. Katerina Papadimitropoulou. Contributor.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spineli L (2024). rnmamod: Bayesian Network Meta-Analysis Missing Participants. R package version 0.3.0, https://github.com/LoukiaSpin/rnmamod, https://CRAN.R-project.org/package=rnmamod.","code":"@Manual{,   title = {rnmamod: Bayesian Network Meta-Analysis with Missing Participants},   author = {Loukia Spineli},   year = {2024},   note = {R package version 0.3.0, https://github.com/LoukiaSpin/rnmamod},   url = {https://CRAN.R-project.org/package=rnmamod}, }"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"rnmamod-bayesian-network-meta-analysis-r-package-","dir":"","previous_headings":"","what":"Bayesian Network Meta-Analysis with Missing Participants ","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Official Git repository rnmamod R package R Views November 2021: “Top 40” New CRAN Packages Medium Peek--boo: Evidence synthesis using rnmamod R package YouTube channel ESMARConf2023","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Loukia Spineli, Chrysostomos Kalyvas, Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"website rnmamod currently includes two short tutorials (Description network Perform network meta-analysis). also structured reference list facilitate access documentation functions available package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"rnmamod package performs one-stage fixed-effect random-effects Bayesian network meta-analysis (NMA) adjusting missing participant outcome data (MOD) using pattern-mixture model. case two interventions, package performs one-stage Bayesian pairwise meta-analysis. Standard aggregate data NMA special case NMA MOD, either studies studies MOD available, respectively. package handles data inputs arm-based format: - binary data (effect size: odds ratio, risk ratio, risk difference) - continuous data (effect size: raw standardised mean differences, ratio means). rnmamod package comprises suite necessary models estimation prediction intervention effect, evaluation consistency assumption locally globally. Also includes rich suite visualisation tools aid interpretation results preparation NMA manuscript submission. Missing participant outcome data addressed models package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Run following code install load package CRAN: run following code install development version package:","code":"install.packages(\"rnmamod\") library(rnmamod) install.packages(\"devtools\") devtools::install_github(\"LoukiaSpin/rnmamod\")"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Baker et al. (2009) comprising 21 trials comparing seven pharmacologic interventions placebo chronic obstructive pulmonary disease (COPD) patients. exacerbation COPD (harmful outcome) analysed binary outcome.","code":"head(nma.baker2009) #>                 study t1 t2 t3 t4 r1 r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA  1  0 NA NA   8   8 NA NA #>        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 27 19 NA NA 139 142 NA NA #>          Mahler, 1999  1  7 NA NA 47 28 NA NA 23  9 NA NA 143 135 NA NA #>        Casaburi, 2000  1  8 NA NA 41 45 NA NA 18 12 NA NA 191 279 NA NA #>       van Noord, 2000  1  7 NA NA 18 11 NA NA  8  7 NA NA  50  47 NA NA #>         Rennard, 2001  1  7 NA NA 41 38 NA NA 29 22 NA NA 135 132 NA NA"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"network-plot","dir":"","previous_headings":"Example","what":"Network plot","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Create network plot using netplot function:","code":"# The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\", \"fluticasone\", \"fluticasone plus salmeterol\", \"formoterol\", \"salmeterol\", \"tiotropium\")  netplot(data = nma.baker2009, drug_names = interv_names, show_multi = TRUE, edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"perform-bayesian-random-effects-network-meta-analysis","dir":"","previous_headings":"Example","what":"Perform Bayesian random-effects network meta-analysis","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"following code performs Bayesian random-effects network meta-analysis missing random assumption using intervention-specific informative missingness odds ratio (assumption = \"IDE-ARM\") logarithmic scale:","code":"res <- run_model(data = nma.baker2009,                  measure = \"OR\",                  model = \"RE\",                  assumption = \"IDE-ARM\",                  heter_prior = list(\"halfnormal\", 0, 1),                  mean_misspar = c(0, 0),                   var_misspar = 1,                  D = 0,                  n_chains = 3,                  n_iter = 10000,                  n_burnin = 1000,                  n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"league-table","dir":"","previous_headings":"Example","what":"League table","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Illustrate possible pairwise comparisons interventions using league heatmap. Interventions sorted decreasing order posterior mean SUCRA (surface cumulative ranking) value main diagonal:","code":"league_heatmap(full1 = res, drug_names1 = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"rankogram-with-sucra-curves","dir":"","previous_headings":"Example","what":"Rankogram with SUCRA curves","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"following code presents hierarchy interventions network using integrated rankograms SUCRA curves:","code":"rankosucra_plot(full1 = res, drug_names1 = interv_names)"},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced balloon plot — balloon_plot","title":"Enhanced balloon plot — balloon_plot","text":"Creates enhanced balloon plot summary effect size   -trial standard deviation, tau, different scenarios   missingness parameter pair interventions.   balloon_plot uses scenarios considered   run_sensitivity.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced balloon plot — balloon_plot","text":"","code":"balloon_plot(sens, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced balloon plot — balloon_plot","text":"sens object S3 class run_sensitivity. See 'Value' run_sensitivity. compar character vector two elements indicating pairwise comparison interest. first element refers 'experimental' second element 'control' intervention comparison. drug_names vector labels name interventions order appear argument data run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced balloon plot — balloon_plot","text":"balloon_plot returns two enhanced balloon plots one   comparison (see 'Details'): plot_effect_size enhanced balloon plot   summary effect size (according argument measure inherited   run_sensitivity) one pairwise comparison. plot_tau enhanced balloon plot tau.   fixed-effect model performed run_sensitivity,   function return plot_tau.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enhanced balloon plot — balloon_plot","text":"plot_effect_size selected pairwise comparison,   different colours sizes bubbles reflect   posterior standard deviation posterior mean, respectively.   colour key appears plot. size bubble proportional   corresponding posterior mean.   Crossed bubbles indicate scenarios conclusive evidence (  95% credible interval excludes null value), filled bubbles   indicate scenarios inconclusive evidence (95% credible interval   includes null value). missing--random assumption (primary   analysis) labeled white frame.   axes illustrate scenarios specified argument   mean_scenarios run_sensitivity:   x-axis refers 'experimental' intervention, y-axis refers   'control' intervention. enhanced balloon plot created tau (plot_tau).   However, filled bubbles indicate low statistical heterogeneity   (posterior median tau lower median   prior distribution heterogeneity parameter),   crossed bubbles indicate considerable statistical heterogeneity   (posterior median tau exceeds median prior   distribution heterogeneity parameter). balloon_plot can used missing participant   outcome data extracted least one trial.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enhanced balloon plot — balloon_plot","text":"Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--490. doi: https://doi.org/10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Enhanced balloon plot — balloon_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced balloon plot — balloon_plot","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_taylor.rds',                     package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"inositol\")  # Create the enhanced balloon plot for 'inositol versus placebo' balloon_plot(sens = res_sens,              compar = c(\"inositol\", \"placebo\"),              drug_names = interv_names) #> $plot_effect_size  #>  #> $plot_tau  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The baseline model for binary outcome — baseline_model","title":"The baseline model for binary outcome — baseline_model","text":"process elements argument base_risk   run_model function. also runs hierarchical baseline   model, separately relative effects model described   Dias et al. (2018) Dias et al. (2013b). output passed   run_model run_metareg obtain   (unadjusted adjusted, respectively) absolute risks   intervention dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The baseline model for binary outcome — baseline_model","text":"","code":"baseline_model(base_risk, n_chains, n_iter, n_burnin, n_thin)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The baseline model for binary outcome — baseline_model","text":"base_risk scalar, vector length three elements sorted ascending order, matrix two columns number rows equal number relevant trials. case scalar vector, elements interval (0, 1). matrix, first column refers number events second column sample size trials comprising dataset baseline model. See 'Details' run_model. argument relevant binary outcome. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The baseline model for binary outcome — baseline_model","text":"base_risk scalar (fixed baseline), function   returns user-defined baseline selected reference intervention   logit scale. base_risk vector (random baseline),   function returns vector calculated logit event   selected reference intervention precision. Finally,  base_risk matrix (predicted baseline), function returns   following elements: ref_base vector posterior mean precision   predicted logit event selected reference intervention.   vector passed run_model   run_metareg. figure forest plot trial-specific observed estimated   baseline risk. See 'Details'. table_baseline table posterior predictive   distribution summary baseline mean posterior distribution   -trial standard deviation baseline. results   logit scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The baseline model for binary outcome — baseline_model","text":"base_risk matrix, baseline_model creates   hierarchical baseline model JAGS dialect BUGS language.   output function (see 'Value') constitutes   posterior mean precision predicted logit event   selected reference intervention plugged WinBUGS code   relative effects model (Dias et al., 2013a) via   prepare_model function. Following (Dias et al., 2013a),   uniform prior distribution assigned -trial standard   deviation upper lower limit equal 0 5, respectively. base_risk matrix, function also returns forest plot   estimated trial-specific probability event 95% credible   intervals (random effects) alongside corresponding observed   probability event selected reference intervention. grey   rectangular illustrates summary mean 95% credible interval   random effects. base_risk matrix (predicted baseline), model   updated convergence using autojags   function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The baseline model for binary outcome — baseline_model","text":"Dias S, Ades AE, Welton NJ, Jansen JP, Sutton AJ. Network Meta-Analysis Decision Making. Chichester (UK): Wiley; 2018. Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013a;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013b;33(5):657--70. doi: 10.1177/0272989X13485155","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The baseline model for binary outcome — baseline_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"The Bland-Altman plot — bland_altman_plot","title":"The Bland-Altman plot — bland_altman_plot","text":"function facilitates creating Bland-Altman plot  posterior mean deviance contribution two models using three  arguments.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Bland-Altman plot — bland_altman_plot","text":"","code":"bland_altman_plot(model1, model2, colour)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Bland-Altman plot — bland_altman_plot","text":"model1 vector numeric values target model (instance, consistency model). model2 vector numeric values reference model (instance, unrelated mean effects model). colour string define colour data points plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Bland-Altman plot — bland_altman_plot","text":"Bland-Altman plot posterior mean deviance contribution  individual data points model 1 model 2.  data point corresponds trial-arm indicated pair numbers.  first number refers position trial dataset,  second arm refers corresponding trial-arm (see 'Arguments'  'Value' data_preparation).  plot also displays average bias 95% limits agreement  horizontal solid black lines.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Bland-Altman plot — bland_altman_plot","text":"bland_altman_plot integrated ume_plot   create Bland-Altman plot posterior mean deviance   consistency model (via run_model)   unrelated mean effects model (via run_ume). uniform scattering data points within 95% limits agreement   average bias close 0 indicate compared models good   agreement. Data points positioned 95% limits   agreement correspond trials contribute poor fit   consistency model unrelated mean effects model, respectively. bland_altman_plot can used compare following models   regarding deviance contribution: consistency model (via run_model)    unrelated effect means model (via run_ume); network meta-analysis model (via run_model)    network meta-analysis model (via run_metareg).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Bland-Altman plot — bland_altman_plot","text":"Bland JM, Altman DG. Measuring agreement method comparison studies. Stat Methods Med Res 1999;8:135--60. doi: 10.1177/096228029900800204","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Bland-Altman plot — bland_altman_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"comp_clustering hosts toolkit functions facilitates   conducting, visualising evaluating hierarchical agglomerative   observed comparisons interventions specific network set   characteristics act effect modifiers. also calculates   non-statistical heterogeneity within-comparisons -comparisons   using dissimilarities among trials network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"","code":"comp_clustering(   input,   drug_names,   threshold,   informative = TRUE,   ranged_values = FALSE,   optimal_clusters,   get_plots = \"none\",   label_size = 4,   title_size = 14,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 13,   str_wrap_width = 10 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first three columns refer trial name, first second arm comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns. drug_names vector labels name interventions order defined argument input. threshold positive scalar indicate cut-low dissimilarity two comparisons. value much low. informative Logical TRUE evaluating comparison dissimilarity FALSE performing hierarchical agglomerative clustering, thus, allowing user define number clusters via argument optimal_clusters. default argument TRUE. ranged_values Whether use colour scale creating heatmap within-comparison -comparison dissimilarities (TRUE) colour cells green orange, exceeding specified threshold. Relevant informative = TRUE. default argument FALSE. optimal_clusters positive integer optimal number clusters, ideally, decided inspecting profile plot average silhouette widths range clusters, dendrogram. user must define value. takes values two number trials minus one. get_plots Logical values TRUE returning plots FALSE concealing plots. default argument FALSE. label_size positive integer font size labels violin plot study dissimilarities per comparison comparison comparisons. label_size determines size argument found geom's aesthetic properties R-package ggplot2. title_size positive integer font size legend title stacked barplot percentage studies comparison found clusters. title_size determines title argument found theme's properties R-package ggplot2. axis_title_size positive integer font size axis title violin plot study dissimilarities per comparison comparison comparisons, barplot percentage trials per comparison cluster. axis_title_size determines axis.title argument found theme's properties R-package ggplot2. axis_text_size positive integer font size axis text violin plot study dissimilarities per comparison comparison comparisons, heatmap comparison dissimilarity, barplot percentage trials per comparison cluster. axis_text_size determines axis.text argument found theme's properties R-package ggplot2. axis_x_text_angle positive integer angle axis text violin plot study dissimilarities per comparison comparison comparisons. axis_x_text_angle determines axis.text.x argument found theme's properties R-package ggplot2. legend_text_size positive integer font size legend text barplot percentage trials per comparison cluster. legend_text_size determines legend.text argument found theme's properties R-package ggplot2. str_wrap_width positive integer wrapping axis labels violin plot study dissimilarities per comparison comparisons. str_wrap_width determines str_wrap function R-package stringr.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Initially, comp_clustering prints console following   messages: number observed comparisons (number single-study   comparisons, ); number dropped characteristics due many   missing data; maximum value cophenetic correlation coefficient;   optimal linkage method selected based cophenetic correlation   coefficient. , function returns following list elements: Trials_diss_table lower -diagonal matrix 'dist' class   Gower dissimilarities pairs studies network. Comparisons_diss_table lower -diagonal matrix 'dist' class   within-comparison dissimilarities main diagonal   -comparison dissimilarities pairs observed   intervention comparisons -diagonal elements. Total_dissimilarity data-frame observed comparisons   comparisons comparisons, alongside corresponding   within-comparison -comparisons dissimilarity. data-frame   sorted decreasing within dissimilarity 'type'. Types_used data-frame type mode (.e., double integer)   characteristic. Total_missing percentage missing cases dataset,   calculated ratio total missing cases product number   studies number characteristics. Cluster_comp data-frame studies cluster   belong (based argument optimal_clusters. Table_average_silhouette_width data-frame average   silhouette width range 2 P-1 trials, P number   trials. Table_cophenetic_coefficient data-frame cophenetic   correlation coefficient eight linkage methods (Ward's two   versions, single, complete, average, Mcquitty, median centroid).   data-frame sorted decreasing order cophenetic correlation   coefficient. Optimal_link optimal linkage method (ward.D, ward.D2, single,   complete, average, mcquitty, median, centroid) based cophenetic   correlation coefficient. get_plots = FALSE list elements mentioned   returned. get_plots = TRUE, comp_clustering returns   series plots addition list elements mentioned : Within_comparison_dissimilarity violin plot integrated box   plots dots study dissimilarities per observed comparison   (x-axis). Violins sorted descending order within-comparison   dissimilarities (blue point). Between_comparison_dissimilarity violin plot integrated box   plots dots study dissimilarities per comparison   comparisons (x-axis). Violins sorted descending order   -comparison dissimilarities (blue point). Dissimilarity_heatmap heatmap within-comparison   -comparison dissimilarities (informative = TRUE).   Diagonal elements refer within-comparison dissimilarity,   -diagonal elements refer -comparisons dissimilarity. Using   threshold high similarity (specified using argument   threshold), cells equal threshold highlighted   orange; otherwise, green. heatmap aids finding 'hot spots'   comparisons may violate plausibility transitivity   network. Single-study comparisons indicated white numbers. Profile_plot profile plot average silhouette width   range 2 P-1 clusters, P number trials.   candidate optimal number  clusters indicated red point   directly line. Silhouette_width_plot silhouette plot illustrating silhouette   width trial, trials sorted decreasing order within   cluster belong. output obtained calling   silhouette function R-package   cluster. Barplot_comparisons_cluster stacked barplot percentage   trials comparison found clusters (based argument   optimal_clusters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"correct type mode columns input must ensured use   function comp_clustering. first three columns referring   trial name, first second arm comparison, respectively, must   character. remaining columns referring   characteristics must double integer depending   whether corresponding characteristic refers quantitative   qualitative variable. type mode column assessed   comp_clustering using base function typeof. Note   comp_clustering invites unordered ordered variables;   latter, add argument ordered = TRUE base function   factor(). interventions sorted ascending order   identifier number within trials first intervention column   (second column input) control arm every pairwise   comparison. important ensure consistency intervention   order within comparisons obtained related functions. comp_clustering excludes dataset following type   characteristics: () completely missing characteristics   (ii) characteristics missing values one studies   least one non-single-stufy comparison. proceeds clustering   process. cophenetic correlation coefficient calculated using   cophenetic function alongside   hclust function selected linkage methods. comp_clustering can used network least three   comparisons. Otherwise, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Gower J. General Coefficient Similarity Properties. Biometrics 1971;27(4):857--71. doi: 10.2307/2528823 Sokal R, Rohlf F. Comparison Dendrograms Objective Methods. Int Assoc Plant Taxon 1962;11(2):33--40. doi: 10.2307/1217208 Handl J, Knowles J, Kell DB. Computational cluster validation post-genomic data analysis. Biometrics 2005;21(15):3201--120. doi: 10.1093/bioinformatics/bti517 Rousseeuw PJ. Silhouettes: graphical aid interpretation validation cluster analysis. J Comput Appl Math 1987;20:53--65.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the dataset in the proper format for R2jags — data_preparation","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data_preparation prepares dataset proper format   R2jags returns list elements run_model inherits   via argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"","code":"data_preparation(data, measure)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data data-frame one-trial-per-row format arm-level data. See 'Format' run_model. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"list data-frames following elements passed   run_model: pseudo_m pseudo-data-frame values -1 m   corresponding trial-arms unreported reported missing participant   outcome data, respectively (see 'Details'). m number missing participant outcome data   trial-arm (see 'Details'). N number randomised participants trial-arm. t intervention identifier trial-arm. pseudo-data-frame indicates whether missing participant   outcome data reported observed trial-arm   (see 'Details'). measure effect measure analysed outcome. y0 observed mean value outcome trial-arm,   outcome continuous. se0 observed standard deviation outcome   trial-arm, outcome continuous. r number observed events outcome   trial-arm, outcome binary.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data_preparation prepares data Bayesian analysis   (See 'Format' run_model). data_preparation   creates pseudo-data-frames m_new, , m_pseudo   dimensions element N. m_new takes   zero value observed trial-arms unreported missing   participant outcome data (.e., m equals NA   corresponding trial-arms), value m observed   trial-arms reported missing participant outcome data, NA   unobserved trial-arms. dummy data-frame takes   value one observed trial-arms reported missing participant   outcome data, zero value observed trial-arms unreported   missing participant outcome data (.e., m_new equals zero   corresponding trial-arms), NA unobserved trial-arms.   Thus, indicates whether missing participant outcome data   collected observed trial-arms. user defined   element m data_preparation, m_new   take zero value observed trial-arms indicate missing   participant outcome data collected analysed outcome.   m_new used following functions   package: run_model, run_metareg,   prepare_model, run_nodesplit,   prepare_nodesplit, run_ume,   prepare_ume,  run_sensitivity.   Lastly, m_pseudo variant m_new: takes value -1   observed trial-arms unreported missing participant outcome   data (.e., m equals NA corresponding trial-arms),   value m observed trial-arms reported   missing participant outcome data, NA unobserved   trial-arms. used function heatmap_missing_network   calculate illustrate percentage missing participant outcome data   across observed comparisons interventions network   function heatmap_missing_dataset illustrate trial-arms   unreported missing participant outcome data. pseudo-data-frames   aim retain trials without information missing participant outcome   data. Furthermore, data_preparation sorts interventions across   arms trial ascending order correspondingly   remaining elements data (See 'Format'   run_model). data_preparation considers first   column t control arm every trial. Thus,   sorting ensures interventions lower identifier   consistently treated control arm trial. case   relevant non-star-shaped networks.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"dendro_heatmap creates dendrogram alongside heatmap   Gower dissimilarities among trials network specific   linkage method number clusters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"","code":"dendro_heatmap(input, label_size = 12, axis_text_size = 10)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"input object S3 class comp_clustering. See 'Value' comp_clustering. label_size positive integer font size heatmap elements. label_size determines size argument found geom's aesthetic properties R-package ggplot2. axis_text_size positive integer font size row column names heatmap. axis_text_size determines axis.text argument found theme's properties R-package ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"dendro_heatmap uses heatmaply function R-package  heatmaply create   cluster heatmap selected linkage method number clusters.   function uses different colours indicate clusters directly   dendrogram, specified using R-package  dendextend. names   leaves refer trials corresponding pairwise comparison. @details    function inherits linkage method number optimal clusters    comp_clustering function. Remember: using comp_clustering function, inspect    average silhouette width wide range clusters decide    optimal number clusters.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to describe the evidence base — describe_network","title":"A function to describe the evidence base — describe_network","text":"Calculates necessary elements describe evidence base   outcome across network, interventions, observed   comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to describe the evidence base — describe_network","text":"","code":"describe_network(data, drug_names, measure, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to describe the evidence base — describe_network","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions order appear argument data. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to describe the evidence base — describe_network","text":"describe_network returns following data-frames describe   evidence base: network_description number : interventions, possible   comparisons, direct indirect comparisons, number trials total,   number two-arm multi-arm trials, number randomised participants,   proportion participants completing trial (completers).   outcome binary, number trials least one zero   event, number trials zero events also   presented. table_interventions intervention, number trials,   number randomised participants, proportion completers.   outcome binary, data-frame presents also corresponding   proportion total observed events, minimum, median maximum   proportion observed events across corresponding trials. table_comparisons Identical structure table_interventions   observed comparison network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to describe the evidence base — describe_network","text":"describe_network calls data_preparation   facilitate calculations. Furthermore, describe_network exports data-frames separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to describe the evidence base — describe_network","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"distr_characteristics uses violin bar plots visualise   distribution characteristic dataset either per comparison   cluster comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"","code":"distr_characteristics(   input,   drug_names,   rename_char = NULL,   cluster = NULL,   label_size = 4,   title_size = 14,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 13 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first three columns refer trial name, first second arm comparison (identifier number), respectively. remaining columns refer summary characteristics. See 'Details' specifying columns. drug_names vector labels name interventions order appear argument input. rename_char list two elements: () numeric vector position characteristics input, (ii) character vector names characteristics, wished appear title plots. argument optional, case user wants control appearance titles. cluster object S3 class comp_clustering information cluster comparison. See 'Value' comp_clustering. cluster provided, function presents distribution characteristics per comparison; otherwise per cluster. latter, function prints table comparisons corresponding cluster. label_size positive integer font size labels plots. label_size determines size argument found geom's aesthetic properties R-package ggplot2). title_size positive integer font size legend title plots. title_size determines title argument found theme's properties R-package ggplot2. axis_title_size positive integer font size axis title plots. axis_title_size determines axis.title argument found theme's properties R-package ggplot2. axis_text_size positive integer font size axis text plots. axis_text_size determines axis.text argument found theme's properties R-package ggplot2). axis_x_text_angle positive integer angle axis text plots. axis_text_angle determines axis.text.x argument found theme's properties R-package ggplot2). legend_text_size positive integer font size legend text plots. legend_text_size determines legend.text argument found theme's properties R-package ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"distr_characteristics returns list plots using proper plot   (violin bar plot) characteristic. size dots   violin plot (amalgamated box plots dots) proportional   total sample size study: large sample size study,   larger size corresponding point.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"correct type mode columns input must ensured use   function distr_characteristics. first three columns   referring trial name, first second arm comparison,   respectively, must character. remaining columns referring   characteristics must double integer   depending whether corresponding characteristic refers   quantitative qualitative variable. type mode column   assessed distr_characteristics using base function   typeof. interventions sorted ascending order   identifier number within trials first treatment column   (second column input) control arm every pairwise   comparison. important ensure consistency order   interventions within comparisons obtained related   functions.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparator-specific forest plot for network meta-analysis — forestplot","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Provides forest plot posterior median 95% credible   prediction intervals comparisons selected intervention   (comparator) network, forest plot corresponding   SUCRA values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"","code":"forestplot(full, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"full object S3 class run_model. See 'Value' run_model. compar character indicate comparator intervention. must name found drug_names. drug_names vector labels name interventions order appear argument data run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"panel two forest plots: (1) forest plot effect   estimates predictions comparisons selected intervention   network, (2) forest plot posterior mean 95% credible   interval SUCRA values interventions (Salanti et al., 2011).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"y-axis forest plot effect sizes displays   labels interventions network; selected intervention   comprises compar argument annotated plot   label 'Comparator intervention'.   comparison selected intervention, 95% credible   prediction intervals displayed overlapping lines different   colours. corresponding numerical results displayed line:   95% credible intervals found parentheses, 95% predictive   intervals found brackets. Odds ratios, relative risks, ratio   means reported original scale exponentiation   logarithmic scale. y-axis forest plot SUCRA values displays   labels interventions network.   corresponding numerical results displayed line.   Three coloured rectangles appear forest plot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. plots, interventions sorted descending order   SUCRA values. forestplot can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"","code":"data(\"nma.liu2013\")  # Show the first six trials of the dataset (one-trial-per-row format) head(nma.liu2013) #>                study t1 t2 t3 r1 r2 r3 m1 m2 m3  n1  n2 n3 #> 356    Richard, 2012  1  3  4 15 16 23  6  8  4  39  42 34 #> 357     Barone, 2010  1  2 NA 27 38 NA 19 20 NA 152 144 NA #> 358 Weinbtraub, 2010  1  3 NA  2  5 NA  6  6 NA  27  28 NA #> 359      Menza, 2009  1  4  5  4  2  9  6  7  5  17  18 17 #> 360      Devos, 2008  1  4  5  4  8 11  0  2  1  16  15 17 #> 361   Antonini, 2006  4  5 NA 10  8 NA  4  4 NA  16  15 NA  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine reuptake inhibitor\", \"serotonin reuptake inhibitor\", \"tricyclic antidepressant\", \"pergolide\")  # Create the forest plot forestplot(full = res,            compar = \"placebo\",            drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Provides forest plot posterior median 95% credible   prediction intervals comparisons selected intervention   (comparator) network network meta-analysis   network meta-regression specified level value investigated   covariate, forest plot corresponding SUCRA values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"","code":"forestplot_metareg(full, reg, compar, cov_value, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. compar character indicate comparator intervention. must name found drug_names. cov_value list two elements following order: number covariate value interest (see 'Arguments' run_metareg), character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"panel two forest plots: (1) forest plot effect   estimates predictions comparisons selected intervention   network network meta-analysis network meta-regression   specified level value investigated covariate, (2) forest   plot posterior mean 95% credible interval SUCRA values   interventions (Salanti et al., 2011).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"y-axis forest plot effect sizes displays   labels interventions network; selected intervention   comprises compar argument annotated plot   label 'Comparator intervention'.   comparison selected intervention, 95% credible   prediction intervals displayed overlapping lines. Black lines refer   estimation analyses. Green red lines refer prediction   network meta-analysis network meta-regression, respectively.   corresponding numerical results displayed line:   95% credible intervals found parentheses, 95% predictive   intervals found brackets. Odds ratios, relative risks, ratio   means reported original scale exponentiation   logarithmic scale. y-axis forest plot SUCRA values displays   labels interventions network.   corresponding numerical results displayed line.   Three coloured rectangles appear forest plot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. plots, interventions sorted descending order   SUCRA values based network meta-analysis. obtain posterior distribution SUCRAs network   meta-regression specified level value investigated   covariate, two-step procedured followed. First, posterior median   standard deviation basic parameters corresponding beta   coefficients considered calculate meadin standard deviation   basic parameters selected level value investigated   covariate: d + beta * cov_value. , calculated values fed   BUGS code get posterior distribution SUCRA. progress   simulation appears R console. forestplot_metareg integrated metareg_plot. forestplot_metareg can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi:10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"gower_distance calculate Gower's dissimilarity coefficient    pairs trials included network interventions, considering    several characteristics measured trial level.    takes values 0 1, 0 implying complete similarity 1   complete dissimilarity.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"","code":"gower_distance(input)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first two columns refer trial name, pairwise comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"gower_distance returns following list elements: Dissimilarity_table lower -diagonal matrix 'dist' class   dissimilarities pairs trials. Types_used data-frame type mode (.e., double integer)   characteristic. Total_missing percentage missing cases comparison,   calculated ratio total missing cases product number   studies number characteristics.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"correct type mode columns input must ensured use   function gower_distance. first two columns referring   trial name, pairwise comparison, respectively, must   character. remaining columns referring   characteristics must double integer depending   whether corresponding characteristic refers quantitative   qualitative variable. type mode column assessed   gower_distance using base function typeof. Note   gower_distance invites unordered ordered variables;   latter, add argument ordered = TRUE base function   factor(). gower_distance integrated function   comp_clustering.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"Gower J. General Coefficient Similarity Properties. Biometrics 1971;27(4):857--71. doi: 10.2307/2528823","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Illustrates proportion missing participants   associated risk bias arm every trial dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"","code":"heatmap_missing_dataset(data, trial_names, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. trial_names vector labels name trials order appear argument data. drug_names vector labels name interventions order appear argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"heatmap presenting proportion missing participants   trial-arm dataset. columns rows heatmap   correspond interventions trials, respectively.   'five--twenty' rule Sackett colleagues (1997) used   characterise proportion missing participants associated   low (5%), moderate (5% 20%), high   risk bias (20%). Low, moderate, high risk bias due   missing participants indicated using green, orange, red colour,   respectively. function also applicable pairwise meta-analysis.   missing participants reported trial-arm,   corresponding cell indicated grey.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"number missing participants extracted   arm trials, execution function stopped   error message printed R console. 80 trials, value proportion missing   participants appear heatmap. number   cells distinguishable.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Sackett DL, Richardson WS, Rosenberg WM, Haynes RB. Evidence-based medicine: practice teach EBM. New York: Churchill Livingstone 1997. ISBN: 0-443-05686-2.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"","code":"data(\"nma.schwingshackl2014\")  # Return the first six trials of the dataset head(nma.schwingshackl2014) #>            study t1 t2 t3    y1    y2 y3  sd1  sd2 sd3 m1 m2 m3 n1 n2 n3 #> 1   Bacchi, 2012  1  2 NA -0.40 -0.35 NA 0.44 0.48  NA  1  1 NA 20 20 NA #> 2       Ku, 2010  1  2 NA -0.60 -0.30 NA 1.20 0.90  NA  0  0 NA 15 13 NA #> 3      Moe, 2011  1  2 NA -0.53 -0.35 NA 0.45 0.40  NA  1  2 NA 13 13 NA #> 4       Ng, 2010  1  2 NA -0.30 -0.40 NA 0.88 0.60  NA  0  0 NA 30 30 NA #> 5   Sukala, 2012  1  2 NA -0.10 -0.10 NA 0.51 0.93  NA  4  4 NA 13 13 NA #> 6 Balducci, 2009  1  3 NA  6.34  6.65 NA 0.94 1.08  NA  0  0 NA 20 22 NA  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"aerobic\", \"resistance\", \"combined training\")  # Create the heatmap heatmap_missing_dataset(data = nma.schwingshackl2014,                         trial_names = nma.schwingshackl2014$study,                         drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Illustrates distribution missing participants   associated risk bias intervention observed comparison   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"","code":"heatmap_missing_network(data, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions order appear argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"heatmap proportion missing participants   intervention observed comparison network. cell annotates   median, minimum maximum (latter two parenthesis) proportion   missing participants across corresponding trials.   proportion missing participants intervention observed   comparison depicted main diagonal lower -diagonal   white black colour, respectively. pairwise comparisons read   left right. 'five--twenty' rule Sackett colleagues (1997) used   characterise median proportion missing participants   associated low (5%), moderate (5% 20%),   high risk bias (20%). Low, moderate, high risk   bias associated missing participants indicated using green, orange,   red colour, respectively. missing participants   reported intervention comparison, corresponding cell   indicated grey. summary statistics (median, minimum maximum) intervention   (main diagonal; white font) result calculating proportion   missing participants arm every trial summarising across   corresponding trial-arms. Similarly, summary statistics   observed comparison (lower -diagonal; black font) result   calculating proportion total missing participants trial   summarising across corresponding trials.  heatmap_missing_network can used network   interventions. Otherwise, execution function stopped   error message printed R console. Likewise,   number missing participants extracted arm   trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Sackett DL, Richardson WS, Rosenberg WM, Haynes RB. Evidence-based medicine: practice teach EBM. New York: Churchill Livingstone 1997. ISBN: 0-443-05686-2.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"","code":"data(\"nma.stowe2011\")  # Return the first six trials of the dataset head(nma.stowe2011) #>                study t1 t2    y1    y2  sd1  sd2 m1 m2  n1  n2 #> 1   DA (B): Interntl  1  2 -0.30 -1.20 4.36 4.32  7  3  83  84 #> 2      DA (C): Spain  1  2 -2.47 -3.33 3.91 3.48  8  9  20  23 #> 3         DA (C): UK  1  2 -0.70 -2.00 2.24 2.33  2  1  18  19 #> 4      DA (C): USA 1  1  2 -0.77 -2.08 3.32 3.21 19 34  65 123 #> 5 DA (Pe): N America  1  2 -0.20 -1.80 4.79 4.81  0  0 187 189 #> 6 DA (Pr): CLEOPATRA  1  2 -0.90 -2.80 5.00 2.83  1  1 101 201  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"PBO+LD\", \"DA+LD\", \"COMTI+LD\", \"MAOBI+LD\")  # Create the heatmap heatmap_missing_network(data = nma.stowe2011,                         drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of robustness — heatmap_robustness","title":"Heatmap of robustness — heatmap_robustness","text":"Facilitates detection comparisons associated   lack robustness context sensitivity analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of robustness — heatmap_robustness","text":"","code":"heatmap_robustness(robust, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of robustness — heatmap_robustness","text":"robust object S3 class robustness_index robustness_index_user. See 'Value' robustness_index robustness_index_user. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of robustness — heatmap_robustness","text":"heatmap_robustness first prints R console message   threshold robustness determined user  robustness_index robustness_index_user.   , returns lower triangular heatmap matrix robustness   index value possible pairwise comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap of robustness — heatmap_robustness","text":"heatmap illustrates robustness index possible   pairwise comparison network. pairwise comparisons read   left right. Comparisons highlighted green red colour imply   robust frail conclusions primary analysis, respectively.   corresponds robustness index least selected   threshold robustness. heatmap_robustness inherits threshold   robustness selected robustness_index   robustness_index_user function.   robustness index pairwise comparison also appears   corresponding cell.   least one comparison frail conclusions, primary   analysis results may questionable whole network   (Spineli et al., 2021). heatmap_robustness restricted sensitivity   analysis concerning impact missing participant outcome data. heatmap_robustness can used network interventions.   Otherwise, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of robustness — heatmap_robustness","text":"Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of robustness — heatmap_robustness","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of robustness — heatmap_robustness","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_baker.rds',                     package = 'rnmamod'))  # Calculate the robustness index robust <- robustness_index(sens = res_sens,                            threshold = 0.28) #> The value 0.28 was assigned as 'threshold' for odds ratio.  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Create the heatmap of robustness heatmap_robustness(robust = robust,                    drug_names = interv_names) #> The value 0.28 was assigned as 'threshold' for odds ratio."},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Generates prior distribution (weakly informative empirically-based)   heterogeneity parameter.   run_model inherits heterogeneity_param_prior via   argument heter_prior.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"","code":"heterogeneity_param_prior(measure, model, heter_prior)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". heter_prior list three elements following order: 1) character string indicating distribution (currently available) values \"halfnormal\", \"uniform\", \"lognormal\", \"logt\"; 2) two numeric values refer parameters selected distribution.  \"lognormal\", \"logt\" numbers refer mean precision, respectively. \"halfnormal\", numbers refer zero scale parameter (equal 4 1 corresponding precision scale parameter 0.5 1). \"uniform\", numbers refer minimum maximum value distribution.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"value passed run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"names (current) prior distributions follow JAGS syntax.   mean precision \"lognormal\" \"logt\" align   values proposed Turner et al. (2015) Rhodes et al. (2015)   corresponding empirically-based prior distributions   measure \"\" \"SMD\", respectively.   users may refer Dias et al. (2013) determine minimum   maximum value uniform distribution, Friede et al. (2017)   determine mean precision half-normal distribution.   model \"FE\", heterogeneity_param_prior   ignored run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607--17. doi: 10.1177/0272989X12458724 Friede T, Roever C, Wandel S, Neuenschwander B. Meta-analysis two studies presence heterogeneity applications rare diseases. Biom J 2017;59(4):658--71. doi: 10.1002/bimj.201500236 Rhodes KM, Turner RM, Higgins JP. Predictive distributions developed extent heterogeneity meta-analyses continuous outcome data. J Clin Epidemiol 2015;68(1):52--60. doi: 10.1016/j.jclinepi.2014.08.012 Turner RM, Jackson D, Wei Y, Thompson SG, Higgins JP. Predictive distributions -study heterogeneity simple methods application Bayesian meta-analysis. Stat Med 2015;34(6):984--98. doi: 10.1002/sim.6381","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the frail comparisons in multi-arm trials — improved_ume","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Detects frail comparisons multi-arm trials, ,   comparisons non-baseline interventions investigated   two-arm trial network (Spineli, 2021). 'original' model   Dias et al. (2013) omits frail comparisons estimation process   unrelated mean effects model. Consequently, posterior   distribution coincides prior distribution yielding implausible   posterior standard deviations.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"","code":"improved_ume(t, N, ns, na)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"t data-frame one-trial-per-row format containing intervention identifier arm every trial (see 'Details' , 'Format' run_model). N data-frame one-trial-per-row format containing number participants randomised assigned intervention arm every trial (see 'Details' , 'Format' run_model). ns scale parameter number trials. na vector length equal ns number arms trial.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"output improved_ume list elements   inherited run_ume: nbase_multi scalar parameter number frail comparisons. t1_bn vector numeric values referring first arm   frail comparison. t2_bn vector numeric values referring second arm   frail comparison. ref_base scalar referring reference intervention   subnetwork interventions frail comparisons. base vector numeric values referring baseline   intervention multi-arm trials contain frail comparisons. obs_comp data-frame indicates many two-arm   multi-arm trials included pairwise comparison observed   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"improved_ume integrated run_ume   calls output data_preparation sorting   rows multi-arm trials appear bottom dataset.   multi-arm trials frail comparisons network,   improved_ume returns element obs_comp   (see, 'Value').","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot currently prepares table results    average silhouette width range clusters, visualises    results using profile plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"","code":"internal_measures_plot(   input,   optimal_link,   label_size = 4,   axis_title_size = 14,   axis_text_size = 14 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"input object 'dist' class. lower -diagonal matrix dissimilarities pairs comparisons. optimal_link character string values \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\" optimal linkage method, corresponding highest cophenetic correlation coefficient value. label_size positive integer font size labels  profile plot average silhouette width per candidate cluster.  label_size determines size argument found geom's  aesthetic properties R-package ggplot2. axis_title_size positive integer font size axis title profile plot average silhouette width per candidate cluster.  axis_title_size determines axis.title argument found  theme's properties R-package ggplot2. axis_text_size positive integer font size axis text profile plot average silhouette width per candidate cluster.  axis_text_size determines axis.text argument found  theme's properties R-package  ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot currently returns following list    elements: Table_internal_measures data-frame average silhouette width    range 2 P-1 clusters, P number trials Internal_measures_panel profile plot average silhouette    width range 2 P-1 clusters, P number    trials candidate optimal number clusters indicated    red point directly line.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot also calls function   comp_clustering define argument optimal_link   create silhouette plot selected number clusters. internal_measures_plot calls     silhouette function R-package    cluster obtain   results average silhouette candidate cluster. internal_measures_plot integrated function    comp_clustering.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"Handl J, Knowles J, Kell DB. Computational cluster validation post-genomic data analysis. Biometrics 2005;21(15):3201--120. doi: 10.1093/bioinformatics/bti517 Rousseeuw PJ. Silhouettes: graphical aid interpretation validation cluster analysis. J Comput Appl Math 1987;20:53--65.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Creates panel interval plots summary effect sizes   consistency model unrelated mean effects model.   number interval plots equals number pairwise comparisons   observed network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"","code":"intervalplot_panel_ume(full, ume, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"full object S3 class run_model. See 'Value' run_model. ume object S3 class run_ume. See 'Value' run_ume. drug_names vector labels name interventions order appear argument data run_model. argument drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"panel interval plots posterior mean 95% credible   interval summary effect size consistency model   improved unrelated mean effects model (Spineli, 2021) pairwise   comparisons observed network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"intervalplot_panel_ume integrated   ume_plot function. consistency model unrelated   mean effects model abbreviated y-axis 'NMA model'   'UME model', respectively. intervals highlighted green,   corresponding summary effect sizes cross vertical line   difference, red otherwise. Grey panels refer frail comparisons   detected improved_ume function (see 'Details'   improved_ume). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, intervalplot_panel_ume   currently presents results odds ratio scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Produces barplot Kullback-Leibler divergence measure   re-analysis primary analysis pairwise   comparison. Currently, kld_barplot used concerning impact   missing participant outcome data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"","code":"kld_barplot(robust, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"robust object S3 class robustness_index. See 'Value' robustness_index. compar character vector two elements indicates pairwise comparison interest. first element refers 'experimental' intervention second element refers 'control' intervention comparison. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"kld_barplot returns panel barplots   Kullback-Leibler divergence measure re-analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"kld_barplot uses scenarios inherited   robustness_index via run_sensitivity   function. scenarios missingness parameter (see 'Details'   run_sensitivity) compared interventions split   Extreme, Sceptical, Optimistic following   classification Spineli et al. (2021). class, bars green,   orange, red colour refer scenarios without distance, less distant,   distant primary analysis   (missing--random assumption). kld_barplot can used missing participant outcome   data extracted least one trial. Otherwise, execution   function stopped error message printed   R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_taylor.rds',                     package = 'rnmamod'))  # Calculate the robustness index robust <- robustness_index(sens = res_sens,                            threshold = 0.17) #> The value 0.17 was assigned as 'threshold' for standardised mean difference.  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"inositol\")  # Create the barplot for the comparison 'inositol versus placebo' kld_barplot(robust = robust,             compar = c(\"inositol\", \"placebo\"),             drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"League heatmap for estimation — league_heatmap","title":"League heatmap for estimation — league_heatmap","text":"one outcome, creates heatmap estimated effect measure   possible comparisons interventions network.   two outcomes, heatmap illustrates two outcomes   effect measure upper lower -diagonals   possible comparisons interventions network.   function can also used illustrate results two different   models outcome effect measure.   league_heatmap can used random-effects fixed-effect   network meta-analysis, network meta-regression, series pairwise   meta-analyses.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League heatmap for estimation — league_heatmap","text":"","code":"league_heatmap(   full1,   full2 = NULL,   cov_value = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL,   show = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League heatmap for estimation — league_heatmap","text":"full1 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. full2 object S3 class run_model network meta-analysis, run_metareg network meta-regression, run_series_meta series pairwise meta-analyses. See 'Value' run_model, run_metareg, run_series_meta. cov_value list two elements following order: number covariate value interest character name covariate. See also 'Details'. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome model full1. name2 text title results refer outcome model full2. show vector least three character strings refer names interventions exactly defined drug_names1. , league table created interventions . show defined, league table present interventions defined drug_names1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League heatmap for estimation — league_heatmap","text":"heatmap league table showing posterior median 95%   credible interval comparisons -diagonals,   posterior mean SUCRA values diagonal.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League heatmap for estimation — league_heatmap","text":"heatmap_league offers following options display   one estimated effect measure () pairwise comparisons: one outcome, results lower triangle referring    comparisons opposite direction converting negative values    positive values (absolute logarithmic scale), vice versa.    Comparisons interventions read left right.    Therefore, cell refers corresponding row-defining intervention    column-defining intervention.    Results indicate strong evidence favour    row-defining intervention (.e. respective 95% credible interval    include null value) indicated bold. message printed    R console read heatmap; two outcomes model, namely, network meta-analysis (via    run_model) network meta-regression (via    run_metareg).    one outcomes includes interventions, argument    full1 considered outcome.    Comparisons interventions read follows: upper    diagonal, cell refers corresponding row-defining intervention    column-defining intervention, lower diagonal,    cell refers corresponding column-defining intervention    row-defining intervention. Results indicate strong evidence (.e.    respective 95% credible interval include null value)    indicated bold. message printed R console read    heatmap; two models outcome, namely, network meta-analysis    versus network meta-regression, network meta-analysis versus series    pairwise meta-analyses.    instructions read heatmap line previous point.    message printed R console read heatmap. beneficial outcome, red favours first intervention   comparison, blue favours second intervention. harmful   outcome, blue favours first intervention comparison, red   favours second intervention. larger treatment effect,   darker colour shade. function displays effect measure inherited argument   full1. binary outcome, can display odds ratio,   relative risk, risk difference. See 'Details'   run_model relative risk, risk difference.   continuous outcome, can display mean difference, standardised   mean difference, ratio means. Odds ratios, relative risk ratio   means reported original scale exponentiation   logarithmic scale. rows columns heatmap display names   interventions  sorted decreasing order best worst   based SUCRA value (Salanti et al., 2011) outcome model   argument full1. -diagonals contain posterior   median 95% credible interval effect measure (according   argument measure inherited argument full1)   corresponding comparisons. main diagonal contains posterior mean SUCRA corresponding   interventions arguments full1 refers   run_model function. arguments full1   refers run_metareg function, p-score   (Ruecker Schwarzer, 2015) calculated intervention   taking account covariate value argument cov_value.   P-score 'frequentist analogue SUCRA'   (Ruecker Schwarzer, 2015). case network meta-regression, covariate binary,   specify second element cov_value name level   heatmap created. league_heatmap can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League heatmap for estimation — league_heatmap","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League heatmap for estimation — league_heatmap","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"League heatmap for estimation — league_heatmap","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the league heatmap league_heatmap(full1 = res,                drug_names1 = interv_names) #> Tips to read the table: row versus column."},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"League heatmap for prediction — league_heatmap_pred","title":"League heatmap for prediction — league_heatmap_pred","text":"one outcome, creates heatmap predicted effect measure   possible comparisons interventions network.   two outcomes, heatmap illustrates two outcomes   effect measure upper lower -diagonals possible   comparisons interventions network.   league_heatmap_pred can used random-effects   network meta-analysis network meta-regression.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League heatmap for prediction — league_heatmap_pred","text":"","code":"league_heatmap_pred(   full1,   full2 = NULL,   cov_value = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL,   show = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League heatmap for prediction — league_heatmap_pred","text":"full1 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. full2 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. cov_value list two elements following order: number covariate value interest character name covariate. See also 'Details'. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome model full1. name2 text title results refer outcome model full2. show vector least three character strings refer names interventions exactly defined drug_names1. , league table created interventions . show defined, league table present interventions defined drug_names1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League heatmap for prediction — league_heatmap_pred","text":"league heatmap posterior median 95% prediction interval   effect measure (according argument measure defined  run_model) possible comparisons -diagonals,   posterior mean SUCRA values diagonal.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League heatmap for prediction — league_heatmap_pred","text":"heatmap_league offers following options display   one estimated effect measure () pairwise comparisons: one outcome, results lower triangle referring    comparisons opposite direction converting negative values    positive values (absolute logarithmic scale), vice versa.    Darker shades red green correspond larger treatment effects    upper lower triangle, respectively, beneficial outcome,    vice versa harmful outcome. Comparisons interventions    read left right. Therefore, cell refers    corresponding row-defining intervention column-defining    intervention. Results indicate strong evidence favour    row-defining intervention (.e. respective 95% prediction interval    include null value) indicated bold. message printed    R console read heatmap; two outcomes model, namely, network meta-analysis (via    run_model) network meta-regression (via    run_metareg).    one outcomes includes interventions, argument    full1 considered outcome.    Comparisons interventions read follows: upper    diagonal, cell refers corresponding row-defining intervention    column-defining intervention, lower diagonal,    cell refers corresponding column-defining intervention    row-defining intervention. Results indicate strong evidence (.e.    respective 95% prediction interval include null value)    indicated bold. message printed R console read    heatmap; two models outcome, namely, network meta-analysis    versus network meta-regression. instructions read heatmap    line previous point. message printed R console    read heatmap. function displays effect measure inherited argument   full1. binary outcome, can display odds ratio,   relative risk, risk difference. See 'Details'   run_model relative risk, risk difference.   continuous outcome, can display mean difference, standardised   mean difference, ratio means. Odds ratios, relative risk ratio   means reported original scale exponentiation   logarithmic scale. rows columns heatmap display names interventions   sorted decreasing order best worst based   SUCRA value (Salanti et al., 2011) outcome model   argument full1. -diagonals contain posterior median   95% prediction interval effect measure (according argument   measure inherited argument full1)   corresponding comparisons. main diagonal contains SUCRA values corresponding   interventions argument full1 refers   run_model function.   argument full1 refers run_metareg   function, p-score (Ruecker Schwarzer, 2015) calculated   intervention taking account covariate value   argument cov_value. P-score 'frequentist analogue   SUCRA' (Ruecker Schwarzer, 2015). case network meta-regression, covariate binary,   specify second element cov_value name level   heatmap created. league_heatmap_pred can used network interventions.   case two interventions, execution function   stopped error message printed R console. Similarly,   function executed fixed-effect network meta-analysis   network meta-regression.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League heatmap for prediction — league_heatmap_pred","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League heatmap for prediction — league_heatmap_pred","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"League heatmap for prediction — league_heatmap_pred","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the league heatmap league_heatmap_pred(full1 = res,                     drug_names1 = interv_names) #> Tips to read the table: row versus column."},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"League table for relative and absolute effects — league_table_absolute","title":"League table for relative and absolute effects — league_table_absolute","text":"Provides league table estimated odds ratio, risk difference   per 1000 participants possible comparisons interventions   network. main diagonal table presents absolute risk   intervention network. league_table_absolute can used   random-effects fixed-effect network meta-analysis. function   used user access raw trial-level data   (one-trial-per-row format arm-level data).   league_table_absolute applied one binary outcome .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League table for relative and absolute effects — league_table_absolute","text":"","code":"league_table_absolute(full, drug_names, show = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League table for relative and absolute effects — league_table_absolute","text":"full object S3 class run_model. See 'Value' run_model. drug_names vector labels name interventions order appear argument data run_model. show vector least three character strings refer names interventions exactly defined drug_names. , league table created interventions . show defined, league table present interventions defined drug_names.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League table for relative and absolute effects — league_table_absolute","text":"league table showing posterior estimate 95% credible   interval odds ratio (upper -diagonals), risk difference per 1000   participants (lower -diagonals), absolute risks per 1000   participants (main diagonal).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League table for relative and absolute effects — league_table_absolute","text":"user must define argument measure = \"RD\"   run_model; otherwise, function stopped   error message printed R console. rows columns league table display names   interventions  sorted decreasing order best worst   based SUCRA value (Salanti et al., 2011) odds ratio.   upper -diagonals contain posterior median 95% credible interval   odds ratio, lower -diagonals contain posterior median   95% credible interval risk difference (per 1000 participants),   main diagonal comprises posterior median 95% credible interval   absolute risks (per 1000 participants)  corresponding   interventions. reference intervention network (  baseline risk selected ) indicated main diagonal   black, thick frame. Comparisons interventions read left right.   Results indicate strong evidence favor row-defining   intervention (.e. respective 95% credible interval include   null value) indicated bold. obtain unique absolute risks intervention, network   meta-analysis model extended incorporate transitive risks   framework, namely, intervention absolute risk regardless   comparator intervention(s) trial (Spineli et al., 2017).   absolute risks function odds ratio (base-case   effect measure binary outcome) selected baseline risk   reference intervention (Appendix Dias et al., 2013). See 'Arguments'   run_model. advocate using odds ratio effect   measure desired mathematical properties. , risk difference   can obtained function absolute risks corresponding   interventions comparison interest. league_table_absolute can used network   interventions. case two interventions, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League table for relative and absolute effects — league_table_absolute","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):1891.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League table for relative and absolute effects — league_table_absolute","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":null,"dir":"Reference","previous_headings":"","what":"League table for relative and absolute effects (user defined) — league_table_absolute_user","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"line league_table_absolute, provides league table   estimated odds ratio, risk difference per 1000 participants   possible comparisons interventions network.   main diagonal table presents absolute risk   intervention network. league_table_absolute_user requires   users input summary effect 95% credible confidence interval   basic parameters reported effect measure. function   used user access results published   systematic review rather raw trial-level data. latter case,   user consider function league_table_absolute.   league_table_absolute_user applied one binary outcome .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"","code":"league_table_absolute_user(   data,   measure,   base_risk,   drug_names,   show = NULL,   save_xls )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"data data-frame summary effects comparisons reference intervention network, known basic parameters. data-frame T rows (T number interventions network) four columns contain point estimate, lower upper bound 95% (confidence credible) interval corresponding basic parameters, ranking measure indicate order interventions hierarchy best worst possible choices non-zero positive integer rank, SUCRA value (Salanti et al., 2011) p-score value (Ruecker Schwarzer, 2015). first row data-frame refers selected reference intervention include (1) null value three times investigated effect measure (.e. 1 odds ratio relative risk, 0 risk difference), (2) value ranking measure. measure Character string indicating effect measure data. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. base_risk number interval (0, 1) indicates baseline risk selected reference intervention. drug_names vector labels name interventions order appear argument data. first intervention selected reference intervention. show vector least three character strings refer names interventions exactly defined drug_names. , league table created interventions . show defined, league table present interventions defined drug_names. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"league table showing estimate 95% confidence interval   odds ratio (upper -diagonals), risk difference per 1000   participants (lower -diagonals), absolute risks per 1000   participants (main diagonal).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"published results reported relative risk scale   (.e., measure = \"RR\"), function calculates odds ratios risk   differences (point estimate 95% confidence interval) possible   pairwise comparisons network based obtained absolute risks   selected baseline risk. Likewise, published results   odds ratio risk difference scale (.e., measure = \"\"   measure = \"RD\", respectively), function calculates risk   differences odds ratios (point estimate 95% confidence interval),   respectively, possible pairwise comparisons network based   obtained absolute risks selected baseline risk. rows columns league table display names   interventions  sorted decreasing order best worst   based ranking measure fourth column argument   data. upper -diagonals contain estimate 95%   confidence interval odds ratio, lower -diagonals contain   estimate 95% confidence interval risk difference (per 1000   participants), main diagonal comprises absolute risks   95% confidence interval (per 1000 participants) corresponding   non-reference interventions. reference intervention network   (baseline risk selected ) indicated main   diagonal black, thick frame. Comparisons interventions read left right.   Results indicate strong evidence favour row-defining   intervention (.e. respective 95% confidence interval include   null value) indicated bold. Furthermore, league_table_absolute_user exports   table_relative_absolute_effect, table relative   absolute effects basic parameters, 'xlsx' file (via   write_xlsx function) working   directory user. obtain unique absolute risks intervention, considered   transitive risks framework, namely, intervention   absolute risk regardless comparator intervention(s) trial   (Spineli et al., 2017). league_table_absolute_user can used network   interventions. case two interventions, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):1891.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Leverage plot — leverage_plot","title":"Leverage plot — leverage_plot","text":"Plots leverage square root   posterior mean residual deviance trial-arms model   interest.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leverage plot — leverage_plot","text":"","code":"leverage_plot(net, drug_names, title)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leverage plot — leverage_plot","text":"net object S3 class run_metareg, run_model, run_ume. See 'Value' run_metareg, run_model, run_ume. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. title title indicate model (consistency model, network meta-regression unrelated mean effects model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leverage plot — leverage_plot","text":"scatterplot leverage square root   posterior mean residual deviance trial-arms model   interest. green, yellow, red curves correspond parabola  \\(x^2 + y = k\\) \\(k\\) = 1, 2, 3, respectively. data points   correspond trial-arms. Data points found outside yellow parabola   linked pair numbers. first number refers position   trial dataset, second number refers   corresponding trial-arm (see 'Arguments' 'Value'  data_preparation). trial-arms contribute   1 deviance information criterion , hence, model's poor fit.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leverage plot — leverage_plot","text":"leverage_plot integrated ume_plot   function create leverage plot consistency model   unrelated mean effects model. plots appear side--side output   ume_plot. Dias et al. (2010) used leverage plots   investigate fit consistency inconsistency models--  latter node-splitting approach.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leverage plot — leverage_plot","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Leverage plot — leverage_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Evaluates whether convergence achieved   monitored parameters Bayesian models. Gelman-Rubin convergence   diagnostic, Markov Chain Monte Carl (MCMC) error relevant   diagnostic plots applied.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"","code":"mcmc_diagnostics(net, par = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"net object S3 class run_metareg, run_model, run_nodesplit, run_sensitivity, run_series_meta, run_ume. See 'Value' functions . par vector least one character string refers monitored parameters jagsfit object S3 class run_metareg, run_model, run_ume. selected parameters considered diagnostic plots (see 'Value'). argument ignored objects S3 class run_nodesplit, run_sensitivity, run_series_meta.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"mcmc_diagnostics considers following monitored parameters:  EM  estimated summary effect measure.  EM_pred  predicted summary effect measure.  delta  estimated trial-specific effect measure.  tau  -trial standard deviation.  direct  direct estimate split node (see 'Value'   run_nodesplit).  indirect  indirect estimate split node   (see 'Value' run_nodesplit).  diff  inconsistency factor split node (see 'Value'   run_nodesplit).  phi  informative missingness parameter.  beta  regression coefficient. monitored parameter mentioned , mcmc_diagnostics also   returns barplot ratio MCMC error posterior standard   deviation barplot Gelman-Rubin R diagnostic. Bars   correspond ratio less 5% indicated green (  corresponding parameters estimated accurately); otherwise,   bars indicated red (inaccurate estimation). Furthermore, bars   correspond R value less 1.10 indicated green (  corresponding parameters converged); otherwise, bars   indicated red (convergence achieved).  mcmc_diagnostics returns histograms barplots EM  run_sensitivity considered.  mcmc_diagnostics also uses  mcmcplot function R-package  mcmcplots create   HTML file panel diagnostic plots (trace, density,   autocorrelation) monitored parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"monitored parameter, mcmc_diagnostics considers   R-hat MCMC error compares thresholds 1.1 5%   posterior standard deviation (rule thumb), respectively.   Convergence achieved monitored parameter, R-hat   corresponding threshold. Visual inspection trace plots   posterior density monitored parameters also considered   drawing conclusions convergence.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_nodesplit' (using the default arguments) res <- readRDS(system.file('extdata/node_baker.rds', package = 'rnmamod'))  # Check convergence based on R-hat mcmc_diagnostics(net = res,                  par = c(\"tau\", \"EM[2,1]\", \"EM.pred[2,1]\")) #> R-hat < 1.10 is an indication of convergence. Visual inspection of the trace plot and posterior density of the monitored parameters should *also* be considered when concluding about convergence. #> Note: The argument 'par' is ignored. It is used only with 'run_metareg', 'run_model', and 'run_ume'. #> $Between_trial_SD  #>  #> $Direct_estimates  #>  #> $Indirect_estimates  #>  #> $Inconsistency_factors  #>  #> $table_tau #>  #>  #> Table: The (common) between-trial standard deviation #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>  #> $table_phi #>  #>  #> Table: The common informative missingness parameter #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>  #> $table_beta #>  #>  #> Table: The common regression coefficient #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for network meta-regression — metareg_plot","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Illustrates effect estimates, predictions regression   coefficients comparisons specified comparator intervention   selected covariate value also exports results Excel file.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for network meta-regression — metareg_plot","text":"","code":"metareg_plot(full, reg, compar, cov_value, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for network meta-regression — metareg_plot","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. compar character indicate comparator intervention. must name found drug_names. cov_value list two elements following order: number covariate value interest (see 'Arguments' run_metareg), character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for network meta-regression — metareg_plot","text":"metareg_plot prints R console message   parsimonious model () based DIC (red text). Furthermore,   function returns following list elements: table_estimates posterior median, 95% credible interval   summary effect measure (according argument measure   defined run_model) comparison selected   intervention network meta-analysis network meta-regression   based specified cov_value. table_predictions posterior median, 95% prediction   interval summary effect measure (according argument   measure defined run_model) comparison   selected intervention network meta-analysis network   meta-regression based specified cov_value. table_model_assessment DIC, total residual deviance,   number effective parameters, posterior median 95% credible   interval -trial standard deviation (tau) model   (Spiegelhalter et al., 2002). fixed-effect model   performed, metareg_plot return results tau.   binary outcome, results refer odds ratio scale. table_regression_coeffients posterior median 95%   credible interval regression coefficient(s) (according   argument covar_assumption defined run_metareg).   binary outcome, results refer odds ratio scale. interval_plot forest plot estimated predicted effect   sizes comparisons selected comparator intervention   network meta-analysis network meta-regression based specified   cov_value alongside forest plot corresponding SUCRA   values. See 'Details' 'Value' forestplot_metareg. sucra_scatterplot scatterplot SUCRA values   network meta-analysis SUCRA values network   meta-regression based specified cov_value. See 'Details'   'Value' scatterplot_sucra.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for network meta-regression — metareg_plot","text":"deviance information criterion (DIC) network   meta-analysis model compared DIC network meta-regression   model. difference DIC exceeds 5, network meta-regression   model preferred; difference DIC less -5, network   meta-analysis model preferred; otherwise, little choose   compared models. covariate binary, specify second element   cov_value name level output   created. Furthermore, metareg_plot exports tabulated results separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user. metareg_plot can used network interventions.   case two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--616. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for network meta-regression — metareg_plot","text":"","code":"data(\"nma.baker2009\")  # \\donttest{ # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Read results from 'run_metareg' (exchangeable structure) reg <- readRDS(system.file('extdata/reg_baker.rds', package = 'rnmamod'))  # Publication year as the covariate pub_year <- c(1996, 1998, 1999, 2000, 2000, 2001, rep(2002, 5), 2003, 2003,               rep(2005, 4), 2006, 2006, 2007, 2007)  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Plot the results from both models for all comparisons with salmeterol and # publication year 2000 metareg_plot(full = res,              reg = reg,              compar = \"salmeterol\",              cov_value = list(2000, \"publication year\"),              drug_names = interv_names) #> There is little to choose between the two models #> module glm loaded #> module dic loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 0 #>    Unobserved stochastic nodes: 7 #>    Total graph size: 287 #>  #> Initializing model #>  #> $table_estimates #>  #>  #> Table: Estimation for comparisons with salmeterol for 2000 #>  #> |versus salmeterol           | Median NMA |  95% CrI NMA  | Median NMR |  95% CrI NMR  | #> |:---------------------------|:----------:|:-------------:|:----------:|:-------------:| #> |budesonide                  |    0.57    | (0.25, 1.47)  |    0.56    | (0.17, 1.85)  | #> |budesonide plus formoterol  |    0.73    | (0.33, 1.75)  |    0.72    | (0.22, 2.39)  | #> |tiotropium                  |    0.95    | (0.66, 1.34)  |    1.01    | (0.63, 1.59)  | #> |fluticasone plus salmeterol |    1.01    |  (0.56, 1.9)  |    1.13    |  (0.5, 2.55)  | #> |fluticasone                 |    1.17    | (0.67, 2.19)  |    1.31    |  (0.6, 2.86)  | #> |formoterol                  |    1.44    | (0.83, 2.45)  |    1.21    | (0.57, 2.58)  | #> |placebo                     |    1.58    | (1.13, 2.27)* |    1.72    | (1.14, 2.61)* | #>  #> $table_predictions #>  #>  #> Table: Prediction for comparisons with salmeterol for 2000 #>  #> |versus salmeterol           | Median NMA | 95% CrI NMA  | Median NMR | 95% CrI NMR  | #> |:---------------------------|:----------:|:------------:|:----------:|:------------:| #> |budesonide                  |    0.57    | (0.24, 1.56) |    0.56    | (0.16, 1.94) | #> |budesonide plus formoterol  |    0.73    | (0.31, 1.88) |    0.73    | (0.21, 2.51) | #> |tiotropium                  |    0.96    | (0.56, 1.53) |    1.01    | (0.57, 1.78) | #> |fluticasone plus salmeterol |    1.01    | (0.52, 2.06) |    1.13    | (0.47, 2.72) | #> |fluticasone                 |    1.17    | (0.62, 2.41) |    1.31    | (0.56, 3.06) | #> |formoterol                  |    1.43    | (0.75, 2.71) |    1.21    | (0.53, 2.77) | #> |placebo                     |    1.57    |  (1, 2.68)   |    1.72    |  (1, 2.93)*  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment and between-trial standard deviation #>  #> |Analysis              |  DIC  |  pD   | Mean deviance | data points | Median tau | SD tau |95% CrI tau  | #> |:---------------------|:-----:|:-----:|:-------------:|:-----------:|:----------:|:------:|:------------| #> |Network meta-analysis | 89.16 | 34.97 |     54.19     |     50      |    0.14    |  0.09  |(0.01, 0.35) | #> |Meta-regression       | 90.83 | 36.95 |     53.88     |     50      |    0.13    |  0.09  |(0.01, 0.36) | #>  #> $table_regression_coeffients #>  #>  #> Table: Estimation of regression coefficient(s) #>  #> |versus salmeterol           | Median beta|95% CrI beta | #> |:---------------------------|-----------:|:------------| #> |budesonide                  |        1.00|(0.73, 1.36) | #> |budesonide plus formoterol  |        1.00|(0.73, 1.36) | #> |tiotropium                  |        0.98|(0.86, 1.07) | #> |fluticasone plus salmeterol |        0.97|(0.76, 1.1)  | #> |fluticasone                 |        1.01|(0.9, 1.2)   | #> |formoterol                  |        1.03|(0.91, 1.33) | #> |placebo                     |        0.96|(0.88, 1.05) | #>  #> $interval_plot  #>  #> $sucra_scatterplot  #>  # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"miss_characteristics hosts set visualisation tools assess   size pattern missing characteristics values dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"","code":"miss_characteristics(   input,   drug_names,   rename_char = NULL,   label_size = 4,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 14,   legend_title_size = 14,   strip_text_size = 14,   strip_text_angle = 0 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first two columns refer trial name, pairwise comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns. drug_names vector labels name interventions order appear argument input. rename_char list two elements: () numeric vector position characteristics input, (ii) character vector names characteristics, wished appear title plots. argument optional, case user wants control appearance titles. label_size positive integer font size labels plots. label_size determines size argument found geom's aesthetic properties R-package ggplot2). axis_title_size positive integer font size axis titles plots. axis_title_size determines axis.title argument found theme's properties R-package ggplot2). axis_text_size positive integer font size axis text plots. axis_text_size determines axis.text argument found theme's properties R-package ggplot2). axis_x_text_angle positive integer angle axis text plots related missing data. axis_text_angle determines axis.text.x argument found theme's properties R-package ggplot2). legend_text_size positive integer font size legend text plots. legend_text_size determines legend.text argument found theme's properties R-package ggplot2). legend_title_size positive integer font size legend title plots. legend_title_size determines legend.title argument found theme's properties R-package ggplot2). strip_text_size positive integer font size strip text plots. strip_text_size determines strip.text argument found theme's properties R-package ggplot2). strip_text_angle positive integer angle strip text plots. strip_text_angle determines strip.text argument found theme's properties R-package ggplot2).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"miss_characteristics returns following list elements: Barplot_missing_combined panel barplots percentage   missing observed cases comparison characteristic. Barplot_missing_characteristics barplot percentage   missing observed cases comparison. Tileplot_missing plot illustrates position missing   cases trial, comparison characteristic.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"correct type mode columns input must ensured use   function miss_characteristics. first two columns referring   trial name, pairwise comparison, respectively, must   character. remaining columns referring characteristics   must double integer depending whether   corresponding characteristic refers quantitative qualitative   variable. type mode column assessed   miss_characteristics using base function typeof. interventions sorted ascending order   identifier number within trials first treatment column   (second column input) control arm every pairwise   comparison. important ensure consistency order   interventions within comparisons obtained related   functions.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Generates mean value normal distribution missingness   parameter proper format depending assumed structure   missingness parameter. run_model inherits   missingness_param_prior argument mean_misspar   (see 'Argument' run_model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"","code":"missingness_param_prior(assumption, mean_misspar)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. mean_misspar numeric value vector two numeric values mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption assumption = \"IDE-ARM\".","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"scalar numeric vector passed run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"run_model considers informative missingness odds   ratio logarithmic scale binary outcome data (Spineli, 2019a;   Turner et al., 2015; White et al., 2008), informative missingness   difference means measure \"MD\" \"SMD\",   informative missingness ratio means logarithmic scale   measure \"ROM\" (Spineli et al., 2021;   Mavridis et al., 2015). assumption trial-specific (.e., \"IDE-TRIAL\"   \"HIE-TRIAL\"), independent (.e., \"IND-CORR\"   \"IND-UNCORR\"), one numeric value can assigned   mean_misspar missingness scenario applied   trials trial-arms dataset, respectively. assumption   \"IDE-ARM\" \"HIE-ARM\", maximum two   different identical numeric values can assigned vector   mean_misspars: first value refers experimental arm,   second value refers control arm trial.   case network, first value considered   non-reference interventions second value considered   reference intervention network (see 'Argument' ref   run_model). necessary ensure transitivity   assumptions missingness parameter across comparisons   network (Spineli, 2019b). Currently, empirically-based prior distributions   informative missingness parameters. users may refer   Mavridis et al. (2015) Spineli (2019) determine mean_misspar   informative missingness parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019a;19(1):86. doi: 10.1186/s12874-019-0731-y Spineli LM. Modeling missing binary outcome data preserving transitivity assumption yielded credible network meta-analysis results. J Clin Epidemiol 2019b;105:19--26. doi: 10.1016/j.jclinepi.2018.09.002 Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Network plot — netplot","title":"Network plot — netplot","text":"Illustrates network plot one outcome.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network plot — netplot","text":"","code":"netplot(   data,   drug_names,   show_multi = FALSE,   multi_frame = -16,   alpha_multi_color = 0.1,   layout = igraph::layout_in_circle,   node_color = \"tomato\",   node_frame_color = \"black\",   node_frame_width = 1,   node_shape = \"circle\",   node_label_color = \"black\",   node_label_font = 1,   node_label_cex = 1,   node_label_dist = 0,   edge_color = \"grey50\",   edge_arrow_size = 0.5,   edge_lty = 1,   edge_label = NULL,   edge_label_color = \"black\",   edge_label_font = 1,   edge_label_cex = 2,   edge_curved = 0,   direction = FALSE,   ... )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network plot — netplot","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions (nodes) order appear argument data. show_multi Logical indicate whether colour closed-loops informed multi-arm trials. default show_multi = FALSE. multi_frame numeric scalar determine size border  around closed-loops formed multi-arm trials. default -16. multi_frame determines mark.expand argument found  plot.igraph function  R-package igraph). alpha_multi_color numerical scalar range 0 1 determine opacity multi_frame coloured using rainbow colour palette. default 0.1. layout layout specification. default layout = layout_in_circle plot nodes circular layout. information refer R-package igraph, node_color character vector characters (length equal number nodes) indicate colour nodes. default node_color = \"tomato\". node_color determines vertex.color argument found plot.igraph function R-package igraph). node_frame_color character indicate colour frame around nodes. default node_frame_color = \"black\". node_frame_color determines vertex.frame.color argument found plot.igraph function R-package igraph). node_frame_width numerical scalar indicate width frame around nodes. default 1. node_frame_width determines vertex.frame.width argument found plot.igraph function R-package igraph). node_shape character indicate shape nodes. default node_shape = \"circle\". node_shape determines vertex.shape argument found plot.igraph function R-package igraph). node_label_color character indicate color node labels. default node_label_color = \"black\". node_label_color determines vertex.label.color argument found plot.igraph function R-package igraph). node_label_font numerical scalar indicate font node labels. default 1. node_label_font determines vertex.label.font argument found plot.igraph function R-package igraph). node_label_cex numerical scalar indicate font size node labels. default 1. node_label_cex determines vertex.label.cex argument found plot.igraph function R-package igraph). node_label_dist numerical scale 0 1 indicate position node labels relative node center. default 0, label centered. node_label_dist determines vertex.label.dist argument found plot.igraph function R-package igraph). edge_color character vector characters (length equal number edges) indicate colour edges. default edge_color = \"grey50\". edge_color determines edge.color argument found plot.igraph function R-package igraph). edge_arrow_size numerical scalar 0 1 indicate arrow size. default 0.5. edge_arrow_size determines edge.arrow.size argument found plot.igraph function R-package igraph). argument work direction = FALSE. edge_lty numerical scalar, discrete values 0 6 indicate line type edges. default 1 (solid). edge_lty determines edge.lty argument found plot.igraph function R-package igraph). edge_label vector number characters length equal number edges present edge label. default edge_label = NULL refers number studies investigating corresponding comparisons. edge_label determines edge.label argument found plot.igraph function R-package igraph). edge_label_color character indicate color edge labels. default edge_label_color = \"black\". edge_label_color determines edge.label.color argument found plot.igraph function R-package igraph). edge_label_font numerical scalar indicate font edge labels. default 1. edge_label_font determines edge.label.font argument found plot.igraph function R-package igraph). edge_label_cex numerical scalar indicate font size edge labels. default 2. edge_label_cex determines edge.label.cex argument found plot.igraph function R-package igraph). edge_curved numerical scalar range 0 1 indicates edge curvature. default 0 (curvature). edge_curved determines edge.curved argument found plot.igraph function R-package igraph). direction Logical draw (TRUE) (FALSE) arrow edge according direction. default direction = FALSE. information refer R-package igraph). ... graphical arguments plot.igraph function R-package igraph","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network plot — netplot","text":"network plot coloured closed-loops informed multi-arm   trials. node indicates intervention edge observed   pairwise comparison.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network plot — netplot","text":"edge thickness proportional number   trials investigating corresponding comparison. node size   weighted total sample size corresponding intervention. user can control many arguments found   plot.igraph function   R-package igraph),   colour nodes edges, node edge label size,   .","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Network plot — netplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network plot — netplot","text":"","code":"data(\"nma.bottomley2011\")  # Return the first six trials of the dataset head(nma.bottomley2011) #>             study t1 t2 t3 t4  r1  r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> 1   Buckley, 2008  1  6 NA NA  67  79 NA NA  2  1 NA NA 110 108 NA NA #> 2    Tyring, 2008  6  7 NA NA  74  12 NA NA  2  0 NA NA 135  42 NA NA #> 3 Kragballe, 2009  3  6 NA NA  19 114 NA NA  9  2 NA NA 105 207 NA NA #> 4     Luger, 2008  3  6 NA NA 101 196 NA NA 44  9 NA NA 431 419 NA NA #> 5    Klaber, 1994  2  3 NA NA 175 138 NA NA  2 11 NA NA 234 240 NA NA #> 6   Barrett, 2005  3  4 NA NA  79  79 NA NA 19 18 NA NA 225 236 NA NA  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"betamethasone dipropionate\", \"betamethasone valerate\",                   \"calcipotriol\", \"calcipotriol plus polytar\", \"capasal\",                   \"two-compound formulation gel\", \"placebo\")  # Create the network plot netplot(data = nma.bottomley2011,         drug_names = interv_names,         edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":null,"dir":"Reference","previous_headings":"","what":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"dataset 21 trials comparing seven pharmacologic   interventions placebo patients chronic   obstructive pulmonary disease (COPD). exacerbation COPD   analysed binary outcome.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"","code":"data(nma.baker2009)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"data-frame 21 rows arm-based data 17 columns (maximum    number 4 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"Baker WL, Baker EL, Coleman CI. Pharmacologic treatments chronic obstructive pulmonary disease: mixed-treatment comparison meta-analysis. Pharmacotherapy 2009;29(8):891--905. doi: 10.1592/phco.29.8.891","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"interventions coded follows: 1, placebo; 2,   budesonide; 3, budesonide plus formoterol; 4, fluticasone; 5, fluticasone   plus salmeterol; 6, formoterol; 7, salmeterol; 8, tiotropium.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"dataset 9 trials comparing six pharmacologic interventions   placebo moderately severe scalp psoriasis.   analysed binary outcome investigator's global assessment   response 4 weeks.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"","code":"data(nma.bottomley2011)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"data frame 9 rows arm-based data 17 columns   (maximum number 4 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"Bottomley JM, Taylor RS, Ryttov J. effectiveness two-compound formulation calcipotriol betamethasone dipropionate gel treatment moderately severe scalp psoriasis: systematic review direct indirect evidence. Curr Med Res Opin 2011;27(1):251--68. doi: 10.1185/03007995.2010.541022","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"interventions coded follows: 1, betamethasone   dipropionate; 2, betamethasone valerate; 3, calcipotriol; 4, calcipotriol   plus polytar; 5, capasal; 6, two-compound formulation gel; 7, placebo.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":null,"dir":"Reference","previous_headings":"","what":"Oral antithrombotics for stroke episode — nma.dogliotti2014","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"dataset 16 trials comparing seven oral antithrombotics   placebo patients atrial fibrillation. analysed   binary outcome prevention stroke episode.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"","code":"data(nma.dogliotti2014)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"data frame 16 rows arm-based data 13 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"Dogliotti , Paolasso E, Giugliano RP. Current new oral antithrombotics non-valvular atrial fibrillation: network meta-analysis 79808 patients. Heart 2014;100(5):396--405. doi: 10.1136/heartjnl-2013-304347","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"interventions coded follows: 1, placebo;   2, aspirin; 3, aspirin plus clopidogrel; 4, dabigatran 110 mg;   5, dabigatran 150 mg; 6, rivaroxaban; 7, vitamin K antagonist;   8, apixaban","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":null,"dir":"Reference","previous_headings":"","what":"Antidepressants in Parkinson's disease — nma.liu2013","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"dataset 11 trials comparing effectiveness five   antidepressants placebo Parkinson's disease. analysed binary   outcome number patients reduction least 50/   baseline score.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"","code":"data(nma.liu2013)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"data frame 11 rows arm-based data 13 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"Liu J, Dong J, Wang L, Yan P, Sun S. Comparative efficacy acceptability antidepressants Parkinson's disease: network meta-analysis. PLoS One 2013;8(10):e76651. doi: 10.1371/journal.pone.0076651","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"interventions coded follows: 1, placebo;   2, pramipexole; 3, serotonin-norepinephrine reuptake inhibitor;   4, selective serotonin reuptake inhibitor; 5, tricyclic antidepressant;   6, pergolide.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":null,"dir":"Reference","previous_headings":"","what":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"dataset 14 trials comparing three different training   modalities (triangle network) patients type 2 diabetes.   analysed continuous outcome change baseline HbA1c levels.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"","code":"data(nma.schwingshackl2014)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"data frame 14 rows arm-based data 16 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"Schwingshackl L, Missbach B, Dias S, et al. M Impact different training modalities glycaemic control blood lipids patients type 2 diabetes: systematic review network meta-analysis. Diabetologia 2014;57(9):1789--97. doi: 10.1007/s00125-014-3303-z","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"interventions coded follows: 1, aerobic;   2, resistance; 3, combined training;","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"dataset 29 trials comparing three antiparkinsonian   interventions placebo (star-shaped network) patients later   Parkinson's disease. analysed continuous outcome change   baseline patient -time reduction.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"","code":"data(nma.stowe2011)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"data frame 29 rows arm-based data 11 columns (maximum   number 2 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"Stowe R, Ives N, Clarke CE, et al. Meta-analysis comparative efficacy safety adjuvant treatment levodopa later Parkinson's disease. Mov Disord 2011;26(4):587--98. doi: 10.1002/mds.23517","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"interventions coded follows: 1, placebo plus   levodopa (PBO+LD); 2, dopamine agonist plus levodopa (DA+LD);   3, catechol-O-methyl transferase inhibitors plus levodopa (COMBI+LD);   4, monoamine oxidase type B inhibitors plus levodopa (MAOBI+LD).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for the node-splitting approach — nodesplit_plot","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"nodesplit_plot hosts toolkit functions   facilitates comparison consistency model   (via run_model) node-splitting approach   (via run_nodesplit) regarding posterior summaries   direct indirect effects inconsistency factor split   nodes, -trial standard deviation model assessment   parameters (Spiegelhalter et al., 2002) split node   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"","code":"nodesplit_plot(full, node, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"full object S3 class run_model. See 'Value' run_model. node object S3 class run_nodesplit. See 'Value' run_nodesplit. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"nodesplit_plot returns following list elements: table_effect_size data-frame posterior median,   posterior standard deviation 95% credible interval direct   indirect effect inconsistency factor split node. table_model_assessment data-frame model assessment   parameters (DIC, posterior mean total residual deviance, number   effective parameters), posterior median, posterior standard deviation   95% credible interval tau consistency model   split node. See 'Details'. intervalplot_inconsistency_factor panel interval plots   direct indirect effect split nodes corresponding   inconsistency factor. See 'Details'. intervalplot_tau interval plot tau   split node. See 'Details'.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"intervalplot_inconsistency_factor includes many interval   plots number split nodes network. interval plot   illustrates posterior median 95% credible interval direct   indirect effect split nodes corresponding inconsistency   factor.   line corresponds inconsistency factor highlighted   green, cross vertical line difference (  direct indirect effect), red otherwise.   30 split nodes, function presents interval plots split nodes   conclusive inconsistency factor (green intervals)   opposite sign direct indirect effects. intervalplot_tau interval plot median 95% credible   interval tau split node. lines correspond   split nodes sorted ascending order deviance information   criterion (DIC) appears top line.   estimated median 95% credible intervals tau   consistency model appear interval plot solid two dotted   parallel blue lines, respectively. different levels heterogeneity   appear green, yellow, orange, red rectangulars indicate low,   reasonable, fairly high, fairly extreme heterogeneity, respectively,   following classification Spiegelhalter et al. (2004).   fixed-effect model performed, nodesplit_plot   return intervalplot_tau. table_model_assessment also includes column   DIC-based better fit indicates preferred model terms   parsimony split node. Therefore, DIC model   split node compared DIC consistency model   (Dias et al., 2010). difference DIC exceeds 5, consistency   model preferred; difference DIC less -5, model   split node preferred; otherwise, little choose   compared models. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, nodesplit_plot   currently presents results odds ratio scale. ,   odds ratio used 'best-case' effect measure   run_model. , relative risk, risk difference   obtained function odds ratio selected baseline risk   (See 'Details' run_model). split nodes automatically selected via   mtc.nodesplit.comparisons   function R-package   gemtc.   See 'Details' run_nodesplit. Furthermore, nodesplit_plot exports data-frames separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user. nodesplit_plot can used network interventions   least one split node. Otherwise, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Spiegelhalter DJ, Abrams KR, Myles JP. Bayesian approaches clinical trials health-care evaluation. John Wiley Sons, Chichester, 2004. Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--616. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Read results from 'run_nodesplit' (using the default arguments) node <- readRDS(system.file('extdata/node_baker.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Plot the results from both models nodesplit_plot(full = res,                node = node,                drug_names = interv_names) #> $table_effect_size #>  #>  #> Table: Estimates for the split nodes #>  #> |Node                                       | Median direct | SD direct | 95% CrI direct  | Median indirect | SD indirect | 95% CrI indirect | Median IF | SD IF |  95% CrI IF   | #> |:------------------------------------------|:-------------:|:---------:|:---------------:|:---------------:|:-----------:|:----------------:|:---------:|:-----:|:-------------:| #> |formoterol vs placebo                      |     -0.43     |   0.29    |  (-0.99, 0.14)  |      1.06       |    0.87     |   (-0.6, 2.87)   |   -1.48   | 0.87  | (-3.33, 0.14) | #> |tiotropium vs formoterol                   |     -1.59     |   0.85    | (-3.37, -0.05)* |      -0.09      |    0.22     |  (-0.55, 0.32)   |   -1.50   | 0.87  | (-3.29, 0.1)  | #> |tiotropium vs placebo                      |     -0.49     |   0.24    |  (-1, -0.07)*   |      -1.24      |    0.57     |  (-2.43, -0.2)*  |   0.75    | 0.54  | (-0.22, 1.91) | #> |salmeterol vs fluticasone                  |     -0.59     |   0.23    | (-1.03, -0.14)* |      -0.21      |    0.22     |  (-0.66, 0.23)   |   -0.38   | 0.30  | (-0.98, 0.21) | #> |salmeterol vs placebo                      |     -0.51     |   0.25    | (-0.98, -0.03)* |      -0.17      |    0.68     |  (-1.49, 1.26)   |   -0.34   | 0.64  | (-1.71, 0.91) | #> |fluticasone plus salmeterol vs fluticasone |     -0.23     |   0.23    |  (-0.68, 0.21)  |      -0.72      |    0.44     |   (-1.6, 0.15)   |   0.49    | 0.48  | (-0.45, 1.43) | #> |salmeterol vs fluticasone plus salmeterol  |     -0.42     |   0.24    |  (-0.88, 0.05)  |      -0.24      |    0.30     |  (-0.87, 0.33)   |   -0.18   | 0.44  | (-1.01, 0.72) | #> |tiotropium vs salmeterol                   |     -0.85     |   0.38    | (-1.61, -0.1)*  |      -0.06      |    0.21     |  (-0.49, 0.34)   |   -0.80   | 0.47  | (-1.7, 0.16)  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment parameters (50 unconstrained data points) #>  #> |Approach                                   | Residual deviance |  DIC  |  pD   |DIC-based better fit | Median tau | SD tau | 95% CrI tau  | #> |:------------------------------------------|:-----------------:|:-----:|:-----:|:--------------------|:----------:|:------:|:------------:| #> |NMA                                        |       54.19       | 89.16 | 34.97 |-                    |    0.14    |  0.09  | (0.01, 0.35) | #> |formoterol vs placebo                      |       89.61       | 53.35 | 36.26 |After split node     |    0.12    |  0.09  | (0.01, 0.34) | #> |tiotropium vs formoterol                   |       89.79       | 53.28 | 36.51 |After split node     |    0.13    |  0.09  | (0.01, 0.34) | #> |tiotropium vs placebo                      |       89.82       | 53.41 | 36.41 |After split node     |    0.13    |  0.09  | (0.01, 0.35) | #> |salmeterol vs fluticasone                  |       90.63       | 53.17 | 37.46 |After split node     |    0.11    |  0.09  | (0.01, 0.32) | #> |salmeterol vs placebo                      |       90.99       | 54.28 | 36.71 |After split node     |    0.13    |  0.09  | (0.01, 0.36) | #> |fluticasone plus salmeterol vs fluticasone |       91.84       | 53.91 | 37.93 |After split node     |    0.11    |  0.09  |  (0, 0.34)   | #> |salmeterol vs fluticasone plus salmeterol  |       92.11       | 53.64 | 38.47 |After split node     |    0.13    |  0.10  | (0.01, 0.38) | #> |tiotropium vs salmeterol                   |       92.63       | 54.13 | 38.50 |After split node     |    0.16    |  0.11  | (0.01, 0.42) | #>  #> $intervalplot_inconsistency_factor  #>  #> $intervalplot_tau  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"pairwise meta-analysis 4 trials comparing paroxetine   placebo depressive disorders children adolescents.   analysed binary outcome remission response defined   trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"","code":"data(pma.hetrick2012)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"data frame 4 rows arm-based data 9 columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"Hetrick SE, McKenzie JE, Cox GR, Simmons MB, Merry SN. Newer generation antidepressants depressive disorders children adolescents. Cochrane Database Syst Rev 2012;11(11):CD004851. doi: 10.1002/14651858.CD004851.pub3","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"interventions coded follows:   1, placebo; 2, paroxetine.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":null,"dir":"Reference","previous_headings":"","what":"Inositol versus glucose for depressive episode — pma.taylor2004","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"pairwise meta-analysis 4 trials comparing inositol   glucose (placebo) depressive episode. analysed continuous outcome   resolution depressive episode using Hamilton Depression   Rating Scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"","code":"data(pma.taylor2004)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"data frame 4 rows arm-based data 11 columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"Taylor MJ, Wilder H, Bhagwagar Z, Geddes J. Inositol depressive disorders. Cochrane Database Syst Rev 2004;2004(2):CD004049. doi: 10.1002/14651858.CD004049.pub2","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"interventions coded follows:   1, placebo; 2, inositol.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"WinBUGS code, written Dias et al. (2013) run one-stage   Bayesian network meta-analysis, extended incorporate pattern-mixture   model binary continuous missing participant outcome data (Spineli   et al., 2021; Spineli, 2019). model also extended   incorporate trial-level covariate apply meta-regression   (Cooper et al., 2009). case two interventions, code boils   one-stage Bayesian pairwise meta-analysis pattern-mixture   model (Turner et al., 2015; Spineli et al, 2021).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"","code":"prepare_model(measure, model, covar_assumption, assumption)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". covar_assumption Character string indicating structure intervention--covariate interaction, described Cooper et al., (2009). Set covar_assumption equal one following, meta-regression performed: \"exchangeable\", \"independent\", \"common\". Assign \"\" perform pairwise network meta-analysis. assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"R character vector object passed run_model run_metareg  textConnection function argument  object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"prepare_model creates model JAGS dialect   BUGS language. output function constitutes argument   model.file jags function (  R-package R2jags) via   textConnection function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607--17. doi: 10.1177/0272989X12458724 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for the node-splitting approach — prepare_nodesplit","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"WinBUGS code, written Dias et al. (2010) run   one-stage Bayesian node-splitting model, extended incorporate   pattern-mixture model binary continuous missing participant outcome   data (Spineli et al., 2021; Spineli, 2019).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"","code":"prepare_nodesplit(measure, model, assumption)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"R character vector object passed  run_nodesplit  textConnection function argument  object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"functions creates model JAGS dialect BUGS   language. output function constitutes argument   model.file jags (R-package   R2jags) via   textConnection function. prepare_nodesplit inherits measure, model,   assumption run_model function. binary   outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, prepare_nodesplit   currently considers WinBUGS code odds ratio. split nodes automatically selected via   mtc.nodesplit.comparisons   function R-package   gemtc.   See 'Details' run_nodesplit.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for the unrelated mean effects model — prepare_ume","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"WinBUGS code, proposed Dias et al. (2013) run   one-stage Bayesian unrelated mean effects model, refined (Spineli, 2021),   extended incorporate pattern-mixture model binary   continuous missing participant outcome data (Spineli et al., 2021; Spineli,   2019).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"","code":"prepare_ume(measure, model, assumption, connected)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"measure Character string indicating effect measure values \"\", \"MD\", \"SMD\", \"ROM\" odds ratio, mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. connected integer equal one larger indicates number subnetworks.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"R character vector object passed run_ume textConnection function   argument object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"functions creates model JAGS dialect BUGS   language. output function constitutes argument   model.file jags (R-package   R2jags) via   textConnection function. prepare_ume inherits measure, model,   assumption run_model function. binary   outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, prepare_ume   currently considers WinBUGS code odds ratio.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Rankograms and SUCRA curves — rankosucra_plot","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"returns panel rankograms integrated SUCRA curves   intervention network. function can illustrate   results single two outcomes simultaneously.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"","code":"rankosucra_plot(   full1,   full2 = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"full1 object S3 class run_model network meta-analysis. See 'Value' run_model. full2 object S3 class run_model network meta-analysis second outcome. See 'Value' run_model. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome full1. name2 text title results refer outcome full2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"panel rankograms (yellowish bars) integrated reddish SUCRA   curves intervention network (Salanti et al., 2011).   x-axis panel refers ranking, y-axis refers   ranking probability expressed percentage.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Interventions sorted descending order SUCRA   value. SUCRA value expressed percentage appears top left   corner panel. case two outcomes, SUCRA values   outcome argument full1 considered sort   interventions best worst. second outcome also considered, different colours used   draw corresponding SUCRA curves rankograms: green   outcome full1, red outcome full2. rankosucra_plot can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\",                   \"serotonin-norepinephrine reuptake inhibitor\",                   \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the integrated rankograms and SUCRA curves rankosucra_plot(full1 = res,                 drug_names1 = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"R package performing Bayesian network meta-analysis handling   missing participant outcome data properly.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"R-package rnmamod built upon WinBUGS program code found   series tutorial papers evidence synthesis methods decision   making (Dias et al., 2013a; Dias et al., 2013b; Dias et al., 2013c)   Dias et al. (2010) introduces node-splitting approach.   models comprise Bayesian hierarchical models one-stage network   meta-analysis implemented JAGS R-package   R2jags. rnmamod comprises suite core models implemented   systematic review multiple interventions: fixed-effect random-effects network meta-analysis    (run_model) based Dias et al. (2013c); fixed-effect random-effects network meta-regression    (run_metareg) based Cooper et al. (2009), Dias et    al. (2013b); fixed-effect random-effects separate pairwise meta-analyses    comparisons least two trials (run_series_meta); local evaluation consistency assumption using    fixed-effect random-effects node-splitting approach    (run_nodesplit) based Dias et al. (2010),    van Valkenhoef et al. (2016); global evaluation consistency assumption using    fixed-effect random-effects unrelated mean effects model    (run_ume) based Dias et al. (2013a) Spineli (2021); comprehensive sensitivity analysis impact aggregate    binary continuous missing participant outcome data    (run_sensitivity) based Spineli et al. (2021a); hierarchical baseline model selected reference intervention    (baseline_model) based Dias et al. (2013d). rnmamod also includes rich suite visualisation tools aid   interpretation results preparation manuscript   submission: network plot description evidence base    (netplot describe_network,    respectively) following  PRISMA statement systematic reviews    network meta-analysis (Hutton et al., 2015); illustration R-hat (Gelman Rubin, 1992) MCMC error    monitored nodes creation HTML file panel    diagnostic plots monitored parameter    (mcmc_diagnostics); heatmap proportion missing participants across network    (heatmap_missing_network) across intervention arms    trial dataset (heatmap_missing_dataset); league heatmap estimated predicted summary effects    possible pairwise comparisons network integrated SUCRA    P-scores (league_heatmap    league_heatmap_pred, respectively) performing network    meta-analysis network meta-regression (Salanti et al., 2011; Ruecker    Schwarzer, 2015); league table relative absolute effects pairwise    comparisons interventions conducting network meta-analysis anew    via package (league_table_absolute) using results    published systematic review network meta-analysis    (league_table_absolute_user); forest plot trial-specific summary absolute risks    employing hierarchical baseline model selected reference    intervention (baseline_model) described    Dias et al. (2013d); rankograms integrated SUCRA values intervention    network (rankosucra_plot) performing network    meta-analysis (Salanti et al., 2011); forest plot estimated predicted summary effects    comparisons selected intervention (forestplot)    obtained network meta-analysis model (Salanti et al., 2011); tabulation estimated regression coefficient(s), estimated    predicted summary effects, measures model fit estimated    -trial standard deviation adjusting    trial-specific covariate (metareg_plot), visualisation    summary effects SUCRA values models    (forestplot_metareg, scatterplot_sucra,    respectively--found metareg_plot); tabulation estimated direct indirect effects split    nodes corresponding inconsistency factors, measures model fit    estimated -trial standard deviation split node,    visualisation results (nodesplit_plot); tabulation estimated summary effects comparisons    observed network, measures model fit estimated -trial    standard deviation unrelated mean effects model network    meta-analysis, well visualisation summary effects    models (intervalplot_panel_ume) goodness fit    model using series complementary plots    (scatterplots_dev (Dias et al., 2013a),    bland_altman_plot (Bland Altman, 1999),    leverage_plot (Dias et al., 2010)--found    ume_plot); tabulation estimated summary effects corresponding    -trial standard deviation comparisons least two trials    pairwise network meta-analysis, well visualisation    results (series_meta_plot); calculation visualisation robustness index    possible comparisons network (robustness_index,    robustness_index_user heatmap_robustness)    (Spineli et al., 2021a); enhanced balloon plot summary effects -trial    standard deviation selected pairwise comparison several    scenarios missingness parameter (balloon_plot)    (Spineli et al., 2021a); barplot Kullback-Leibler divergence measure    informative scenario missing--random assumption    missingness parameter selected pairwise comparison    (kld_barplot) (Spineli et al., 2021a). rnmamod also assists researcher assessing transitivity   assumption quantitatively based study dissimilarities various   study-level aggregate participant methodological characteristics   calculated using Gower's dissimilarity coefficient   (gower_distance comp_clustering) (Gower,   1971). Results clustered comparisons based hierarchical   agglomerative clustering illustrated using dendrogram integrated   heatmap (dendro_heatmap). distribution   characteristics presented using violin plots integrated box   plots dots, stacked bar plots across observed treatment   comparisons (distr_characteristics). Missing data   characteristics across studies observed comparisons visualised   using bar plots tile plot (miss_characteristics). Missing participant outcome data addressed models package   extending code incorporate pattern-mixture model   (Spineli et al., 2021b; Spineli, 2019). Type citation(\"rnmamod\") cite rnmamod. report possible bugs errors, send email Loukia Spineli   (Spineli.Loukia@mh-hannove.de). development version rnmamod available   GitHub   GPL-3.0 License.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"Bland JM, Altman DG. Measuring agreement method comparison studies. Stat Methods Med Res 1999;8(2):135--60. doi: 10.1177/096228029900800204 Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013a;33(5):641--56. doi: 10.1177/0272989X12455847 Dias S, Sutton AJ, Welton NJ, Ades AE. Evidence synthesis decision making 3: heterogeneity--subgroups, meta-regression, bias, bias-adjustment. Med Decis Making 2013b;33(5):618--40. doi: 10.1177/0272989X13485157 Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013c;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013d;33(5):657--70. doi: 10.1177/0272989X13485155 Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Gower JC. General Coefficient Similarity Properties. Biometrics 1971;27(4):857--71. http://dx.doi.org/10.2307/2528823 Hutton B, Salanti G, Caldwell DM, Chaimani , Schmid CH, Cameron C, et al. PRISMA extension statement reporting systematic reviews incorporating network meta-analyses health care interventions: checklist explanations. Ann Intern Med 2015;162(11):777--84. doi: 10.7326/M14-2385 Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021a;12(4):475--90. doi: 10.1002/jrsm.1478 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021b;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y van Valkenhoef G, Dias S, Ades AE, Welton NJ. Automated generation node-splitting models assessment inconsistency network meta-analysis. Res Synth Methods 2016;7(1):80--93. doi: 10.1002/jrsm.1167","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Robustness index — robustness_index","title":"Robustness index — robustness_index","text":"Calculates robustness index, novel index quantifies overall   divergence sensitivity analysis results primary analysis   results. robustness index considers objective decision rules infer   presence lack robustness primary analysis results   conducting sensitivity analysis (Spineli et al., 2021).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robustness index — robustness_index","text":"","code":"robustness_index(sens, threshold)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robustness index — robustness_index","text":"sens object S3 class run_sensitivity sensitivity analysis refers different scenarios average missingness parameter. See 'Value' run_sensitivity. general sensitivity analysis, insert list least two objects S3 class run_model indicating different re-analyses: first object (class run_model) list refer primary analysis. threshold number indicating threshold robustness, , minimally allowed deviation primary analysis re-analysis results. See 'Details' .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robustness index — robustness_index","text":"robustness_index prints R console message green   text threshold robustness determined user.   , function returns following list elements: robust_index numeric scalar vector robustness   index values. case pairwise meta-analysis,   robust_index scalar one summary effect size obtained.   case network meta-analysis, robust_index vector   length equal number possible pairwise comparisons;   one robustness index per possible comparison. robust character character vector (length   robust_index) whether primary analysis results   robust frail different re-analyses. kld vector matrix Kullback-Leibler divergence   (KLD) measure summary effect size subsequent re-analysis   primary analysis. case pairwise meta-analysis, kld   vector length equal number total analyses (one KLD   value obtained per analysis). number total analyses equals   square number scenarios indicated argument   mean_scenarios run_sensitivity, case   missing participant outcome data; otherwise, length character   vector argument sens.   case network meta-analysis, robust_index matrix   number rows equal number total analyses number columns   equal number  possible pairwise comparisons; one KLD value per   analysis possible comparison. threshold threshold used inherited   heatmap_robustness function. scenarios scenarios considered inherited   kld_barplot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robustness index — robustness_index","text":"Thresholds robustness proposed odds ratio   standardised mean difference (Spineli et al., 2021).   user may consider values 0.28 0.17 argument   threshold odds ratio standardised mean difference effect   measures (default values), respectively, consider plausible   values. argument threshold defined,   robustness_index considers default values 0.28 0.17   threshold robustness binary continuous outcome, respectively,   regardless effect measure (default thresholds may proper   choices effect measures; hence, use threshold great   caution case). Spineli et al. (2021) offers discussion   specifying threshold robustness. case binary outcome, robustness_index considers   results odds ratio scale calculate robustness index.   , odds ratio used 'best-case' effect measure   run_model. , relative risk, risk difference   functions odds ratio selected baseline risk (See 'Details'   run_model). case missing participant outcome data, primary analysis   considered middle numbers argument   mean_scenarios run_sensitivity (see 'Arguments'   'Details' run_sensitivity). robust, value \"robust\" appears   robust_index less threshold; otherwise, value   \"frail\" appears. case missing participant outcome data, robustness_index   can used missing participant outcome data   extracted least one trial. Otherwise, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robustness index — robustness_index","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Robustness index — robustness_index","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robustness index — robustness_index","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_baker.rds',                     package = 'rnmamod'))  # Calculate the robustness index robustness_index(sens = res_sens,                  threshold = 0.28) #> The value 0.28 was assigned as 'threshold' for odds ratio. #> $robust_index #>  [1] 0.45825757 0.40000000 0.45387223 0.51478151 0.48062459 0.31780497 #>  [7] 0.34785054 0.08366600 0.11401754 0.08366600 0.10488088 0.24698178 #> [13] 0.26457513 0.07745967 0.06324555 0.07745967 0.18973666 0.20000000 #> [19] 0.12247449 0.06324555 0.18165902 0.20000000 0.04472136 0.18973666 #> [25] 0.21213203 0.11832160 0.16124515 0.05477226 #>  #> $robust #>  [1] \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"robust\" #>  [9] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [17] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [25] \"robust\" \"robust\" \"robust\" \"robust\" #>  #> $kld #>             [,1]       [,2]        [,3]        [,4]        [,5]        [,6] #>  [1,] 0.03143496 0.02796963 0.055058416 0.125452928 0.196018804 0.013912157 #>  [2,] 0.02543702 0.01920250 0.043161377 0.091735629 0.146776953 0.019573044 #>  [3,] 0.03405799 0.03059699 0.056604557 0.116167819 0.170723488 0.016309098 #>  [4,] 0.02951539 0.04548642 0.093447495 0.146961033 0.214858236 0.009077864 #>  [5,] 0.01113434 0.03216688 0.109525620 0.166811784 0.247708559 0.003877332 #>  [6,] 0.01951722 0.01086042 0.020786834 0.091750311 0.165670683 0.029723758 #>  [7,] 0.04998651 0.02082673 0.021052758 0.076821621 0.147532529 0.046796072 #>  [8,] 0.04989347 0.03309033 0.019555306 0.027614613 0.033629565 0.005643233 #>  [9,] 0.04486888 0.03923226 0.033844111 0.041112954 0.052304306 0.014171171 #> [10,] 0.02902816 0.02737892 0.021368567 0.029429527 0.035216212 0.014288434 #> [11,] 0.01450164 0.01118354 0.010032892 0.014450268 0.019383796 0.004623395 #> [12,] 0.02734489 0.02961612 0.033151278 0.061701609 0.086408868 0.008612444 #> [13,] 0.03628689 0.03747297 0.047533123 0.080519739 0.109411182 0.012209439 #> [14,] 0.03472138 0.02893725 0.019598727 0.024299059 0.027933502 0.015519021 #> [15,] 0.03039907 0.03019554 0.018994336 0.015199623 0.018396590 0.019615407 #> [16,] 0.01750883 0.01454469 0.010723813 0.008458197 0.005050863 0.009345788 #> [17,] 0.01921020 0.02019464 0.024987792 0.037464730 0.051152380 0.011409928 #> [18,] 0.02358055 0.02438248 0.031703395 0.052986855 0.067429896 0.012530294 #> [19,] 0.05688734 0.06522904 0.046346822 0.040560882 0.037222429 0.027758787 #> [20,] 0.01958700 0.02872948 0.021625476 0.013624033 0.011923788 0.006174286 #> [21,] 0.04855291 0.04361876 0.030655428 0.035677143 0.031113092 0.019055721 #> [22,] 0.05115298 0.04878439 0.041096263 0.053712343 0.048622138 0.022627111 #> [23,] 0.01142135 0.01065841 0.008975878 0.004187517 0.003444494 0.005165492 #> [24,] 0.03599252 0.04075226 0.048066877 0.042427435 0.048430174 0.016616661 #> [25,] 0.05016524 0.06033360 0.062757451 0.061811728 0.070595835 0.022314447 #> [26,] 0.02050571 0.02854462 0.053504773 0.045924247 0.056261386 0.006777018 #> [27,] 0.03272550 0.04509633 0.069504861 0.071161202 0.084445355 0.006854829 #> [28,] 0.02820476 0.02854098 0.013259454 0.011535247 0.011121530 0.008623787 #>              [,7]         [,8]        [,9]       [,10]        [,11] #>  [1,] 0.012635907 0.0345111366 0.076040440 0.110159742 0.0325710603 #>  [2,] 0.007552997 0.0235592374 0.057539137 0.105413277 0.0422239720 #>  [3,] 0.008545467 0.0381733605 0.084574047 0.118771536 0.0324497037 #>  [4,] 0.015190431 0.0246016818 0.091345984 0.136589695 0.0265719807 #>  [5,] 0.002163974 0.0308755774 0.100226627 0.150372515 0.0351852594 #>  [6,] 0.010629545 0.0094664492 0.057500734 0.105562756 0.0454659057 #>  [7,] 0.018758751 0.0088146221 0.060973183 0.119920601 0.0582538415 #>  [8,] 0.009707479 0.0070248754 0.009284702 0.006343006 0.0007590439 #>  [9,] 0.013152956 0.0199737870 0.015926428 0.021112447 0.0045872158 #> [10,] 0.012995884 0.0095565514 0.008615908 0.010552018 0.0046558621 #> [11,] 0.004736495 0.0063616130 0.006540508 0.008273813 0.0052234803 #> [12,] 0.013727905 0.0237629411 0.035964385 0.044094640 0.0106219700 #> [13,] 0.017485710 0.0289618004 0.040229347 0.048606665 0.0110262681 #> [14,] 0.015270182 0.0136434794 0.009343775 0.014808220 0.0072103373 #> [15,] 0.015447861 0.0052643668 0.006463093 0.007423185 0.0062578747 #> [16,] 0.004769091 0.0031395312 0.002539431 0.004803469 0.0073926899 #> [17,] 0.008054395 0.0152864520 0.023148034 0.037971823 0.0151285300 #> [18,] 0.008808176 0.0171088792 0.026238435 0.041346593 0.0156539829 #> [19,] 0.022516904 0.0136286036 0.011412669 0.013909778 0.0002166782 #> [20,] 0.004164008 0.0061287770 0.002216074 0.002699664 0.0002625998 #> [21,] 0.015660875 0.0253835007 0.022765288 0.022595283 0.0025400748 #> [22,] 0.016338439 0.0296181091 0.026026844 0.024768890 0.0032085867 #> [23,] 0.004946949 0.0009981894 0.003028267 0.001084037 0.0002915975 #> [24,] 0.016824835 0.0111546755 0.026618707 0.027447035 0.0017907530 #> [25,] 0.025559022 0.0150603987 0.030131129 0.032665880 0.0019734863 #> [26,] 0.006912700 0.0118231997 0.025919989 0.031108128 0.0024523076 #> [27,] 0.008316147 0.0163663580 0.031320234 0.036711683 0.0029309439 #> [28,] 0.010398057 0.0062078390 0.006016504 0.002358181 0.0009362008 #>              [,12] [,13]        [,14]        [,15]       [,16]       [,17] #>  [1,] 1.040630e-02     0 1.164902e-02 4.204829e-02 0.134543244 0.095648309 #>  [2,] 1.276933e-02     0 1.089570e-02 3.910933e-02 0.122007318 0.089693065 #>  [3,] 6.267439e-03     0 1.678665e-02 5.603486e-02 0.121278648 0.075088547 #>  [4,] 7.006353e-03     0 1.125546e-02 2.877036e-02 0.124126947 0.101362316 #>  [5,] 1.093077e-02     0 1.200075e-02 6.427553e-02 0.130560278 0.073951720 #>  [6,] 2.032658e-02     0 1.877611e-02 7.476512e-02 0.094322149 0.044053262 #>  [7,] 2.190801e-02     0 1.982677e-02 8.307096e-02 0.107225101 0.052422580 #>  [8,] 1.623253e-04     0 4.557987e-04 1.463448e-03 0.007773402 0.006289221 #>  [9,] 3.362800e-03     0 6.533559e-04 2.881607e-03 0.020817558 0.017962139 #> [10,] 1.957335e-03     0 1.572967e-03 7.566119e-03 0.018121486 0.010187176 #> [11,] 1.383241e-03     0 2.215096e-03 3.495025e-03 0.029169640 0.025878108 #> [12,] 2.114031e-03     0 3.472683e-03 1.057402e-02 0.066073893 0.056075063 #> [13,] 3.254108e-03     0 3.538819e-03 1.091195e-02 0.066468155 0.055432680 #> [14,] 3.137903e-03     0 3.219365e-04 1.612032e-03 0.012596538 0.012370418 #> [15,] 2.377907e-03     0 8.200578e-04 5.435890e-03 0.009833125 0.006057058 #> [16,] 2.136754e-03     0 1.448610e-03 1.783064e-03 0.018598750 0.018648103 #> [17,] 2.873479e-03     0 2.586324e-03 8.376764e-03 0.052360163 0.047794559 #> [18,] 3.855192e-03     0 2.686450e-03 8.568660e-03 0.053571928 0.047993208 #> [19,] 2.045975e-03     0 5.051936e-04 2.105341e-03 0.002608169 0.004347026 #> [20,] 9.613066e-04     0 5.980695e-04 9.195487e-07 0.001499387 0.001222761 #> [21,] 1.130349e-03     0 2.172512e-03 4.312372e-03 0.027366544 0.022231718 #> [22,] 5.214653e-04     0 2.357629e-03 4.947864e-03 0.030091849 0.023513960 #> [23,] 2.024377e-04     0 8.139796e-05 2.278073e-03 0.001665226 0.005451690 #> [24,] 3.433409e-05     0 8.920290e-04 1.486432e-03 0.030988707 0.039076011 #> [25,] 2.852599e-04     0 9.069232e-04 1.174206e-03 0.031875678 0.038731295 #> [26,] 9.183757e-05     0 3.955442e-04 5.175883e-03 0.021081630 0.015812170 #> [27,] 2.845253e-04     0 5.291961e-04 6.232539e-03 0.023977626 0.017356998 #> [28,] 1.267331e-04     0 5.834451e-06 7.911580e-04 0.003982528 0.003640608 #>             [,18]        [,19]        [,20]       [,21]       [,22]       [,23] #>  [1,] 0.042487843 0.0106463822 0.0049171837 0.223608521 0.192673633 0.100042059 #>  [2,] 0.038347943 0.0074420702 0.0031213380 0.221013974 0.164464609 0.080496336 #>  [3,] 0.042181108 0.0135991614 0.0060590213 0.237049354 0.176502923 0.119589142 #>  [4,] 0.049122862 0.0131807149 0.0046040366 0.264519469 0.199087503 0.118089411 #>  [5,] 0.029089442 0.0008059454 0.0070371123 0.205479242 0.143685400 0.050963673 #>  [6,] 0.010629566 0.0074674204 0.0249425848 0.143297831 0.080884399 0.027226127 #>  [7,] 0.015764281 0.0047428870 0.0243847732 0.176391820 0.099628581 0.031745531 #>  [8,] 0.008251357 0.0096907986 0.0077012507 0.010866329 0.013563288 0.011593977 #>  [9,] 0.007597600 0.0047053070 0.0036050973 0.024580727 0.027938245 0.012242492 #> [10,] 0.005336946 0.0044078932 0.0041772919 0.023145986 0.022593803 0.010828709 #> [11,] 0.012927402 0.0065187566 0.0043482660 0.053823714 0.054666538 0.038184489 #> [12,] 0.031573307 0.0157961102 0.0092958150 0.113079651 0.112847393 0.070583758 #> [13,] 0.029059236 0.0136730496 0.0078265796 0.109946905 0.111954549 0.069502717 #> [14,] 0.004377798 0.0058657778 0.0040183263 0.017991351 0.013758014 0.007134809 #> [15,] 0.003161499 0.0028137835 0.0031520756 0.014848275 0.008329188 0.004264062 #> [16,] 0.008723452 0.0037461567 0.0019333675 0.042459716 0.032061684 0.022740165 #> [17,] 0.026484981 0.0118861841 0.0054696232 0.101617982 0.084003351 0.051573564 #> [18,] 0.024655143 0.0109142310 0.0050677870 0.099074801 0.083634871 0.051537082 #> [19,] 0.002561615 0.0044773479 0.0033483441 0.006285256 0.006035002 0.003384348 #> [20,] 0.002674612 0.0049587453 0.0071346665 0.013073903 0.010624032 0.019157476 #> [21,] 0.023491309 0.0197374824 0.0134362025 0.074739245 0.065050674 0.064800681 #> [22,] 0.021975735 0.0203392339 0.0161521210 0.076337861 0.066970903 0.067684648 #> [23,] 0.003669885 0.0060804031 0.0083579692 0.010711292 0.010860714 0.015395395 #> [24,] 0.026903746 0.0223632534 0.0186015010 0.076165711 0.074754399 0.060983392 #> [25,] 0.023884413 0.0194777145 0.0163754149 0.072920624 0.072687844 0.061373953 #> [26,] 0.011260031 0.0045273984 0.0011704912 0.032311489 0.030611620 0.013912927 #> [27,] 0.010123069 0.0035442703 0.0009974872 0.031341715 0.031484138 0.015100289 #> [28,] 0.005745668 0.0073554835 0.0053779593 0.012360609 0.011709647 0.013174067 #>             [,24]       [,25] #>  [1,] 0.046230251 0.020476941 #>  [2,] 0.034039561 0.016574904 #>  [3,] 0.063417681 0.046690905 #>  [4,] 0.053360895 0.034057050 #>  [5,] 0.008449433 0.001574758 #>  [6,] 0.009511592 0.018432498 #>  [7,] 0.011516544 0.019748169 #>  [8,] 0.011697306 0.010519283 #>  [9,] 0.011427620 0.006319430 #> [10,] 0.006878600 0.005632575 #> [11,] 0.026566803 0.018438287 #> [12,] 0.044682077 0.031917902 #> [13,] 0.042379734 0.028876100 #> [14,] 0.008525952 0.008171267 #> [15,] 0.003196416 0.005644399 #> [16,] 0.016278182 0.013737923 #> [17,] 0.031811625 0.026189122 #> [18,] 0.030723705 0.024288117 #> [19,] 0.005552698 0.003038684 #> [20,] 0.021835370 0.031279222 #> [21,] 0.054745546 0.064624548 #> [22,] 0.055360457 0.064022863 #> [23,] 0.016557831 0.024647105 #> [24,] 0.046004530 0.055025719 #> [25,] 0.044052337 0.051021511 #> [26,] 0.005440407 0.003660743 #> [27,] 0.005066223 0.003251848 #> [28,] 0.010746082 0.012487789 #>  #> $measure #> [1] \"OR\" #>  #> $threshold #> [1] 0.28 #>  #> $scenarios #> [1] -1.098612289 -0.693147181 -0.000100005  0.693147181  1.098612289 #>  #> attr(,\"class\") #> [1] \"robustness_index\""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Calculates robustness index sensitivity analysis   (Spineli et al., 2021) performed using R-package   netmeta   metafor.   user defines input function returns robustness index.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"","code":"robustness_index_user(sens, pkg, attribute, threshold)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"sens list R objects class netmeta, netmetabin (see netmeta) rma, rma.glmm, rma.mh, rma.mv, rma.peto, rma.uni (see metafor). number elements equals number analyses using dataset R-package. first element refer primary analysis. Hence, list include least two elements (see 'Details'). pkg Character string indicating R-package values \"netmeta\", \"metafor\". attribute relevant (see netmeta). vector least two characters values \"TE.common\" \"TE.random\". See 'Values' netmeta netmetabin. threshold number indicating threshold robustness, , minimally allowed deviation primary analysis (first element sens) re-analysis results. See 'Details' .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"robustness_index_user prints R console message   green text threshold robustness determined user.   , function returns following list elements: robust_index numeric scalar vector robustness   index values. case pairwise meta-analysis,   robust_index scalar one summary effect size obtained.   case network meta-analysis, robust_index vector   length equal number possible pairwise comparisons;   one robustness index per possible comparison. robust character character vector (length   robust_index) whether primary analysis results   robust frail different re-analyses. kld vector matrix Kullback-Leibler divergence   (KLD) measure summary effect size subsequent re-analysis   primary analysis. case pairwise meta-analysis, kld   vector length equal number total analyses (one KLD   value obtained per analysis). number total analyses equals   length  sens.   case network meta-analysis, robust_index matrix   number rows equal number total analyses number columns   equal number  possible pairwise comparisons; one KLD   value per analysis possible comparison. attribute attributes considered. threshold threshold used inherited   heatmap_robustness function. See 'Details'.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Thresholds robustness proposed odds ratio   standardised mean difference (Spineli et al., 2021).   user may consider values 0.28 0.17 argument   threshold odds ratio standardised mean difference effect   measures (default values), respectively, consider plausible   values. argument threshold defined,   robustness_index considers default values 0.28 0.17   threshold robustness binary continuous outcome, respectively,   regardless effect measure (default thresholds may proper   choices effect measures; hence, use threshold great   caution case). Spineli et al. (2021) offers discussion   specifying threshold robustness. effect measure used (odds ratio standardised   mean difference) elements sens refer different effect   measures, execution function stopped error   message printed R console. robust, value \"robust\" appears calculated   robust_index less threshold; otherwise, value   \"frail\" appears.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"","code":"if (FALSE) { library(netmeta)  data(Baker2009)  # Transform from arm-based to contrast-based format p1 <- pairwise(treatment, exac, total, studlab = paste(study, year), data = Baker2009, sm = \"OR\")  # Conduct standard network meta-analysis net1 <- netmeta(p1, ref = \"Placebo\")  # Calculate the robustness index (random-effects versus fixed-effect) robustness_index_user(sens = list(net1, net1),                       pkg = \"netmeta\",                       attribute = c(\"TE.random\", \"TE.common\"),                       threshold = 0.28) }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian pairwise or network meta-regression — run_metareg","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Performs one-stage pairwise network meta-regression addressing   aggregate binary continuous missing participant outcome data via   pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"","code":"run_metareg(   full,   covariate,   covar_assumption,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"full object S3 class run_model. See 'Value' run_model. covariate numeric vector matrix trial-specific covariate potential effect modifier. See 'Details'. covar_assumption Character string indicating structure intervention--covariate interaction, described Cooper et al. (2009). Set covar_assumption equal \"exchangeable\", \"independent\", \"common\". n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"list R2jags outputs summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   fixed-effect pairwise meta-analysis: EM estimated summary effect measure (according argument   measure defined run_model). beta_all estimated regression coefficient possible   pairwise comparisons according argument covar_assumption. dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. phi informative missingness parameter. fixed-effect network meta-analysis, output additionally   includes: SUCRA surface cumulative ranking (SUCRA) curve   intervention. effectiveneness ranking probability intervention   every rank. random-effects pairwise meta-analysis, output additionally   includes following elements: EM_pred predicted summary effect measure (according   argument measure defined run_model). delta estimated trial-specific effect measure (according   argument measure defined run_model).   multi-arm trial, estimate T-1 effects, T   number interventions trial. tau -trial standard deviation. network meta-analysis, EM EM_pred refer   possible pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network.   multi-arm trial, estimate total T-1 delta   comparisons baseline intervention trial (found first   column element t), T number   interventions trial. Furthermore, output includes following elements: abs_risk adjusted absolute risks intervention.   appears measure = \"\", measure = \"RR\",   measure = \"RD\". leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. run_metareg function also returns arguments data,  measure, model, assumption, covariate,  covar_assumption, n_chains, n_iter, n_burnin,   n_thin inherited relevant functions   package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"run_metareg inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, D, ref,   indic, base_risk run_model   (now contained argument full). prevents specifying   different Bayesian model considered run_model.   Therefore, user needs first apply run_model,   use run_metareg (see 'Examples'). model runs JAGS progress simulation appears   R console. output run_metareg used S3 object   functions package processed provide   end-user-ready output. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. models described Spineli et al. (2021), Spineli (2019)   extended incorporate one study-level covariate variable   following assumptions Cooper et al. (2009) structure   intervention--covariate interaction. covariate can either   numeric vector matrix columns equal maximum number arms   dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Publication year pub_year <- c(1996, 1998, 1999, 2000, 2000, 2001, rep(2002, 5), 2003, 2003,               rep(2005, 4), 2006, 2006, 2007, 2007)  # \\donttest{ # Perform a random-effects network meta-regression (exchangeable structure) # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_metareg(full = res,             covariate = pub_year,             covar_assumption = \"exchangeable\",             n_chains = 3,             n_iter = 1000,             n_burnin = 100,             n_thin = 1) #> **Fixed baseline risk assigned** #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 100 #>    Unobserved stochastic nodes: 157 #>    Total graph size: 2808 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>                mean        sd       2.5%          25%         50%         75% #> EM[2,1] -1.00529854 0.4819152 -1.8476039 -1.328179831 -1.06099605 -0.65506502 #> EM[3,1] -0.68424096 0.4188484 -1.5307676 -0.965925084 -0.66438555 -0.38805916 #> EM[4,1] -0.02021387 0.3856463 -0.6892483 -0.299636132 -0.05152733  0.23239753 #> EM[5,1] -0.33615671 0.3340816 -0.9096252 -0.580526817 -0.35711623 -0.10267752 #> EM[6,1] -0.14608123 0.2853344 -0.7170945 -0.337650098 -0.13399403  0.08424071 #> EM[7,1] -0.46495701 0.1462797 -0.7716639 -0.561339838 -0.44042539 -0.36444321 #> EM[8,1] -0.51902726 0.1570965 -0.8428838 -0.618165767 -0.51820471 -0.41724201 #> EM[3,2]  0.32105758 0.5702442 -0.8775104 -0.064322639  0.37323933  0.76522765 #> EM[4,2]  0.98508467 0.5648936 -0.1116071  0.551608966  1.02342594  1.42756591 #> EM[5,2]  0.66914183 0.5335059 -0.5201407  0.386137010  0.70553939  1.04209994 #> EM[6,2]  0.85921731 0.5103518 -0.2472571  0.543257615  0.89731088  1.25318850 #> EM[7,2]  0.54034153 0.5067375 -0.5398412  0.200552681  0.62240919  0.88905063 #> EM[8,2]  0.48627128 0.4812065 -0.5070530  0.159716292  0.53874338  0.80306912 #> EM[4,3]  0.66402709 0.5033249 -0.3164906  0.302432058  0.70205884  0.97015820 #> EM[5,3]  0.34808425 0.4662796 -0.4670116 -0.009575169  0.36048242  0.65846729 #> EM[6,3]  0.53815973 0.4097712 -0.3311351  0.294533884  0.55955563  0.79722694 #> EM[7,3]  0.21928395 0.4009301 -0.5729912 -0.045203647  0.20583715  0.47210911 #> EM[8,3]  0.16521370 0.3963573 -0.6557822 -0.095885774  0.16015001  0.43142217 #> EM[5,4] -0.31594284 0.4650884 -1.2089617 -0.674324129 -0.27250509  0.04011364 #> EM[6,4] -0.12586736 0.4161673 -1.0236173 -0.368527849 -0.12406139  0.17026441 #> EM[7,4] -0.44474314 0.3720271 -1.2275828 -0.699998508 -0.43912689 -0.15887766 #> EM[8,4] -0.49881339 0.3740597 -1.2967552 -0.755361139 -0.46086544 -0.22650138 #> EM[6,5]  0.19007548 0.3972893 -0.5761006 -0.071621325  0.17210305  0.44956788 #> EM[7,5] -0.12880030 0.3299942 -0.8084267 -0.355258773 -0.12742393  0.11045620 #> EM[8,5] -0.18287055 0.3167550 -0.8318560 -0.390066167 -0.18737167  0.02672608 #> EM[7,6] -0.31887578 0.2795295 -0.7990703 -0.533515985 -0.33588640 -0.12998658 #> EM[8,6] -0.37294603 0.2659788 -0.8488429 -0.555427224 -0.37701675 -0.19374094 #> EM[8,7] -0.05407025 0.1710047 -0.3832111 -0.161147281 -0.06617698  0.05938542 #>               97.5%     Rhat n.eff #> EM[2,1] -0.04730857 1.048458    58 #> EM[3,1]  0.10918179 1.154737    18 #> EM[4,1]  0.84331128 1.213182    15 #> EM[5,1]  0.37270586 1.047292    47 #> EM[6,1]  0.31874667 1.513361     7 #> EM[7,1] -0.21150359 1.164608    19 #> EM[8,1] -0.21816265 1.209995    14 #> EM[3,2]  1.30564491 1.017834   210 #> EM[4,2]  1.93739487 1.040774    62 #> EM[5,2]  1.61712612 1.042500   270 #> EM[6,2]  1.71450213 1.027099   110 #> EM[7,2]  1.39678785 1.018470   300 #> EM[8,2]  1.33417280 1.027117   310 #> EM[4,3]  1.66851425 1.038288    68 #> EM[5,3]  1.32224721 1.037851    64 #> EM[6,3]  1.28899099 1.003761   720 #> EM[7,3]  1.04977285 1.069574    35 #> EM[8,3]  0.94767457 1.050955    46 #> EM[5,4]  0.47159097 1.074625    67 #> EM[6,4]  0.65353533 1.082894    31 #> EM[7,4]  0.19358104 1.136653    20 #> EM[8,4]  0.11868009 1.113902    33 #> EM[6,5]  0.97296933 1.077591    31 #> EM[7,5]  0.45298979 1.017055   140 #> EM[8,5]  0.40664038 1.002281  1100 #> EM[7,6]  0.24712780 1.222536    14 #> EM[8,6]  0.14146202 1.199143    15 #> EM[8,7]  0.29426251 1.031709    82 #>  #> $EM_pred #>                     mean        sd       2.5%         25%         50% #> EM.pred[2,1] -1.00588963 0.5158004 -1.9169461 -1.34242066 -1.07352986 #> EM.pred[3,1] -0.68747041 0.4567489 -1.6035499 -0.98793301 -0.66989729 #> EM.pred[4,1] -0.01995019 0.4261669 -0.7871349 -0.31351501 -0.03740113 #> EM.pred[5,1] -0.33801663 0.3802443 -1.0000814 -0.59963587 -0.35962301 #> EM.pred[6,1] -0.14651365 0.3389504 -0.8464253 -0.36318809 -0.14149618 #> EM.pred[7,1] -0.46870452 0.2342221 -0.9540994 -0.59965325 -0.44595354 #> EM.pred[8,1] -0.51914465 0.2338681 -1.0023046 -0.64498027 -0.52001648 #> EM.pred[3,2]  0.32172779 0.6005243 -0.9557578 -0.07277241  0.36227513 #> EM.pred[4,2]  0.98199775 0.5921032 -0.1618863  0.53220203  1.02921909 #> EM.pred[5,2]  0.67175037 0.5561415 -0.5430974  0.36416991  0.70810081 #> EM.pred[6,2]  0.86139903 0.5426984 -0.3190066  0.52104686  0.90365974 #> EM.pred[7,2]  0.54170628 0.5430435 -0.6187415  0.18909600  0.63421863 #> EM.pred[8,2]  0.48804676 0.5103774 -0.6127387  0.15088833  0.54307614 #> EM.pred[4,3]  0.66441209 0.5351517 -0.4127158  0.30110310  0.70393595 #> EM.pred[5,3]  0.35432532 0.4944569 -0.5236606 -0.02719968  0.35750008 #> EM.pred[6,3]  0.53189953 0.4456997 -0.4364553  0.26698635  0.56208860 #> EM.pred[7,3]  0.22086988 0.4350017 -0.6592606 -0.05726943  0.21337116 #> EM.pred[8,3]  0.17020926 0.4395100 -0.7214890 -0.10893783  0.15486235 #> EM.pred[5,4] -0.31298371 0.4943185 -1.2222746 -0.69865060 -0.28791083 #> EM.pred[6,4] -0.12643659 0.4565288 -1.1073458 -0.38573583 -0.12361535 #> EM.pred[7,4] -0.44593915 0.4164441 -1.2859067 -0.71493991 -0.44842020 #> EM.pred[8,4] -0.49715609 0.4179326 -1.3657850 -0.78711363 -0.47187564 #> EM.pred[6,5]  0.18931173 0.4360112 -0.6733400 -0.10675342  0.17659313 #> EM.pred[7,5] -0.13363526 0.3755361 -0.9045926 -0.37496269 -0.12295142 #> EM.pred[8,5] -0.17875239 0.3590306 -0.9178058 -0.40662454 -0.17954585 #> EM.pred[7,6] -0.31902750 0.3397397 -0.9415948 -0.56156787 -0.33967767 #> EM.pred[8,6] -0.36916285 0.3221295 -0.9676959 -0.60683020 -0.37790426 #> EM.pred[8,7] -0.04999709 0.2473760 -0.5457903 -0.18822532 -0.06613384 #>                      75%        97.5%     Rhat n.eff #> EM.pred[2,1] -0.64474053  0.022959059 1.046119    63 #> EM.pred[3,1] -0.38608807  0.194113800 1.124567    21 #> EM.pred[4,1]  0.27881598  0.889324979 1.157733    18 #> EM.pred[5,1] -0.08920566  0.473782967 1.036448    59 #> EM.pred[6,1]  0.10731868  0.443303663 1.314238    10 #> EM.pred[7,1] -0.33487185 -0.001183255 1.062099    49 #> EM.pred[8,1] -0.38280939 -0.041365120 1.085521    30 #> EM.pred[3,2]  0.78242931  1.386730755 1.020009   220 #> EM.pred[4,2]  1.45000393  1.976165788 1.042692    57 #> EM.pred[5,2]  1.06075331  1.691364626 1.036643   250 #> EM.pred[6,2]  1.27287318  1.770076312 1.025728   120 #> EM.pred[7,2]  0.90225659  1.455655900 1.015348   320 #> EM.pred[8,2]  0.82725832  1.387953983 1.024353   300 #> EM.pred[4,3]  0.99174106  1.700953638 1.031208    79 #> EM.pred[5,3]  0.67785163  1.392094355 1.031190    77 #> EM.pred[6,3]  0.81261751  1.366773625 1.003819   770 #> EM.pred[7,3]  0.49075817  1.122032537 1.058204    42 #> EM.pred[8,3]  0.45153752  1.043028122 1.043380    53 #> EM.pred[5,4]  0.06086906  0.588073480 1.062862    75 #> EM.pred[6,4]  0.17452813  0.760527632 1.074414    33 #> EM.pred[7,4] -0.15165881  0.313728413 1.097984    26 #> EM.pred[8,4] -0.20160367  0.244836223 1.070015    49 #> EM.pred[6,5]  0.47290058  0.993965079 1.052473    44 #> EM.pred[7,5]  0.12493887  0.533607322 1.011250   190 #> EM.pred[8,5]  0.05019828  0.503271606 1.001302  2500 #> EM.pred[7,6] -0.09371803  0.356674660 1.145045    20 #> EM.pred[8,6] -0.16407294  0.264227536 1.136214    20 #> EM.pred[8,7]  0.09353640  0.476449283 1.013059   270 #>  #> $tau #>         mean           sd         2.5%          25%          50%          75%  #>  0.155377944  0.086717239  0.008838483  0.091289132  0.149434921  0.210050748  #>        97.5%         Rhat        n.eff  #>  0.344959157  1.265317257 18.000000000  #>  #> $delta #>                     mean        sd       2.5%        25%         50% #> delta[1,2]  -0.068335755 0.4348582 -0.8294456 -0.3756692 -0.09740641 #> delta[2,2]  -0.024726087 0.3921565 -0.7003575 -0.3005254 -0.05337818 #> delta[3,2]  -0.512895905 0.1963167 -0.9352536 -0.6370697 -0.48979487 #> delta[4,2]  -0.481490167 0.1813795 -0.8524894 -0.5896667 -0.48868934 #> delta[5,2]  -0.485226779 0.2079882 -0.9342070 -0.6050633 -0.45897599 #> delta[6,2]  -0.382102475 0.1948538 -0.7529478 -0.5038780 -0.38372928 #> delta[7,2]  -0.486944990 0.1728329 -0.8367527 -0.5931525 -0.49813500 #> delta[8,2]  -0.443717504 0.1653193 -0.7834299 -0.5523452 -0.43178529 #> delta[9,2]  -0.480464567 0.1640213 -0.8369133 -0.5806713 -0.45776621 #> delta[10,2]  0.044119746 0.4025486 -0.6691722 -0.2347512  0.01310516 #> delta[11,2] -0.168293180 0.2744781 -0.7271711 -0.3532928 -0.16166527 #> delta[12,2] -0.007656073 0.3698350 -0.6628834 -0.2707419 -0.03914778 #> delta[13,2] -1.055612113 0.4495421 -1.8408939 -1.3661858 -1.10680430 #> delta[14,2] -0.082622981 0.2039942 -0.5165806 -0.2039230 -0.08864376 #> delta[15,2] -0.117699566 0.2918891 -0.7007423 -0.3185578 -0.11674314 #> delta[16,2] -0.374960291 0.1708452 -0.6801509 -0.5013996 -0.38292693 #> delta[17,2] -0.457199163 0.2994495 -1.0774146 -0.6739936 -0.44484398 #> delta[18,2] -0.391489302 0.3642783 -1.0375055 -0.6508085 -0.41102400 #> delta[19,2] -0.378055784 0.3583545 -1.0360232 -0.6316349 -0.40346824 #> delta[20,2] -0.460483516 0.1950202 -0.8742400 -0.5848839 -0.44227742 #> delta[21,2] -0.587071267 0.2229648 -1.0759199 -0.7245267 -0.55545838 #> delta[9,3]  -0.569767867 0.1805351 -0.9600465 -0.6802943 -0.54970440 #> delta[10,3] -0.352374234 0.3343071 -0.9185813 -0.5976934 -0.37357846 #> delta[12,3] -0.239417142 0.3532146 -0.8373132 -0.5146928 -0.26751861 #> delta[13,3] -0.737342109 0.4054170 -1.5521778 -1.0321700 -0.70564768 #> delta[19,3] -0.530611029 0.2366434 -1.0767609 -0.6661863 -0.48743652 #> delta[10,4] -0.500518396 0.2093311 -0.9695882 -0.6311493 -0.47333456 #> delta[12,4] -0.388470697 0.1998985 -0.7659738 -0.5199038 -0.39314904 #> delta[13,4] -0.239425827 0.3295046 -0.9342704 -0.4520072 -0.23934473 #>                     75%       97.5%     Rhat n.eff #> delta[1,2]   0.24157585  0.85508884 1.189229    16 #> delta[2,2]   0.24187564  0.82935340 1.173895    18 #> delta[3,2]  -0.37957210 -0.15914287 1.168349    17 #> delta[4,2]  -0.37172340 -0.09847547 1.101579    24 #> delta[5,2]  -0.36010780 -0.10035774 1.090753    38 #> delta[6,2]  -0.26593744  0.03939252 1.064902    41 #> delta[7,2]  -0.37740176 -0.11925531 1.164659    17 #> delta[8,2]  -0.33510177 -0.12450417 1.099517    27 #> delta[9,2]  -0.37161131 -0.18574962 1.158961    19 #> delta[10,2]  0.30942310  0.94099895 1.177132    17 #> delta[11,2]  0.04188748  0.28760428 1.443198     8 #> delta[12,2]  0.23137723  0.83971297 1.228599    14 #> delta[13,2] -0.72233959 -0.14607985 1.068031    38 #> delta[14,2]  0.05578537  0.31874874 1.039596    65 #> delta[15,2]  0.11009835  0.38338363 1.455268     8 #> delta[16,2] -0.26519541 -0.01310675 1.050598    55 #> delta[17,2] -0.25958547  0.10106904 1.126290    22 #> delta[18,2] -0.15719454  0.35660230 1.048101    47 #> delta[19,2] -0.12777061  0.32748221 1.050514    44 #> delta[20,2] -0.33999196 -0.08648199 1.044011    54 #> delta[21,2] -0.44297414 -0.18442327 1.155657    18 #> delta[9,3]  -0.45215600 -0.23616008 1.203468    14 #> delta[10,3] -0.11317996  0.32034482 1.051171    44 #> delta[12,3]  0.00045639  0.47782314 1.024122    89 #> delta[13,3] -0.43511476 -0.01384109 1.202672    15 #> delta[19,3] -0.37266146 -0.13504973 1.070637    36 #> delta[10,4] -0.36110436 -0.12492649 1.111460    26 #> delta[12,4] -0.26822811  0.02311352 1.061454    62 #> delta[13,4]  0.01125824  0.28925385 1.496925     8 #>  #> $beta_all #>                       mean         sd        2.5%          25%           50% #> beta.all[2,1]  0.033058439 0.14463745 -0.26085974 -0.018090678  0.0378168524 #> beta.all[3,1]  0.042317736 0.17202897 -0.30970222 -0.012591244  0.0401040357 #> beta.all[4,1]  0.067857669 0.06664348 -0.04026234  0.024183961  0.0586147875 #> beta.all[5,1] -0.018688382 0.09794424 -0.27817284 -0.062379743 -0.0005144606 #> beta.all[6,1]  0.087516332 0.08902771 -0.05310802  0.028515671  0.0718670653 #> beta.all[7,1]  0.036155681 0.04396597 -0.05358703  0.007822963  0.0374308652 #> beta.all[8,1]  0.006718587 0.04602927 -0.08937244 -0.023604326  0.0107505804 #> beta.all[3,2]  0.009259297 0.20696832 -0.38849874 -0.051151892  0.0010403748 #> beta.all[4,2]  0.034799230 0.15317603 -0.22966647 -0.021751669  0.0102121691 #> beta.all[5,2] -0.051746821 0.15678474 -0.44959241 -0.099614991 -0.0181135185 #> beta.all[6,2]  0.054457893 0.16208862 -0.19383096 -0.013541655  0.0186010644 #> beta.all[7,2]  0.003097242 0.14613701 -0.29410745 -0.045653793  0.0005537098 #> beta.all[8,2] -0.026339852 0.14363467 -0.34033567 -0.076539161 -0.0116601688 #> beta.all[4,3]  0.025539933 0.17394203 -0.30805692 -0.023948470  0.0087492279 #> beta.all[5,3] -0.061006117 0.18490790 -0.51018377 -0.104023326 -0.0171359075 #> beta.all[6,3]  0.045198596 0.18127634 -0.29744489 -0.013550945  0.0173134336 #> beta.all[7,3] -0.006162055 0.17149949 -0.37771024 -0.047705564 -0.0006163380 #> beta.all[8,3] -0.035599148 0.17546521 -0.42978562 -0.081804528 -0.0128354851 #> beta.all[5,4] -0.086546050 0.12291949 -0.40093338 -0.147575628 -0.0474338466 #> beta.all[6,4]  0.019658663 0.08888816 -0.15426202 -0.024224761  0.0055878767 #> beta.all[7,4] -0.031701988 0.07011054 -0.19090954 -0.070250939 -0.0158585813 #> beta.all[8,4] -0.061139081 0.08024114 -0.24953155 -0.108675441 -0.0434511336 #> beta.all[6,5]  0.106204713 0.14050424 -0.06221950  0.003458725  0.0596518877 #> beta.all[7,5]  0.054844063 0.10131055 -0.09906526 -0.005064518  0.0260992526 #> beta.all[8,5]  0.025406969 0.09339718 -0.14131851 -0.020628306  0.0070607955 #> beta.all[7,6] -0.051360651 0.09410223 -0.28548747 -0.099933522 -0.0261698610 #> beta.all[8,6] -0.080797745 0.10319955 -0.34276574 -0.135103936 -0.0508124718 #> beta.all[8,7] -0.029437094 0.05411091 -0.15052983 -0.062284904 -0.0187587956 #>                         75%      97.5%     Rhat n.eff #> beta.all[2,1]  0.0864279200 0.31229304 1.032645   210 #> beta.all[3,1]  0.0886512512 0.42118742 1.052969  2700 #> beta.all[4,1]  0.1042613816 0.21994990 1.013610   260 #> beta.all[5,1]  0.0457145039 0.12344361 1.002547  1100 #> beta.all[6,1]  0.1361076219 0.30029294 1.022796   140 #> beta.all[7,1]  0.0640504126 0.12233583 1.011940   220 #> beta.all[8,1]  0.0407122830 0.08744087 1.002924  1400 #> beta.all[3,2]  0.0532024639 0.46470592 1.061546   330 #> beta.all[4,2]  0.0778944742 0.38667836 1.039162   270 #> beta.all[5,2]  0.0149386425 0.19510777 1.015639   190 #> beta.all[6,2]  0.1005926635 0.44732992 1.049596    94 #> beta.all[7,2]  0.0484339139 0.30695622 1.025570   380 #> beta.all[8,2]  0.0188701032 0.26140187 1.023806   230 #> beta.all[4,3]  0.0732960290 0.41310718 1.046186   550 #> beta.all[5,3]  0.0128087486 0.21563981 1.028223  3000 #> beta.all[6,3]  0.0955993291 0.48099934 1.036097  1100 #> beta.all[7,3]  0.0445958237 0.32567806 1.043563   910 #> beta.all[8,3]  0.0193577023 0.30141777 1.057721  1500 #> beta.all[5,4] -0.0009686408 0.07679649 1.008770   310 #> beta.all[6,4]  0.0603754495 0.23654594 1.035812    63 #> beta.all[7,4]  0.0082753666 0.09018048 1.004997   640 #> beta.all[8,4] -0.0024027660 0.06313785 1.006212   770 #> beta.all[6,5]  0.1803369139 0.46729633 1.011745   690 #> beta.all[7,5]  0.1037277834 0.32161397 1.007171   340 #> beta.all[8,5]  0.0625224196 0.27839687 1.007306   510 #> beta.all[7,6]  0.0047730365 0.09789179 1.034056    81 #> beta.all[8,6] -0.0035528868 0.05505287 1.023577   140 #> beta.all[8,7]  0.0038301919 0.06474397 1.003464   680 #>  #> $dev_o #>                  mean        sd         2.5%        25%       50%       75% #> dev.o[1,1]  2.1144220 2.3241784 0.0056276204 0.44544019 1.3706629 2.9910200 #> dev.o[2,1]  0.9660950 1.3381388 0.0008705296 0.10039462 0.4421907 1.2504955 #> dev.o[3,1]  0.9563690 1.3853936 0.0014561478 0.09250027 0.4178224 1.2422714 #> dev.o[4,1]  0.8411053 1.1597075 0.0008301639 0.10087384 0.3974472 1.1144453 #> dev.o[5,1]  0.7138653 1.0376277 0.0006043250 0.06896656 0.3196610 0.9458378 #> dev.o[6,1]  1.0502057 1.2934795 0.0018839724 0.13124949 0.5672362 1.4766437 #> dev.o[7,1]  0.8295249 1.2790206 0.0008741890 0.08590396 0.3604669 1.0455409 #> dev.o[8,1]  0.6860805 0.9920832 0.0005527218 0.06571331 0.2959001 0.8786053 #> dev.o[9,1]  0.6543496 0.9274815 0.0011031425 0.06724735 0.3024988 0.8608892 #> dev.o[10,1] 0.6035687 0.9101811 0.0007917569 0.05913384 0.2597822 0.7730319 #> dev.o[11,1] 0.8004118 1.0976097 0.0005338336 0.07655306 0.3651420 1.0881741 #> dev.o[12,1] 0.8907830 1.1150369 0.0007381432 0.09817252 0.4557629 1.2629958 #> dev.o[13,1] 1.1225225 1.4713586 0.0020769132 0.13516206 0.5706055 1.5239114 #> dev.o[14,1] 0.8313657 1.1787891 0.0012484149 0.08884667 0.3763183 1.0605619 #> dev.o[15,1] 0.8174370 1.1902210 0.0008777471 0.07851963 0.3683504 1.0691642 #> dev.o[16,1] 1.2693140 1.7681444 0.0015065618 0.14489920 0.5906637 1.6585819 #> dev.o[17,1] 1.6872872 2.1065502 0.0021300611 0.19983327 0.8935727 2.3864862 #> dev.o[18,1] 1.2062083 1.5435343 0.0013948329 0.13158049 0.6014688 1.6498261 #> dev.o[19,1] 1.7996080 1.8280456 0.0040123862 0.41321876 1.2463981 2.6080221 #> dev.o[20,1] 0.7347351 1.0318934 0.0007382430 0.07238628 0.3330500 0.9529796 #> dev.o[21,1] 1.2366015 1.6001307 0.0012310849 0.13108039 0.5977261 1.7427153 #> dev.o[1,2]  2.9201946 1.8606170 0.5181925738 1.56498254 2.5314840 3.8353145 #> dev.o[2,2]  0.8884150 1.2511330 0.0007214869 0.10133309 0.4173141 1.1576630 #> dev.o[3,2]  0.8507425 1.2394464 0.0007708431 0.09351330 0.4029700 1.1064746 #> dev.o[4,2]  0.9190330 1.3003027 0.0008387340 0.08423656 0.4241559 1.2542783 #> dev.o[5,2]  0.5984088 0.8879182 0.0006021135 0.05876022 0.2587291 0.7621815 #> dev.o[6,2]  1.1235148 1.3794095 0.0015398037 0.14814241 0.6111638 1.6265489 #> dev.o[7,2]  0.9445007 1.3853522 0.0011230124 0.09354553 0.4266852 1.2204952 #> dev.o[8,2]  0.6863254 1.0006790 0.0004525483 0.06773246 0.3089317 0.9010245 #> dev.o[9,2]  0.6687363 0.9495577 0.0006157895 0.06621777 0.2990841 0.8723536 #> dev.o[10,2] 1.6844401 1.8706597 0.0022087555 0.28694561 1.0407612 2.4766493 #> dev.o[11,2] 0.9241708 1.3085088 0.0013356262 0.08700280 0.4085374 1.2170434 #> dev.o[12,2] 1.4608080 2.0991147 0.0014231082 0.15015896 0.6535689 1.9016411 #> dev.o[13,2] 1.0410135 1.4346933 0.0007794632 0.11288486 0.5019609 1.3772702 #> dev.o[14,2] 0.7347751 1.0756267 0.0008725066 0.07989105 0.3499509 0.9481846 #> dev.o[15,2] 0.8440338 1.1702224 0.0010214045 0.09171976 0.3940688 1.1219642 #> dev.o[16,2] 1.2663417 1.6691396 0.0013605202 0.15315530 0.6221434 1.7286235 #> dev.o[17,2] 1.8322811 1.8107543 0.0073311086 0.43208297 1.3033804 2.6918987 #> dev.o[18,2] 1.2095745 1.6019734 0.0016041516 0.14595782 0.6085730 1.6193154 #> dev.o[19,2] 0.4622362 0.6576438 0.0004728090 0.04336968 0.2037384 0.6348370 #> dev.o[20,2] 0.7600182 1.0783313 0.0006635949 0.07667468 0.3482954 0.9987820 #> dev.o[21,2] 1.1688933 1.4115983 0.0012843735 0.14528526 0.6563298 1.7037959 #> dev.o[9,3]  0.7855315 1.0901429 0.0008006343 0.08390065 0.3674515 1.0469157 #> dev.o[10,3] 0.8536658 1.2094056 0.0006172191 0.07735959 0.3840513 1.1299086 #> dev.o[12,3] 1.2331130 1.5276441 0.0014187774 0.14841163 0.6710531 1.7678375 #> dev.o[13,3] 0.9762188 1.4206409 0.0009399559 0.09717408 0.4164528 1.2775880 #> dev.o[19,3] 1.5153836 1.3190805 0.0142192004 0.53209805 1.1577461 2.1429789 #> dev.o[10,4] 1.1143761 1.4354860 0.0013462612 0.13668414 0.5716603 1.5232018 #> dev.o[12,4] 0.9442859 1.2861843 0.0007457390 0.09615544 0.4322589 1.3046994 #> dev.o[13,4] 1.1021886 1.4473945 0.0011023749 0.13621208 0.5511611 1.5106773 #>                97.5%     Rhat n.eff #> dev.o[1,1]  8.569682 1.004438  3000 #> dev.o[2,1]  5.022305 1.003503  1300 #> dev.o[3,1]  4.813326 1.001141  3000 #> dev.o[4,1]  4.148791 1.005476   430 #> dev.o[5,1]  3.416924 1.000559  3000 #> dev.o[6,1]  4.639079 1.002096  2200 #> dev.o[7,1]  4.472570 1.002699   910 #> dev.o[8,1]  3.753249 1.001674  1700 #> dev.o[9,1]  3.255576 1.000901  3000 #> dev.o[10,1] 3.156125 1.002505  1000 #> dev.o[11,1] 4.118488 1.001719  1600 #> dev.o[12,1] 3.873433 1.001705  1700 #> dev.o[13,1] 5.188593 1.007832   370 #> dev.o[14,1] 4.383927 1.002822   860 #> dev.o[15,1] 4.115976 1.007694   320 #> dev.o[16,1] 6.616076 1.002163  1200 #> dev.o[17,1] 7.487245 1.006833   320 #> dev.o[18,1] 5.625774 1.002657  1300 #> dev.o[19,1] 6.740918 1.003974   980 #> dev.o[20,1] 3.742148 1.001008  3000 #> dev.o[21,1] 5.995656 1.003905   590 #> dev.o[1,2]  7.569059 1.006820   400 #> dev.o[2,2]  4.633746 1.010294   410 #> dev.o[3,2]  4.242241 1.004197   540 #> dev.o[4,2]  4.489900 1.000529  3000 #> dev.o[5,2]  3.090549 1.000897  3000 #> dev.o[6,2]  4.743374 1.001533  1900 #> dev.o[7,2]  4.757957 1.000570  3000 #> dev.o[8,2]  3.496247 1.002510  2700 #> dev.o[9,2]  3.517475 1.000912  3000 #> dev.o[10,2] 6.883395 1.007290   350 #> dev.o[11,2] 4.787343 1.001221  3000 #> dev.o[12,2] 7.787262 1.015804   140 #> dev.o[13,2] 4.892645 1.002871   850 #> dev.o[14,2] 3.769393 1.000625  3000 #> dev.o[15,2] 4.303421 1.016924   120 #> dev.o[16,2] 6.099104 1.001044  3000 #> dev.o[17,2] 6.649325 1.009152   370 #> dev.o[18,2] 5.878440 1.003830   670 #> dev.o[19,2] 2.299411 1.001689  1700 #> dev.o[20,2] 3.942073 1.003799  2000 #> dev.o[21,2] 5.050442 1.015516   200 #> dev.o[9,3]  3.934027 1.002945  2800 #> dev.o[10,3] 4.280849 1.001352  2300 #> dev.o[12,3] 5.263393 1.006603   330 #> dev.o[13,3] 4.892862 1.000599  3000 #> dev.o[19,3] 5.034611 1.010644   470 #> dev.o[10,4] 5.144638 1.003577   710 #> dev.o[12,4] 4.398748 1.002219  1200 #> dev.o[13,4] 5.163793 1.001588  1800 #>  #> $hat_par #>                     mean         sd        2.5%         25%        50% #> hat.par[1,1]    1.696656  0.8283849   0.3663567   1.0806069   1.600467 #> hat.par[2,1]   50.417873  5.1047648  40.2944004  46.9666323  50.411992 #> hat.par[3,1]   45.043333  4.7412984  35.9513585  41.8447156  45.017640 #> hat.par[4,1]   42.360589  5.0490585  33.0801774  38.7376561  42.352584 #> hat.par[5,1]   17.395373  2.5852795  12.6916351  15.5967830  17.395866 #> hat.par[6,1]   44.159720  4.1423096  35.9295269  41.3612021  44.331619 #> hat.par[7,1]  157.414691  7.6371046 142.6390580 152.4414059 157.389294 #> hat.par[8,1]   68.893944  5.3166821  58.6470009  65.4396706  68.720441 #> hat.par[9,1]   90.361636  4.8781497  81.2389855  87.0461699  90.318757 #> hat.par[10,1]  78.211346  3.6964528  70.6009153  75.8602681  78.315462 #> hat.par[11,1]  74.654499  5.6305447  64.0078585  70.7770329  74.678721 #> hat.par[12,1]  75.847171  4.2891941  67.2408628  72.8909342  75.947790 #> hat.par[13,1]  49.785287  4.5715944  41.1084040  46.6672131  49.733026 #> hat.par[14,1]  34.661092  4.7575133  25.8070806  31.4731885  34.456092 #> hat.par[15,1]  35.074866  4.7151813  26.3409625  31.8181506  34.831730 #> hat.par[16,1] 304.064219 13.2806192 277.8799371 295.3100462 303.954238 #> hat.par[17,1]  11.293630  2.7028445   6.4805186   9.3685863  11.156303 #> hat.par[18,1]  21.663279  3.4236892  15.3720989  19.2424126  21.566554 #> hat.par[19,1]   3.901450  1.3486463   1.7239829   2.9465219   3.752662 #> hat.par[20,1]  23.950187  3.6945903  17.0902696  21.3732984  23.785522 #> hat.par[21,1]  31.998702  4.6267771  23.3971049  28.7251307  31.796994 #> hat.par[1,2]    1.291628  0.7266045   0.2549455   0.7454408   1.170689 #> hat.par[2,2]   45.389926  5.0073233  35.4379803  41.8253812  45.376867 #> hat.par[3,2]   29.876130  4.0598491  22.5946016  26.9492942  29.772216 #> hat.par[4,2]   43.357849  5.4520518  33.4132540  39.4962160  43.212644 #> hat.par[5,2]   11.470619  2.1718204   7.6322866   9.9448755  11.345290 #> hat.par[6,2]   34.770308  3.9513808  27.7351716  31.9620785  34.533486 #> hat.par[7,2]  196.225698 10.3143587 176.3869279 189.4288847 196.225601 #> hat.par[8,2]   51.003600  4.8766231  41.9223436  47.6213105  50.952189 #> hat.par[9,2]   81.322047  5.5490360  70.4118227  77.6308589  81.222873 #> hat.par[10,2]  72.605917  3.8323708  64.8996118  69.9877910  72.661462 #> hat.par[11,2] 117.727383  8.3516198 101.6432091 112.0861978 117.631976 #> hat.par[12,2]  82.797688  5.5266593  72.3897546  79.1408237  82.720484 #> hat.par[13,2]  25.903667  4.6487252  17.8857848  22.5598465  25.662012 #> hat.par[14,2]  31.054899  4.4429071  22.7305938  27.9471422  30.985327 #> hat.par[15,2]  34.044596  4.6851801  25.5475492  30.8407167  33.796859 #> hat.par[16,2] 247.243931 12.5786639 223.0845657 238.5498463 246.850221 #> hat.par[17,2]   6.758705  1.9094440   3.4854152   5.3843595   6.596467 #> hat.par[18,2]  13.305906  2.7731710   8.3270440  11.3711653  13.175938 #> hat.par[19,2]   2.559973  0.9957588   1.0262100   1.8350208   2.399365 #> hat.par[20,2]  20.080371  3.5517711  13.8331602  17.5859880  19.852044 #> hat.par[21,2]  21.988321  3.8239285  14.6043021  19.3013577  21.916632 #> hat.par[9,3]   79.317695  5.6763405  68.4499243  75.4362469  79.308534 #> hat.par[10,3]  69.340516  4.5429887  59.9667222  66.3968345  69.405371 #> hat.par[12,3]  67.175680  4.8610535  58.2236948  63.7748002  67.137301 #> hat.par[13,3]  35.381695  5.0960489  25.5112660  31.9944041  35.247978 #> hat.par[19,3]   2.614879  0.9864313   1.0597277   1.9014735   2.460017 #> hat.par[10,4]  66.353238  4.4255855  57.4431998  63.4354142  66.435639 #> hat.par[12,4]  62.237851  4.5321954  53.6266429  59.1598384  62.235625 #> hat.par[13,4]  41.140747  4.7409267  32.1296856  37.8679288  41.143515 #>                      75%      97.5%     Rhat n.eff #> hat.par[1,1]    2.196944   3.579135 1.001177  3000 #> hat.par[2,1]   53.916197  60.299134 1.015467   160 #> hat.par[3,1]   48.217455  54.711476 1.009002   240 #> hat.par[4,1]   45.545354  52.895871 1.016827   150 #> hat.par[5,1]   19.077093  22.605184 1.001537  1900 #> hat.par[6,1]   47.013206  51.925763 1.001551  1900 #> hat.par[7,1]  162.640054 172.393511 1.002270  1100 #> hat.par[8,1]   72.367186  79.921287 1.004147   550 #> hat.par[9,1]   93.563729 100.360499 1.016077   140 #> hat.par[10,1]  80.729454  85.069976 1.008472   430 #> hat.par[11,1]  78.376381  85.957444 1.024644    87 #> hat.par[12,1]  78.932519  83.615788 1.002286  1100 #> hat.par[13,1]  52.809959  58.692740 1.007901   540 #> hat.par[14,1]  37.814947  44.474567 1.007798   310 #> hat.par[15,1]  38.122108  44.788101 1.024258   120 #> hat.par[16,1] 312.592540 331.532243 1.005327   450 #> hat.par[17,1]  13.091462  16.803765 1.021288   130 #> hat.par[18,1]  23.894760  28.581215 1.008899   240 #> hat.par[19,1]   4.680817   6.958757 1.002991   800 #> hat.par[20,1]  26.402196  31.536023 1.000995  3000 #> hat.par[21,1]  34.932228  41.928228 1.011931   180 #> hat.par[1,2]    1.705134   3.015289 1.007326   380 #> hat.par[2,2]   48.762288  54.881351 1.009355   230 #> hat.par[3,2]   32.526295  38.280678 1.000665  3000 #> hat.par[4,2]   46.764018  54.728051 1.001883  1400 #> hat.par[5,2]   12.862915  15.999057 1.002273  1100 #> hat.par[6,2]   37.330583  42.823392 1.002324  1200 #> hat.par[7,2]  203.225476 216.899940 1.001839  1500 #> hat.par[8,2]   54.180219  60.832184 1.004387   520 #> hat.par[9,2]   85.008263  92.380362 1.002354  1600 #> hat.par[10,2]  75.225249  80.014423 1.008465   250 #> hat.par[11,2] 123.268938 134.569996 1.014414   150 #> hat.par[12,2]  86.481317  94.208834 1.025586   100 #> hat.par[13,2]  28.986109  35.724884 1.002017  3000 #> hat.par[14,2]  33.981972  40.129179 1.001716  1600 #> hat.par[15,2]  37.185241  43.748227 1.036061    78 #> hat.par[16,2] 255.673928 272.760413 1.001559  3000 #> hat.par[17,2]   7.982592  10.953282 1.009554   340 #> hat.par[18,2]  15.050077  19.310760 1.014401   150 #> hat.par[19,2]   3.160607   4.839552 1.003237   730 #> hat.par[20,2]  22.369603  27.772879 1.003545   660 #> hat.par[21,2]  24.653743  29.565960 1.010135   210 #> hat.par[9,3]   83.114397  90.474730 1.002183  1300 #> hat.par[10,3]  72.375454  78.159544 1.002179  1200 #> hat.par[12,3]  70.394580  77.205180 1.010582   220 #> hat.par[13,3]  38.748918  45.625901 1.001687  1700 #> hat.par[19,3]   3.187700   4.976520 1.006170   350 #> hat.par[10,4]  69.283607  74.792901 1.005038   440 #> hat.par[12,4]  65.238760  71.374256 1.005859   380 #> hat.par[13,4]  44.350636  50.565430 1.005390   410 #>  #> $leverage_o #>  [1] 0.9510488 0.9538793 0.8210496 0.7828073 0.6781079 0.6597634 0.8021703 #>  [8] 0.6671922 0.5880971 0.5770901 0.7974310 0.6238832 0.7581355 0.7730964 #> [15] 0.7760928 0.9241370 0.9538399 0.8454642 0.7508113 0.7346031 0.8936774 #> [22] 0.2235620 0.8830999 0.6939986 0.8455207 0.5711096 0.6917178 0.9175431 #> [29] 0.6593285 0.6589761 0.6778637 0.9172123 1.0089345 1.0405714 0.6943810 #> [36] 0.8114098 0.9234332 0.3906610 0.6701869 0.3241506 0.7596301 0.6875404 #> [43] 0.6725420 0.7868377 0.7607152 0.9708053 0.1614274 0.7159825 0.6892331 #> [50] 0.7542756 #>  #> $sign_dev_o #>  [1]  1  1  1 -1  1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1  1  1  1  1 -1 -1 -1  1 #> [26] -1  1  1  1  1  1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1 -1 -1  1 -1 -1 -1  1 -1 #>  #> $phi #>               mean        sd       2.5%        25%        50%        75% #> phi[1] -0.27997388 0.6295308 -1.5224325 -0.7097508 -0.2709672 0.15651887 #> phi[2] -0.05761473 1.0299200 -2.0260166 -0.7510431 -0.1107289 0.66948763 #> phi[3]  0.13473837 0.9356964 -1.7608601 -0.4936518  0.1591891 0.76698994 #> phi[4] -0.55313216 0.9727052 -2.3193267 -1.2296188 -0.6362854 0.08931657 #> phi[5] -0.24084900 0.9523823 -2.0594950 -0.8672821 -0.2438956 0.35159681 #> phi[6]  0.76111740 0.8389460 -0.9681977  0.2429385  0.7875859 1.28482076 #> phi[7] -0.42458618 0.7226891 -1.9539859 -0.8568582 -0.4018811 0.06165038 #> phi[8] -0.26038910 0.9164712 -2.0899202 -0.8408143 -0.2584448 0.34884074 #>            97.5%     Rhat n.eff #> phi[1] 0.8866142 1.425888     8 #> phi[2] 1.9869176 1.009246   510 #> phi[3] 1.9216588 1.005985   380 #> phi[4] 1.5412356 1.088635    44 #> phi[5] 1.7149850 1.023707   110 #> phi[6] 2.4224710 1.064107    37 #> phi[7] 0.8704727 1.095391    26 #> phi[8] 1.5380416 1.002032  1300 #>  #> $model_assessment #>        DIC       pD      dev #> 1 90.20011 36.87503 53.32508 #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $covariate #>  [1] 1996 1998 1999 2000 2000 2001 2002 2002 2002 2002 2002 2003 2003 2005 2005 #> [16] 2005 2005 2006 2006 2007 2007 #>  #> $covar_assumption #> [1] \"exchangeable\" #>  #> $jagsfit #> Inference for Bugs model at \"4\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>                    mu.vect sd.vect    2.5%     25%     50%     75%   97.5% #> EM[2,1]             -1.005   0.482  -1.848  -1.328  -1.061  -0.655  -0.047 #> EM[3,1]             -0.684   0.419  -1.531  -0.966  -0.664  -0.388   0.109 #> EM[4,1]             -0.020   0.386  -0.689  -0.300  -0.052   0.232   0.843 #> EM[5,1]             -0.336   0.334  -0.910  -0.581  -0.357  -0.103   0.373 #> EM[6,1]             -0.146   0.285  -0.717  -0.338  -0.134   0.084   0.319 #> EM[7,1]             -0.465   0.146  -0.772  -0.561  -0.440  -0.364  -0.212 #> EM[8,1]             -0.519   0.157  -0.843  -0.618  -0.518  -0.417  -0.218 #> EM[3,2]              0.321   0.570  -0.878  -0.064   0.373   0.765   1.306 #> EM[4,2]              0.985   0.565  -0.112   0.552   1.023   1.428   1.937 #> EM[5,2]              0.669   0.534  -0.520   0.386   0.706   1.042   1.617 #> EM[6,2]              0.859   0.510  -0.247   0.543   0.897   1.253   1.715 #> EM[7,2]              0.540   0.507  -0.540   0.201   0.622   0.889   1.397 #> EM[8,2]              0.486   0.481  -0.507   0.160   0.539   0.803   1.334 #> EM[4,3]              0.664   0.503  -0.316   0.302   0.702   0.970   1.669 #> EM[5,3]              0.348   0.466  -0.467  -0.010   0.360   0.658   1.322 #> EM[6,3]              0.538   0.410  -0.331   0.295   0.560   0.797   1.289 #> EM[7,3]              0.219   0.401  -0.573  -0.045   0.206   0.472   1.050 #> EM[8,3]              0.165   0.396  -0.656  -0.096   0.160   0.431   0.948 #> EM[5,4]             -0.316   0.465  -1.209  -0.674  -0.273   0.040   0.472 #> EM[6,4]             -0.126   0.416  -1.024  -0.369  -0.124   0.170   0.654 #> EM[7,4]             -0.445   0.372  -1.228  -0.700  -0.439  -0.159   0.194 #> EM[8,4]             -0.499   0.374  -1.297  -0.755  -0.461  -0.227   0.119 #> EM[6,5]              0.190   0.397  -0.576  -0.072   0.172   0.450   0.973 #> EM[7,5]             -0.129   0.330  -0.808  -0.355  -0.127   0.110   0.453 #> EM[8,5]             -0.183   0.317  -0.832  -0.390  -0.187   0.027   0.407 #> EM[7,6]             -0.319   0.280  -0.799  -0.534  -0.336  -0.130   0.247 #> EM[8,6]             -0.373   0.266  -0.849  -0.555  -0.377  -0.194   0.141 #> EM[8,7]             -0.054   0.171  -0.383  -0.161  -0.066   0.059   0.294 #> EM.pred[2,1]        -1.006   0.516  -1.917  -1.342  -1.074  -0.645   0.023 #> EM.pred[3,1]        -0.687   0.457  -1.604  -0.988  -0.670  -0.386   0.194 #> EM.pred[4,1]        -0.020   0.426  -0.787  -0.314  -0.037   0.279   0.889 #> EM.pred[5,1]        -0.338   0.380  -1.000  -0.600  -0.360  -0.089   0.474 #> EM.pred[6,1]        -0.147   0.339  -0.846  -0.363  -0.141   0.107   0.443 #> EM.pred[7,1]        -0.469   0.234  -0.954  -0.600  -0.446  -0.335  -0.001 #> EM.pred[8,1]        -0.519   0.234  -1.002  -0.645  -0.520  -0.383  -0.041 #> EM.pred[3,2]         0.322   0.601  -0.956  -0.073   0.362   0.782   1.387 #> EM.pred[4,2]         0.982   0.592  -0.162   0.532   1.029   1.450   1.976 #> EM.pred[5,2]         0.672   0.556  -0.543   0.364   0.708   1.061   1.691 #> EM.pred[6,2]         0.861   0.543  -0.319   0.521   0.904   1.273   1.770 #> EM.pred[7,2]         0.542   0.543  -0.619   0.189   0.634   0.902   1.456 #> EM.pred[8,2]         0.488   0.510  -0.613   0.151   0.543   0.827   1.388 #> EM.pred[4,3]         0.664   0.535  -0.413   0.301   0.704   0.992   1.701 #> EM.pred[5,3]         0.354   0.494  -0.524  -0.027   0.358   0.678   1.392 #> EM.pred[6,3]         0.532   0.446  -0.436   0.267   0.562   0.813   1.367 #> EM.pred[7,3]         0.221   0.435  -0.659  -0.057   0.213   0.491   1.122 #> EM.pred[8,3]         0.170   0.440  -0.721  -0.109   0.155   0.452   1.043 #> EM.pred[5,4]        -0.313   0.494  -1.222  -0.699  -0.288   0.061   0.588 #> EM.pred[6,4]        -0.126   0.457  -1.107  -0.386  -0.124   0.175   0.761 #> EM.pred[7,4]        -0.446   0.416  -1.286  -0.715  -0.448  -0.152   0.314 #> EM.pred[8,4]        -0.497   0.418  -1.366  -0.787  -0.472  -0.202   0.245 #> EM.pred[6,5]         0.189   0.436  -0.673  -0.107   0.177   0.473   0.994 #> EM.pred[7,5]        -0.134   0.376  -0.905  -0.375  -0.123   0.125   0.534 #> EM.pred[8,5]        -0.179   0.359  -0.918  -0.407  -0.180   0.050   0.503 #> EM.pred[7,6]        -0.319   0.340  -0.942  -0.562  -0.340  -0.094   0.357 #> EM.pred[8,6]        -0.369   0.322  -0.968  -0.607  -0.378  -0.164   0.264 #> EM.pred[8,7]        -0.050   0.247  -0.546  -0.188  -0.066   0.094   0.476 #> SUCRA[1]             0.146   0.133   0.000   0.000   0.143   0.286   0.429 #> SUCRA[2]             0.878   0.227   0.286   0.857   1.000   1.000   1.000 #> SUCRA[3]             0.737   0.251   0.143   0.571   0.857   0.857   1.000 #> SUCRA[4]             0.220   0.230   0.000   0.000   0.143   0.429   0.714 #> SUCRA[5]             0.462   0.276   0.000   0.286   0.429   0.714   0.857 #> SUCRA[6]             0.284   0.218   0.000   0.143   0.286   0.429   0.857 #> SUCRA[7]             0.601   0.183   0.286   0.429   0.571   0.714   1.000 #> SUCRA[8]             0.671   0.156   0.286   0.571   0.714   0.714   1.000 #> abs_risk[1]          0.390   0.000   0.390   0.390   0.390   0.390   0.390 #> abs_risk[2]          0.200   0.078   0.092   0.145   0.181   0.249   0.379 #> abs_risk[3]          0.252   0.076   0.122   0.196   0.248   0.303   0.416 #> abs_risk[4]          0.389   0.090   0.243   0.321   0.378   0.446   0.598 #> abs_risk[5]          0.318   0.072   0.205   0.264   0.309   0.366   0.481 #> abs_risk[6]          0.359   0.064   0.238   0.313   0.359   0.410   0.468 #> abs_risk[7]          0.287   0.030   0.228   0.267   0.292   0.308   0.341 #> abs_risk[8]          0.277   0.031   0.216   0.256   0.276   0.296   0.340 #> beta[1]              0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> beta[2]              0.033   0.145  -0.261  -0.018   0.038   0.086   0.312 #> beta[3]              0.042   0.172  -0.310  -0.013   0.040   0.089   0.421 #> beta[4]              0.068   0.067  -0.040   0.024   0.059   0.104   0.220 #> beta[5]             -0.019   0.098  -0.278  -0.062  -0.001   0.046   0.123 #> beta[6]              0.088   0.089  -0.053   0.029   0.072   0.136   0.300 #> beta[7]              0.036   0.044  -0.054   0.008   0.037   0.064   0.122 #> beta[8]              0.007   0.046  -0.089  -0.024   0.011   0.041   0.087 #> beta.all[2,1]        0.033   0.145  -0.261  -0.018   0.038   0.086   0.312 #> beta.all[3,1]        0.042   0.172  -0.310  -0.013   0.040   0.089   0.421 #> beta.all[4,1]        0.068   0.067  -0.040   0.024   0.059   0.104   0.220 #> beta.all[5,1]       -0.019   0.098  -0.278  -0.062  -0.001   0.046   0.123 #> beta.all[6,1]        0.088   0.089  -0.053   0.029   0.072   0.136   0.300 #> beta.all[7,1]        0.036   0.044  -0.054   0.008   0.037   0.064   0.122 #> beta.all[8,1]        0.007   0.046  -0.089  -0.024   0.011   0.041   0.087 #> beta.all[3,2]        0.009   0.207  -0.388  -0.051   0.001   0.053   0.465 #> beta.all[4,2]        0.035   0.153  -0.230  -0.022   0.010   0.078   0.387 #> beta.all[5,2]       -0.052   0.157  -0.450  -0.100  -0.018   0.015   0.195 #> beta.all[6,2]        0.054   0.162  -0.194  -0.014   0.019   0.101   0.447 #> beta.all[7,2]        0.003   0.146  -0.294  -0.046   0.001   0.048   0.307 #> beta.all[8,2]       -0.026   0.144  -0.340  -0.077  -0.012   0.019   0.261 #> beta.all[4,3]        0.026   0.174  -0.308  -0.024   0.009   0.073   0.413 #> beta.all[5,3]       -0.061   0.185  -0.510  -0.104  -0.017   0.013   0.216 #> beta.all[6,3]        0.045   0.181  -0.297  -0.014   0.017   0.096   0.481 #> beta.all[7,3]       -0.006   0.171  -0.378  -0.048  -0.001   0.045   0.326 #> beta.all[8,3]       -0.036   0.175  -0.430  -0.082  -0.013   0.019   0.301 #> beta.all[5,4]       -0.087   0.123  -0.401  -0.148  -0.047  -0.001   0.077 #> beta.all[6,4]        0.020   0.089  -0.154  -0.024   0.006   0.060   0.237 #> beta.all[7,4]       -0.032   0.070  -0.191  -0.070  -0.016   0.008   0.090 #> beta.all[8,4]       -0.061   0.080  -0.250  -0.109  -0.043  -0.002   0.063 #> beta.all[6,5]        0.106   0.141  -0.062   0.003   0.060   0.180   0.467 #> beta.all[7,5]        0.055   0.101  -0.099  -0.005   0.026   0.104   0.322 #> beta.all[8,5]        0.025   0.093  -0.141  -0.021   0.007   0.063   0.278 #> beta.all[7,6]       -0.051   0.094  -0.285  -0.100  -0.026   0.005   0.098 #> beta.all[8,6]       -0.081   0.103  -0.343  -0.135  -0.051  -0.004   0.055 #> beta.all[8,7]       -0.029   0.054  -0.151  -0.062  -0.019   0.004   0.065 #> delta[1,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[2,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[3,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[4,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[5,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[6,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[7,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[8,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[9,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[10,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[11,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[12,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[13,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[14,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[15,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[16,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[17,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[18,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[19,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[20,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[21,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[1,2]          -0.068   0.435  -0.829  -0.376  -0.097   0.242   0.855 #> delta[2,2]          -0.025   0.392  -0.700  -0.301  -0.053   0.242   0.829 #> delta[3,2]          -0.513   0.196  -0.935  -0.637  -0.490  -0.380  -0.159 #> delta[4,2]          -0.481   0.181  -0.852  -0.590  -0.489  -0.372  -0.098 #> delta[5,2]          -0.485   0.208  -0.934  -0.605  -0.459  -0.360  -0.100 #> delta[6,2]          -0.382   0.195  -0.753  -0.504  -0.384  -0.266   0.039 #> delta[7,2]          -0.487   0.173  -0.837  -0.593  -0.498  -0.377  -0.119 #> delta[8,2]          -0.444   0.165  -0.783  -0.552  -0.432  -0.335  -0.125 #> delta[9,2]          -0.480   0.164  -0.837  -0.581  -0.458  -0.372  -0.186 #> delta[10,2]          0.044   0.403  -0.669  -0.235   0.013   0.309   0.941 #> delta[11,2]         -0.168   0.274  -0.727  -0.353  -0.162   0.042   0.288 #> delta[12,2]         -0.008   0.370  -0.663  -0.271  -0.039   0.231   0.840 #> delta[13,2]         -1.056   0.450  -1.841  -1.366  -1.107  -0.722  -0.146 #> delta[14,2]         -0.083   0.204  -0.517  -0.204  -0.089   0.056   0.319 #> delta[15,2]         -0.118   0.292  -0.701  -0.319  -0.117   0.110   0.383 #> delta[16,2]         -0.375   0.171  -0.680  -0.501  -0.383  -0.265  -0.013 #> delta[17,2]         -0.457   0.299  -1.077  -0.674  -0.445  -0.260   0.101 #> delta[18,2]         -0.391   0.364  -1.038  -0.651  -0.411  -0.157   0.357 #> delta[19,2]         -0.378   0.358  -1.036  -0.632  -0.403  -0.128   0.327 #> delta[20,2]         -0.460   0.195  -0.874  -0.585  -0.442  -0.340  -0.086 #> delta[21,2]         -0.587   0.223  -1.076  -0.725  -0.555  -0.443  -0.184 #> delta[9,3]          -0.570   0.181  -0.960  -0.680  -0.550  -0.452  -0.236 #> delta[10,3]         -0.352   0.334  -0.919  -0.598  -0.374  -0.113   0.320 #> delta[12,3]         -0.239   0.353  -0.837  -0.515  -0.268   0.000   0.478 #> delta[13,3]         -0.737   0.405  -1.552  -1.032  -0.706  -0.435  -0.014 #> delta[19,3]         -0.531   0.237  -1.077  -0.666  -0.487  -0.373  -0.135 #> delta[10,4]         -0.501   0.209  -0.970  -0.631  -0.473  -0.361  -0.125 #> delta[12,4]         -0.388   0.200  -0.766  -0.520  -0.393  -0.268   0.023 #> delta[13,4]         -0.239   0.330  -0.934  -0.452  -0.239   0.011   0.289 #> dev.o[1,1]           2.114   2.324   0.006   0.445   1.371   2.991   8.570 #> dev.o[2,1]           0.966   1.338   0.001   0.100   0.442   1.250   5.022 #> dev.o[3,1]           0.956   1.385   0.001   0.093   0.418   1.242   4.813 #> dev.o[4,1]           0.841   1.160   0.001   0.101   0.397   1.114   4.149 #> dev.o[5,1]           0.714   1.038   0.001   0.069   0.320   0.946   3.417 #> dev.o[6,1]           1.050   1.293   0.002   0.131   0.567   1.477   4.639 #> dev.o[7,1]           0.830   1.279   0.001   0.086   0.360   1.046   4.473 #> dev.o[8,1]           0.686   0.992   0.001   0.066   0.296   0.879   3.753 #> dev.o[9,1]           0.654   0.927   0.001   0.067   0.303   0.861   3.256 #> dev.o[10,1]          0.604   0.910   0.001   0.059   0.260   0.773   3.156 #> dev.o[11,1]          0.800   1.098   0.001   0.077   0.365   1.088   4.118 #> dev.o[12,1]          0.891   1.115   0.001   0.098   0.456   1.263   3.873 #> dev.o[13,1]          1.123   1.471   0.002   0.135   0.571   1.524   5.189 #> dev.o[14,1]          0.831   1.179   0.001   0.089   0.376   1.061   4.384 #> dev.o[15,1]          0.817   1.190   0.001   0.079   0.368   1.069   4.116 #> dev.o[16,1]          1.269   1.768   0.002   0.145   0.591   1.659   6.616 #> dev.o[17,1]          1.687   2.107   0.002   0.200   0.894   2.386   7.487 #> dev.o[18,1]          1.206   1.544   0.001   0.132   0.601   1.650   5.626 #> dev.o[19,1]          1.800   1.828   0.004   0.413   1.246   2.608   6.741 #> dev.o[20,1]          0.735   1.032   0.001   0.072   0.333   0.953   3.742 #> dev.o[21,1]          1.237   1.600   0.001   0.131   0.598   1.743   5.996 #> dev.o[1,2]           2.920   1.861   0.518   1.565   2.531   3.835   7.569 #> dev.o[2,2]           0.888   1.251   0.001   0.101   0.417   1.158   4.634 #> dev.o[3,2]           0.851   1.239   0.001   0.094   0.403   1.106   4.242 #> dev.o[4,2]           0.919   1.300   0.001   0.084   0.424   1.254   4.490 #> dev.o[5,2]           0.598   0.888   0.001   0.059   0.259   0.762   3.091 #> dev.o[6,2]           1.124   1.379   0.002   0.148   0.611   1.627   4.743 #> dev.o[7,2]           0.945   1.385   0.001   0.094   0.427   1.220   4.758 #> dev.o[8,2]           0.686   1.001   0.000   0.068   0.309   0.901   3.496 #> dev.o[9,2]           0.669   0.950   0.001   0.066   0.299   0.872   3.517 #> dev.o[10,2]          1.684   1.871   0.002   0.287   1.041   2.477   6.883 #> dev.o[11,2]          0.924   1.309   0.001   0.087   0.409   1.217   4.787 #> dev.o[12,2]          1.461   2.099   0.001   0.150   0.654   1.902   7.787 #> dev.o[13,2]          1.041   1.435   0.001   0.113   0.502   1.377   4.893 #> dev.o[14,2]          0.735   1.076   0.001   0.080   0.350   0.948   3.769 #> dev.o[15,2]          0.844   1.170   0.001   0.092   0.394   1.122   4.303 #> dev.o[16,2]          1.266   1.669   0.001   0.153   0.622   1.729   6.099 #> dev.o[17,2]          1.832   1.811   0.007   0.432   1.303   2.692   6.649 #> dev.o[18,2]          1.210   1.602   0.002   0.146   0.609   1.619   5.878 #> dev.o[19,2]          0.462   0.658   0.000   0.043   0.204   0.635   2.299 #> dev.o[20,2]          0.760   1.078   0.001   0.077   0.348   0.999   3.942 #> dev.o[21,2]          1.169   1.412   0.001   0.145   0.656   1.704   5.050 #> dev.o[9,3]           0.786   1.090   0.001   0.084   0.367   1.047   3.934 #> dev.o[10,3]          0.854   1.209   0.001   0.077   0.384   1.130   4.281 #> dev.o[12,3]          1.233   1.528   0.001   0.148   0.671   1.768   5.263 #> dev.o[13,3]          0.976   1.421   0.001   0.097   0.416   1.278   4.893 #> dev.o[19,3]          1.515   1.319   0.014   0.532   1.158   2.143   5.035 #> dev.o[10,4]          1.114   1.435   0.001   0.137   0.572   1.523   5.145 #> dev.o[12,4]          0.944   1.286   0.001   0.096   0.432   1.305   4.399 #> dev.o[13,4]          1.102   1.447   0.001   0.136   0.551   1.511   5.164 #> effectiveness[1,1]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,1]   0.682   0.466   0.000   0.000   1.000   1.000   1.000 #> effectiveness[3,1]   0.226   0.418   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,1]   0.004   0.066   0.000   0.000   0.000   0.000   0.000 #> effectiveness[5,1]   0.024   0.153   0.000   0.000   0.000   0.000   0.000 #> effectiveness[6,1]   0.002   0.048   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,1]   0.027   0.161   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,1]   0.034   0.182   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,2]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,2]   0.129   0.335   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,2]   0.357   0.479   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,2]   0.011   0.106   0.000   0.000   0.000   0.000   0.000 #> effectiveness[5,2]   0.158   0.364   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,2]   0.025   0.156   0.000   0.000   0.000   0.000   0.025 #> effectiveness[7,2]   0.128   0.334   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,2]   0.192   0.394   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,3]   0.001   0.026   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,3]   0.039   0.193   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,3]   0.120   0.325   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,3]   0.038   0.190   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,3]   0.114   0.318   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,3]   0.050   0.219   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,3]   0.264   0.441   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,3]   0.375   0.484   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,4]   0.007   0.085   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,4]   0.043   0.203   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,4]   0.108   0.311   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,4]   0.079   0.269   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,4]   0.122   0.328   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,4]   0.077   0.266   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,4]   0.298   0.457   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,4]   0.266   0.442   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,5]   0.052   0.221   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,5]   0.049   0.217   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,5]   0.091   0.287   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,5]   0.155   0.362   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,5]   0.183   0.387   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,5]   0.171   0.377   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,5]   0.192   0.394   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,5]   0.106   0.308   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,6]   0.240   0.427   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,6]   0.034   0.182   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,6]   0.049   0.216   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,6]   0.142   0.349   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,6]   0.191   0.393   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,6]   0.248   0.432   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,6]   0.071   0.257   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,6]   0.024   0.154   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,7]   0.354   0.478   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,7]   0.016   0.124   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,7]   0.031   0.173   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,7]   0.193   0.395   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,7]   0.132   0.339   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,7]   0.252   0.434   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,7]   0.020   0.140   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,7]   0.002   0.045   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,8]   0.346   0.476   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,8]   0.008   0.087   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,8]   0.018   0.133   0.000   0.000   0.000   0.000   0.000 #> effectiveness[4,8]   0.378   0.485   0.000   0.000   0.000   1.000   1.000 #> effectiveness[5,8]   0.076   0.265   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,8]   0.174   0.379   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,8]   0.000   0.018   0.000   0.000   0.000   0.000   0.000 #> hat.par[1,1]         1.697   0.828   0.366   1.081   1.600   2.197   3.579 #> hat.par[2,1]        50.418   5.105  40.294  46.967  50.412  53.916  60.299 #> hat.par[3,1]        45.043   4.741  35.951  41.845  45.018  48.217  54.711 #> hat.par[4,1]        42.361   5.049  33.080  38.738  42.353  45.545  52.896 #> hat.par[5,1]        17.395   2.585  12.692  15.597  17.396  19.077  22.605 #> hat.par[6,1]        44.160   4.142  35.930  41.361  44.332  47.013  51.926 #> hat.par[7,1]       157.415   7.637 142.639 152.441 157.389 162.640 172.394 #> hat.par[8,1]        68.894   5.317  58.647  65.440  68.720  72.367  79.921 #> hat.par[9,1]        90.362   4.878  81.239  87.046  90.319  93.564 100.360 #> hat.par[10,1]       78.211   3.696  70.601  75.860  78.315  80.729  85.070 #> hat.par[11,1]       74.654   5.631  64.008  70.777  74.679  78.376  85.957 #> hat.par[12,1]       75.847   4.289  67.241  72.891  75.948  78.933  83.616 #> hat.par[13,1]       49.785   4.572  41.108  46.667  49.733  52.810  58.693 #> hat.par[14,1]       34.661   4.758  25.807  31.473  34.456  37.815  44.475 #> hat.par[15,1]       35.075   4.715  26.341  31.818  34.832  38.122  44.788 #> hat.par[16,1]      304.064  13.281 277.880 295.310 303.954 312.593 331.532 #> hat.par[17,1]       11.294   2.703   6.481   9.369  11.156  13.091  16.804 #> hat.par[18,1]       21.663   3.424  15.372  19.242  21.567  23.895  28.581 #> hat.par[19,1]        3.901   1.349   1.724   2.947   3.753   4.681   6.959 #> hat.par[20,1]       23.950   3.695  17.090  21.373  23.786  26.402  31.536 #> hat.par[21,1]       31.999   4.627  23.397  28.725  31.797  34.932  41.928 #> hat.par[1,2]         1.292   0.727   0.255   0.745   1.171   1.705   3.015 #> hat.par[2,2]        45.390   5.007  35.438  41.825  45.377  48.762  54.881 #> hat.par[3,2]        29.876   4.060  22.595  26.949  29.772  32.526  38.281 #> hat.par[4,2]        43.358   5.452  33.413  39.496  43.213  46.764  54.728 #> hat.par[5,2]        11.471   2.172   7.632   9.945  11.345  12.863  15.999 #> hat.par[6,2]        34.770   3.951  27.735  31.962  34.533  37.331  42.823 #> hat.par[7,2]       196.226  10.314 176.387 189.429 196.226 203.225 216.900 #> hat.par[8,2]        51.004   4.877  41.922  47.621  50.952  54.180  60.832 #> hat.par[9,2]        81.322   5.549  70.412  77.631  81.223  85.008  92.380 #> hat.par[10,2]       72.606   3.832  64.900  69.988  72.661  75.225  80.014 #> hat.par[11,2]      117.727   8.352 101.643 112.086 117.632 123.269 134.570 #> hat.par[12,2]       82.798   5.527  72.390  79.141  82.720  86.481  94.209 #> hat.par[13,2]       25.904   4.649  17.886  22.560  25.662  28.986  35.725 #> hat.par[14,2]       31.055   4.443  22.731  27.947  30.985  33.982  40.129 #> hat.par[15,2]       34.045   4.685  25.548  30.841  33.797  37.185  43.748 #> hat.par[16,2]      247.244  12.579 223.085 238.550 246.850 255.674 272.760 #> hat.par[17,2]        6.759   1.909   3.485   5.384   6.596   7.983  10.953 #> hat.par[18,2]       13.306   2.773   8.327  11.371  13.176  15.050  19.311 #> hat.par[19,2]        2.560   0.996   1.026   1.835   2.399   3.161   4.840 #> hat.par[20,2]       20.080   3.552  13.833  17.586  19.852  22.370  27.773 #> hat.par[21,2]       21.988   3.824  14.604  19.301  21.917  24.654  29.566 #> hat.par[9,3]        79.318   5.676  68.450  75.436  79.309  83.114  90.475 #> hat.par[10,3]       69.341   4.543  59.967  66.397  69.405  72.375  78.160 #> hat.par[12,3]       67.176   4.861  58.224  63.775  67.137  70.395  77.205 #> hat.par[13,3]       35.382   5.096  25.511  31.994  35.248  38.749  45.626 #> hat.par[19,3]        2.615   0.986   1.060   1.901   2.460   3.188   4.977 #> hat.par[10,4]       66.353   4.426  57.443  63.435  66.436  69.284  74.793 #> hat.par[12,4]       62.238   4.532  53.627  59.160  62.236  65.239  71.374 #> hat.par[13,4]       41.141   4.741  32.130  37.868  41.144  44.351  50.565 #> phi[1]              -0.280   0.630  -1.522  -0.710  -0.271   0.157   0.887 #> phi[2]              -0.058   1.030  -2.026  -0.751  -0.111   0.669   1.987 #> phi[3]               0.135   0.936  -1.761  -0.494   0.159   0.767   1.922 #> phi[4]              -0.553   0.973  -2.319  -1.230  -0.636   0.089   1.541 #> phi[5]              -0.241   0.952  -2.059  -0.867  -0.244   0.352   1.715 #> phi[6]               0.761   0.839  -0.968   0.243   0.788   1.285   2.422 #> phi[7]              -0.425   0.723  -1.954  -0.857  -0.402   0.062   0.870 #> phi[8]              -0.260   0.916  -2.090  -0.841  -0.258   0.349   1.538 #> tau                  0.155   0.087   0.009   0.091   0.149   0.210   0.345 #> totresdev.o         53.325   8.870  36.378  47.090  52.915  59.327  71.119 #> deviance           581.267  13.570 556.351 571.668 581.133 589.794 609.213 #>                     Rhat n.eff #> EM[2,1]            1.048    58 #> EM[3,1]            1.155    18 #> EM[4,1]            1.213    15 #> EM[5,1]            1.047    47 #> EM[6,1]            1.513     7 #> EM[7,1]            1.165    19 #> EM[8,1]            1.210    14 #> EM[3,2]            1.018   210 #> EM[4,2]            1.041    62 #> EM[5,2]            1.042   270 #> EM[6,2]            1.027   110 #> EM[7,2]            1.018   300 #> EM[8,2]            1.027   310 #> EM[4,3]            1.038    68 #> EM[5,3]            1.038    64 #> EM[6,3]            1.004   720 #> EM[7,3]            1.070    35 #> EM[8,3]            1.051    46 #> EM[5,4]            1.075    67 #> EM[6,4]            1.083    31 #> EM[7,4]            1.137    20 #> EM[8,4]            1.114    33 #> EM[6,5]            1.078    31 #> EM[7,5]            1.017   140 #> EM[8,5]            1.002  1100 #> EM[7,6]            1.223    14 #> EM[8,6]            1.199    15 #> EM[8,7]            1.032    82 #> EM.pred[2,1]       1.046    63 #> EM.pred[3,1]       1.125    21 #> EM.pred[4,1]       1.158    18 #> EM.pred[5,1]       1.036    59 #> EM.pred[6,1]       1.314    10 #> EM.pred[7,1]       1.062    49 #> EM.pred[8,1]       1.086    30 #> EM.pred[3,2]       1.020   220 #> EM.pred[4,2]       1.043    57 #> EM.pred[5,2]       1.037   250 #> EM.pred[6,2]       1.026   120 #> EM.pred[7,2]       1.015   320 #> EM.pred[8,2]       1.024   300 #> EM.pred[4,3]       1.031    79 #> EM.pred[5,3]       1.031    77 #> EM.pred[6,3]       1.004   770 #> EM.pred[7,3]       1.058    42 #> EM.pred[8,3]       1.043    53 #> EM.pred[5,4]       1.063    75 #> EM.pred[6,4]       1.074    33 #> EM.pred[7,4]       1.098    26 #> EM.pred[8,4]       1.070    49 #> EM.pred[6,5]       1.052    44 #> EM.pred[7,5]       1.011   190 #> EM.pred[8,5]       1.001  2500 #> EM.pred[7,6]       1.145    20 #> EM.pred[8,6]       1.136    20 #> EM.pred[8,7]       1.013   270 #> SUCRA[1]           1.282    11 #> SUCRA[2]           1.050    80 #> SUCRA[3]           1.038    66 #> SUCRA[4]           1.028    86 #> SUCRA[5]           1.020   220 #> SUCRA[6]           1.195    15 #> SUCRA[7]           1.051    87 #> SUCRA[8]           1.036    95 #> abs_risk[1]        1.000     1 #> abs_risk[2]        1.056    52 #> abs_risk[3]        1.164    18 #> abs_risk[4]        1.188    16 #> abs_risk[5]        1.048    46 #> abs_risk[6]        1.523     7 #> abs_risk[7]        1.172    19 #> abs_risk[8]        1.213    14 #> beta[1]            1.000     1 #> beta[2]            1.033   210 #> beta[3]            1.053  2700 #> beta[4]            1.014   260 #> beta[5]            1.003  1100 #> beta[6]            1.023   140 #> beta[7]            1.012   220 #> beta[8]            1.003  1400 #> beta.all[2,1]      1.033   210 #> beta.all[3,1]      1.053  2700 #> beta.all[4,1]      1.014   260 #> beta.all[5,1]      1.003  1100 #> beta.all[6,1]      1.023   140 #> beta.all[7,1]      1.012   220 #> beta.all[8,1]      1.003  1400 #> beta.all[3,2]      1.062   330 #> beta.all[4,2]      1.039   270 #> beta.all[5,2]      1.016   190 #> beta.all[6,2]      1.050    94 #> beta.all[7,2]      1.026   380 #> beta.all[8,2]      1.024   230 #> beta.all[4,3]      1.046   550 #> beta.all[5,3]      1.028  3000 #> beta.all[6,3]      1.036  1100 #> beta.all[7,3]      1.044   910 #> beta.all[8,3]      1.058  1500 #> beta.all[5,4]      1.009   310 #> beta.all[6,4]      1.036    63 #> beta.all[7,4]      1.005   640 #> beta.all[8,4]      1.006   770 #> beta.all[6,5]      1.012   690 #> beta.all[7,5]      1.007   340 #> beta.all[8,5]      1.007   510 #> beta.all[7,6]      1.034    81 #> beta.all[8,6]      1.024   140 #> beta.all[8,7]      1.003   680 #> delta[1,1]         1.000     1 #> delta[2,1]         1.000     1 #> delta[3,1]         1.000     1 #> delta[4,1]         1.000     1 #> delta[5,1]         1.000     1 #> delta[6,1]         1.000     1 #> delta[7,1]         1.000     1 #> delta[8,1]         1.000     1 #> delta[9,1]         1.000     1 #> delta[10,1]        1.000     1 #> delta[11,1]        1.000     1 #> delta[12,1]        1.000     1 #> delta[13,1]        1.000     1 #> delta[14,1]        1.000     1 #> delta[15,1]        1.000     1 #> delta[16,1]        1.000     1 #> delta[17,1]        1.000     1 #> delta[18,1]        1.000     1 #> delta[19,1]        1.000     1 #> delta[20,1]        1.000     1 #> delta[21,1]        1.000     1 #> delta[1,2]         1.189    16 #> delta[2,2]         1.174    18 #> delta[3,2]         1.168    17 #> delta[4,2]         1.102    24 #> delta[5,2]         1.091    38 #> delta[6,2]         1.065    41 #> delta[7,2]         1.165    17 #> delta[8,2]         1.100    27 #> delta[9,2]         1.159    19 #> delta[10,2]        1.177    17 #> delta[11,2]        1.443     8 #> delta[12,2]        1.229    14 #> delta[13,2]        1.068    38 #> delta[14,2]        1.040    65 #> delta[15,2]        1.455     8 #> delta[16,2]        1.051    55 #> delta[17,2]        1.126    22 #> delta[18,2]        1.048    47 #> delta[19,2]        1.051    44 #> delta[20,2]        1.044    54 #> delta[21,2]        1.156    18 #> delta[9,3]         1.203    14 #> delta[10,3]        1.051    44 #> delta[12,3]        1.024    89 #> delta[13,3]        1.203    15 #> delta[19,3]        1.071    36 #> delta[10,4]        1.111    26 #> delta[12,4]        1.061    62 #> delta[13,4]        1.497     8 #> dev.o[1,1]         1.004  3000 #> dev.o[2,1]         1.004  1300 #> dev.o[3,1]         1.001  3000 #> dev.o[4,1]         1.005   430 #> dev.o[5,1]         1.001  3000 #> dev.o[6,1]         1.002  2200 #> dev.o[7,1]         1.003   910 #> dev.o[8,1]         1.002  1700 #> dev.o[9,1]         1.001  3000 #> dev.o[10,1]        1.003  1000 #> dev.o[11,1]        1.002  1600 #> dev.o[12,1]        1.002  1700 #> dev.o[13,1]        1.008   370 #> dev.o[14,1]        1.003   860 #> dev.o[15,1]        1.008   320 #> dev.o[16,1]        1.002  1200 #> dev.o[17,1]        1.007   320 #> dev.o[18,1]        1.003  1300 #> dev.o[19,1]        1.004   980 #> dev.o[20,1]        1.001  3000 #> dev.o[21,1]        1.004   590 #> dev.o[1,2]         1.007   400 #> dev.o[2,2]         1.010   410 #> dev.o[3,2]         1.004   540 #> dev.o[4,2]         1.001  3000 #> dev.o[5,2]         1.001  3000 #> dev.o[6,2]         1.002  1900 #> dev.o[7,2]         1.001  3000 #> dev.o[8,2]         1.003  2700 #> dev.o[9,2]         1.001  3000 #> dev.o[10,2]        1.007   350 #> dev.o[11,2]        1.001  3000 #> dev.o[12,2]        1.016   140 #> dev.o[13,2]        1.003   850 #> dev.o[14,2]        1.001  3000 #> dev.o[15,2]        1.017   120 #> dev.o[16,2]        1.001  3000 #> dev.o[17,2]        1.009   370 #> dev.o[18,2]        1.004   670 #> dev.o[19,2]        1.002  1700 #> dev.o[20,2]        1.004  2000 #> dev.o[21,2]        1.016   200 #> dev.o[9,3]         1.003  2800 #> dev.o[10,3]        1.001  2300 #> dev.o[12,3]        1.007   330 #> dev.o[13,3]        1.001  3000 #> dev.o[19,3]        1.011   470 #> dev.o[10,4]        1.004   710 #> dev.o[12,4]        1.002  1200 #> dev.o[13,4]        1.002  1800 #> effectiveness[1,1] 1.000     1 #> effectiveness[2,1] 1.023   100 #> effectiveness[3,1] 1.024   120 #> effectiveness[4,1] 1.074  1400 #> effectiveness[5,1] 1.178    96 #> effectiveness[6,1] 1.132  1300 #> effectiveness[7,1] 1.044   410 #> effectiveness[8,1] 1.025   570 #> effectiveness[1,2] 1.000     1 #> effectiveness[2,2] 1.029   150 #> effectiveness[3,2] 1.005   470 #> effectiveness[4,2] 1.005  3000 #> effectiveness[5,2] 1.060    64 #> effectiveness[6,2] 1.164   100 #> effectiveness[7,2] 1.014   320 #> effectiveness[8,2] 1.032   100 #> effectiveness[1,3] 1.291  1500 #> effectiveness[2,3] 1.006  2000 #> effectiveness[3,3] 1.001  3000 #> effectiveness[4,3] 1.024   540 #> effectiveness[5,3] 1.009   510 #> effectiveness[6,3] 1.176    51 #> effectiveness[7,3] 1.004   580 #> effectiveness[8,3] 1.019   110 #> effectiveness[1,4] 1.100   590 #> effectiveness[2,4] 1.008  1400 #> effectiveness[3,4] 1.010   480 #> effectiveness[4,4] 1.019   350 #> effectiveness[5,4] 1.013   340 #> effectiveness[6,4] 1.072    95 #> effectiveness[7,4] 1.002  1000 #> effectiveness[8,4] 1.001  2600 #> effectiveness[1,5] 1.082   120 #> effectiveness[2,5] 1.053   190 #> effectiveness[3,5] 1.061    97 #> effectiveness[4,5] 1.008   460 #> effectiveness[5,5] 1.011   300 #> effectiveness[6,5] 1.007   500 #> effectiveness[7,5] 1.004   690 #> effectiveness[8,5] 1.056    93 #> effectiveness[1,6] 1.203    17 #> effectiveness[2,6] 1.065   210 #> effectiveness[3,6] 1.013   770 #> effectiveness[4,6] 1.034   120 #> effectiveness[5,6] 1.013   250 #> effectiveness[6,6] 1.011   230 #> effectiveness[7,6] 1.094    74 #> effectiveness[8,6] 1.101   180 #> effectiveness[1,7] 1.016   140 #> effectiveness[2,7] 1.053   560 #> effectiveness[3,7] 1.035   450 #> effectiveness[4,7] 1.079    43 #> effectiveness[5,7] 1.007   570 #> effectiveness[6,7] 1.053    54 #> effectiveness[7,7] 1.155   130 #> effectiveness[8,7] 1.294   500 #> effectiveness[1,8] 1.248    13 #> effectiveness[2,8] 1.104   540 #> effectiveness[3,8] 1.075   340 #> effectiveness[4,8] 1.048    49 #> effectiveness[5,8] 1.071    95 #> effectiveness[6,8] 1.096    37 #> effectiveness[7,8] 1.000     1 #> effectiveness[8,8] 1.291  3000 #> hat.par[1,1]       1.001  3000 #> hat.par[2,1]       1.015   160 #> hat.par[3,1]       1.009   240 #> hat.par[4,1]       1.017   150 #> hat.par[5,1]       1.002  1900 #> hat.par[6,1]       1.002  1900 #> hat.par[7,1]       1.002  1100 #> hat.par[8,1]       1.004   550 #> hat.par[9,1]       1.016   140 #> hat.par[10,1]      1.008   430 #> hat.par[11,1]      1.025    87 #> hat.par[12,1]      1.002  1100 #> hat.par[13,1]      1.008   540 #> hat.par[14,1]      1.008   310 #> hat.par[15,1]      1.024   120 #> hat.par[16,1]      1.005   450 #> hat.par[17,1]      1.021   130 #> hat.par[18,1]      1.009   240 #> hat.par[19,1]      1.003   800 #> hat.par[20,1]      1.001  3000 #> hat.par[21,1]      1.012   180 #> hat.par[1,2]       1.007   380 #> hat.par[2,2]       1.009   230 #> hat.par[3,2]       1.001  3000 #> hat.par[4,2]       1.002  1400 #> hat.par[5,2]       1.002  1100 #> hat.par[6,2]       1.002  1200 #> hat.par[7,2]       1.002  1500 #> hat.par[8,2]       1.004   520 #> hat.par[9,2]       1.002  1600 #> hat.par[10,2]      1.008   250 #> hat.par[11,2]      1.014   150 #> hat.par[12,2]      1.026   100 #> hat.par[13,2]      1.002  3000 #> hat.par[14,2]      1.002  1600 #> hat.par[15,2]      1.036    78 #> hat.par[16,2]      1.002  3000 #> hat.par[17,2]      1.010   340 #> hat.par[18,2]      1.014   150 #> hat.par[19,2]      1.003   730 #> hat.par[20,2]      1.004   660 #> hat.par[21,2]      1.010   210 #> hat.par[9,3]       1.002  1300 #> hat.par[10,3]      1.002  1200 #> hat.par[12,3]      1.011   220 #> hat.par[13,3]      1.002  1700 #> hat.par[19,3]      1.006   350 #> hat.par[10,4]      1.005   440 #> hat.par[12,4]      1.006   380 #> hat.par[13,4]      1.005   410 #> phi[1]             1.426     8 #> phi[2]             1.009   510 #> phi[3]             1.006   380 #> phi[4]             1.089    44 #> phi[5]             1.024   110 #> phi[6]             1.064    37 #> phi[7]             1.095    26 #> phi[8]             1.002  1300 #> tau                1.265    18 #> totresdev.o        1.016   140 #> deviance           1.010   210 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 91.3 and DIC = 672.5 #> DIC is an estimate of expected predictive error (lower deviance is better). #>  #> $data #>                    study t1 t2 t3 t4  r1  r2 r3 r4  m1 m2 m3 m4  n1  n2  n3  n4 #> 1  Llewellyn-Jones, 1996  1  4 NA NA   3   0 NA NA   1  0 NA NA   8   8  NA  NA #> 2         Paggiaro, 1998  1  4 NA NA  51  45 NA NA  27 19 NA NA 139 142  NA  NA #> 3           Mahler, 1999  1  7 NA NA  47  28 NA NA  23  9 NA NA 143 135  NA  NA #> 4         Casaburi, 2000  1  8 NA NA  41  45 NA NA  18 12 NA NA 191 279  NA  NA #> 5        van Noord, 2000  1  7 NA NA  18  11 NA NA   8  7 NA NA  50  47  NA  NA #> 6          Rennard, 2001  1  7 NA NA  41  38 NA NA  29 22 NA NA 135 132  NA  NA #> 7         Casaburi, 2002  1  8 NA NA 156 198 NA NA  77 66 NA NA 371 550  NA  NA #> 8          Chapman, 2002  1  7 NA NA  68  52 NA NA  28 20 NA NA 207 201  NA  NA #> 9          Donohue, 2002  1  7  8 NA  92  82 77 NA  37 20 10 NA 201 213 209  NA #> 10          Mahler, 2002  1  4  7  5  79  77 63 68  69 68 45 52 181 168 160 165 #> 11           Rossi, 2002  1  6 NA NA  75 117 NA NA  59 92 NA NA 220 425  NA  NA #> 12         Hanania, 2003  1  4  7  5  73  79 65 71  59 49 57 53 185 183 177 178 #> 13      Szafranski, 2003  1  2  6  3  53  26 38 35  90 62 64 59 205 198 201 208 #> 14          Briggs, 2005  8  7 NA NA  30  36 NA NA  29 41 NA NA 328 325  NA  NA #> 15        Campbell, 2005  1  6 NA NA  34  35 NA NA  39 30 NA NA 217 215  NA  NA #> 16      Niewoehner, 2005  1  8 NA NA 296 255 NA NA 111 75 NA NA 915 914  NA  NA #> 17       van Noord, 2005  8  6 NA NA   4  14 NA NA   1  1 NA NA  70  69  NA  NA #> 18          Barnes, 2006  1  5 NA NA  24  11 NA NA   4  8 NA NA  73  67  NA  NA #> 19       O Donnell, 2006  1  7  5 NA   6   1  2 NA   5  1  3 NA  64  59  62  NA #> 20     Baumgartner, 2007  1  7 NA NA  24  20 NA NA  32 26 NA NA 143 144  NA  NA #> 21         Freeman, 2007  1  8 NA NA  35  19 NA NA  33 18 NA NA 195 200  NA  NA #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $abs_risk #>                  mean         sd       2.5%       25%       50%       75% #> abs_risk[1] 0.3900000 0.00000000 0.39000000 0.3900000 0.3900000 0.3900000 #> abs_risk[2] 0.2002227 0.07824827 0.09154488 0.1448607 0.1811896 0.2492947 #> abs_risk[3] 0.2517886 0.07631098 0.12152368 0.1957240 0.2475545 0.3025105 #> abs_risk[4] 0.3886267 0.09011939 0.24295242 0.3214866 0.3778134 0.4464772 #> abs_risk[5] 0.3177322 0.07233379 0.20473850 0.2635033 0.3090790 0.3658668 #> abs_risk[6] 0.3585614 0.06386365 0.23786749 0.3132514 0.3586321 0.4102162 #> abs_risk[7] 0.2874711 0.02951573 0.22811668 0.2672437 0.2915769 0.3075165 #> abs_risk[8] 0.2767076 0.03124148 0.21581964 0.2562640 0.2757750 0.2963887 #>                 97.5%     Rhat n.eff #> abs_risk[1] 0.3900000 1.000000     1 #> abs_risk[2] 0.3788056 1.055774    52 #> abs_risk[3] 0.4162636 1.163529    18 #> abs_risk[4] 0.5977260 1.188340    16 #> abs_risk[5] 0.4813570 1.048371    46 #> abs_risk[6] 0.4679028 1.523218     7 #> abs_risk[7] 0.3410057 1.171978    19 #> abs_risk[8] 0.3395108 1.213264    14 #>  #> $SUCRA #>               mean        sd      2.5%       25%       50%       75%     97.5% #> SUCRA[1] 0.1460000 0.1332334 0.0000000 0.0000000 0.1428571 0.2857143 0.4285714 #> SUCRA[2] 0.8782857 0.2273602 0.2857143 0.8571429 1.0000000 1.0000000 1.0000000 #> SUCRA[3] 0.7369524 0.2513307 0.1428571 0.5714286 0.8571429 0.8571429 1.0000000 #> SUCRA[4] 0.2204286 0.2301589 0.0000000 0.0000000 0.1428571 0.4285714 0.7142857 #> SUCRA[5] 0.4623810 0.2758746 0.0000000 0.2857143 0.4285714 0.7142857 0.8571429 #> SUCRA[6] 0.2839524 0.2183874 0.0000000 0.1428571 0.2857143 0.4285714 0.8571429 #> SUCRA[7] 0.6007143 0.1825100 0.2857143 0.4285714 0.5714286 0.7142857 1.0000000 #> SUCRA[8] 0.6712857 0.1558035 0.2857143 0.5714286 0.7142857 0.7142857 1.0000000 #>              Rhat n.eff #> SUCRA[1] 1.282461    11 #> SUCRA[2] 1.049588    80 #> SUCRA[3] 1.037551    66 #> SUCRA[4] 1.028409    86 #> SUCRA[5] 1.019636   220 #> SUCRA[6] 1.194886    15 #> SUCRA[7] 1.051100    87 #> SUCRA[8] 1.036301    95 #>  #> $effectiveness #>                            mean         sd 2.5% 25% 50% 75% 97.5%     Rhat #> effectiveness[1,1] 0.0000000000 0.00000000    0   0   0   0 0.000 1.000000 #> effectiveness[2,1] 0.6823333333 0.46564668    0   0   1   1 1.000 1.022811 #> effectiveness[3,1] 0.2260000000 0.41830889    0   0   0   0 1.000 1.024471 #> effectiveness[4,1] 0.0043333333 0.06569623    0   0   0   0 0.000 1.073993 #> effectiveness[5,1] 0.0240000000 0.15307453    0   0   0   0 0.000 1.177686 #> effectiveness[6,1] 0.0023333333 0.04825624    0   0   0   0 0.000 1.132118 #> effectiveness[7,1] 0.0266666667 0.16113414    0   0   0   0 1.000 1.043769 #> effectiveness[8,1] 0.0343333333 0.18211428    0   0   0   0 1.000 1.025056 #> effectiveness[1,2] 0.0000000000 0.00000000    0   0   0   0 0.000 1.000000 #> effectiveness[2,2] 0.1290000000 0.33525582    0   0   0   0 1.000 1.028850 #> effectiveness[3,2] 0.3573333333 0.47929406    0   0   0   1 1.000 1.004783 #> effectiveness[4,2] 0.0113333333 0.10587079    0   0   0   0 0.000 1.005200 #> effectiveness[5,2] 0.1576666667 0.36448892    0   0   0   0 1.000 1.059894 #> effectiveness[6,2] 0.0250000000 0.15615098    0   0   0   0 0.025 1.164436 #> effectiveness[7,2] 0.1280000000 0.33414550    0   0   0   0 1.000 1.013696 #> effectiveness[8,2] 0.1916666667 0.39367781    0   0   0   0 1.000 1.031501 #> effectiveness[1,3] 0.0006666667 0.02581558    0   0   0   0 0.000 1.291460 #> effectiveness[2,3] 0.0386666667 0.19283140    0   0   0   0 1.000 1.006236 #> effectiveness[3,3] 0.1196666667 0.32462545    0   0   0   0 1.000 1.001159 #> effectiveness[4,3] 0.0376666667 0.19042052    0   0   0   0 1.000 1.024350 #> effectiveness[5,3] 0.1140000000 0.31786425    0   0   0   0 1.000 1.009146 #> effectiveness[6,3] 0.0503333333 0.21866830    0   0   0   0 1.000 1.176068 #> effectiveness[7,3] 0.2640000000 0.44087276    0   0   0   1 1.000 1.003991 #> effectiveness[8,3] 0.3750000000 0.48420363    0   0   0   1 1.000 1.019158 #> effectiveness[1,4] 0.0073333333 0.08533454    0   0   0   0 0.000 1.100333 #> effectiveness[2,4] 0.0430000000 0.20289091    0   0   0   0 1.000 1.008334 #> effectiveness[3,4] 0.1083333333 0.31085275    0   0   0   0 1.000 1.010297 #> effectiveness[4,4] 0.0786666667 0.26926268    0   0   0   0 1.000 1.019075 #> effectiveness[5,4] 0.1223333333 0.32772502    0   0   0   0 1.000 1.012990 #> effectiveness[6,4] 0.0766666667 0.26610617    0   0   0   0 1.000 1.071856 #> effectiveness[7,4] 0.2976666667 0.45730836    0   0   0   1 1.000 1.002428 #> effectiveness[8,4] 0.2660000000 0.44193789    0   0   0   1 1.000 1.001260 #> effectiveness[1,5] 0.0516666667 0.22139006    0   0   0   0 1.000 1.082366 #> effectiveness[2,5] 0.0493333333 0.21659916    0   0   0   0 1.000 1.053421 #> effectiveness[3,5] 0.0906666667 0.28718237    0   0   0   0 1.000 1.061067 #> effectiveness[4,5] 0.1550000000 0.36196502    0   0   0   0 1.000 1.007675 #> effectiveness[5,5] 0.1833333333 0.38700406    0   0   0   0 1.000 1.010677 #> effectiveness[6,5] 0.1713333333 0.37686279    0   0   0   0 1.000 1.006559 #> effectiveness[7,5] 0.1923333333 0.39419921    0   0   0   0 1.000 1.004223 #> effectiveness[8,5] 0.1063333333 0.30831517    0   0   0   0 1.000 1.055743 #> effectiveness[1,6] 0.2403333333 0.42735711    0   0   0   0 1.000 1.203416 #> effectiveness[2,6] 0.0343333333 0.18211428    0   0   0   0 1.000 1.064919 #> effectiveness[3,6] 0.0490000000 0.21590400    0   0   0   0 1.000 1.013229 #> effectiveness[4,6] 0.1416666667 0.34876607    0   0   0   0 1.000 1.034289 #> effectiveness[5,6] 0.1906666667 0.39289228    0   0   0   0 1.000 1.012695 #> effectiveness[6,6] 0.2483333333 0.43211819    0   0   0   0 1.000 1.011166 #> effectiveness[7,6] 0.0713333333 0.25742373    0   0   0   0 1.000 1.094204 #> effectiveness[8,6] 0.0243333333 0.15410756    0   0   0   0 0.000 1.100762 #> effectiveness[1,7] 0.3536666667 0.47818697    0   0   0   1 1.000 1.015791 #> effectiveness[2,7] 0.0156666667 0.12420292    0   0   0   0 0.000 1.052951 #> effectiveness[3,7] 0.0310000000 0.17334652    0   0   0   0 1.000 1.034607 #> effectiveness[4,7] 0.1933333333 0.39497792    0   0   0   0 1.000 1.079016 #> effectiveness[5,7] 0.1320000000 0.33854720    0   0   0   0 1.000 1.007207 #> effectiveness[6,7] 0.2523333333 0.43442391    0   0   0   1 1.000 1.052582 #> effectiveness[7,7] 0.0200000000 0.14002334    0   0   0   0 0.000 1.154730 #> effectiveness[8,7] 0.0020000000 0.04468406    0   0   0   0 0.000 1.293699 #> effectiveness[1,8] 0.3463333333 0.47588028    0   0   0   1 1.000 1.248323 #> effectiveness[2,8] 0.0076666667 0.08723775    0   0   0   0 0.000 1.103525 #> effectiveness[3,8] 0.0180000000 0.13297328    0   0   0   0 0.000 1.074696 #> effectiveness[4,8] 0.3780000000 0.48496845    0   0   0   1 1.000 1.047900 #> effectiveness[5,8] 0.0760000000 0.26504229    0   0   0   0 1.000 1.071315 #> effectiveness[6,8] 0.1736666667 0.37888574    0   0   0   0 1.000 1.096206 #> effectiveness[7,8] 0.0000000000 0.00000000    0   0   0   0 0.000 1.000000 #> effectiveness[8,8] 0.0003333333 0.01825742    0   0   0   0 0.000 1.290904 #>                    n.eff #> effectiveness[1,1]     1 #> effectiveness[2,1]   100 #> effectiveness[3,1]   120 #> effectiveness[4,1]  1400 #> effectiveness[5,1]    96 #> effectiveness[6,1]  1300 #> effectiveness[7,1]   410 #> effectiveness[8,1]   570 #> effectiveness[1,2]     1 #> effectiveness[2,2]   150 #> effectiveness[3,2]   470 #> effectiveness[4,2]  3000 #> effectiveness[5,2]    64 #> effectiveness[6,2]   100 #> effectiveness[7,2]   320 #> effectiveness[8,2]   100 #> effectiveness[1,3]  1500 #> effectiveness[2,3]  2000 #> effectiveness[3,3]  3000 #> effectiveness[4,3]   540 #> effectiveness[5,3]   510 #> effectiveness[6,3]    51 #> effectiveness[7,3]   580 #> effectiveness[8,3]   110 #> effectiveness[1,4]   590 #> effectiveness[2,4]  1400 #> effectiveness[3,4]   480 #> effectiveness[4,4]   350 #> effectiveness[5,4]   340 #> effectiveness[6,4]    95 #> effectiveness[7,4]  1000 #> effectiveness[8,4]  2600 #> effectiveness[1,5]   120 #> effectiveness[2,5]   190 #> effectiveness[3,5]    97 #> effectiveness[4,5]   460 #> effectiveness[5,5]   300 #> effectiveness[6,5]   500 #> effectiveness[7,5]   690 #> effectiveness[8,5]    93 #> effectiveness[1,6]    17 #> effectiveness[2,6]   210 #> effectiveness[3,6]   770 #> effectiveness[4,6]   120 #> effectiveness[5,6]   250 #> effectiveness[6,6]   230 #> effectiveness[7,6]    74 #> effectiveness[8,6]   180 #> effectiveness[1,7]   140 #> effectiveness[2,7]   560 #> effectiveness[3,7]   450 #> effectiveness[4,7]    43 #> effectiveness[5,7]   570 #> effectiveness[6,7]    54 #> effectiveness[7,7]   130 #> effectiveness[8,7]   500 #> effectiveness[1,8]    13 #> effectiveness[2,8]   540 #> effectiveness[3,8]   340 #> effectiveness[4,8]    49 #> effectiveness[5,8]    95 #> effectiveness[6,8]    37 #> effectiveness[7,8]     1 #> effectiveness[8,8]  3000 #>  #> $D #> [1] 0 #>  #> attr(,\"class\") #> [1] \"run_metareg\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian pairwise or network meta-analysis — run_model","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Performs one-stage pairwise network meta-analysis addressing   aggregate binary continuous missing participant outcome data via   pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"","code":"run_model(   data,   measure,   model,   assumption,   heter_prior,   mean_misspar,   var_misspar,   D,   ref,   base_risk,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"columns data-frame argument data refer   following elements continuous outcome: binary outcome, columns data-frame argument   data refer following elements: number rows data equals number collected trials.   element appears data many times maximum number   interventions compared trial dataset.   pairwise meta-analysis, maximum number arms inherently two.   holds network meta-analysis without multi-arm trials.   case network meta-analysis multi-arm trials, maximum   number arms exceeds two. See 'Examples' illustrates structure   data network maximum number four arms.   prerequisite run_model multi-arm trials   appear bottom dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"data data-frame one-trial-per-row format arm-level data. See 'Format' specification columns. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. heter_prior list three elements following order: 1) character string indicating distribution (currently available) values \"halfnormal\", \"uniform\", \"lognormal\", \"logt\"; 2) two numeric values refer parameters selected distribution. \"lognormal\", \"logt\" numbers refer mean precision, respectively. \"halfnormal\", numbers refer zero scale parameter (equal 4 1 corresponding precision scale parameter 0.5 1). \"uniform\", numbers refer minimum maximum value distribution. See 'Details' heterogeneity_param_prior. mean_misspar scalar numeric vector two numeric values mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption. See also 'Details' missingness_param_prior. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\" default argument 0.04. D binary number direction outcome. Set D = 1 beneficial outcome D = 0 harmful outcome. ref integer specifying reference intervention. number match intervention identifier element t data (See 'Format'). base_risk scalar, vector length three elements sorted ascending order, matrix two columns number rows equal number relevant trials. case scalar vector, elements interval (0, 1) (see 'Details'). base_risk defined, function uses median event risk reference intervention corresponding trials data. argument relevant binary outcome. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"list R2jags output summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   fixed-effect pairwise meta-analysis: EM estimated summary effect measure (according argument   measure). EM_LOR estimated summary odd ratio logarithmic scale   measure = \"RR\" measure = \"RD\". dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. phi informative missingness parameter. fixed-effect network meta-analysis, output additionally includes: SUCRA surface cumulative ranking curve   intervention. SUCRA_LOR surface cumulative ranking curve   intervention odds ratio effect measure measure = \"RR\"   measure = \"RD\". effectiveneness ranking probability intervention   every rank. random-effects pairwise meta-analysis, output additionally   includes following elements: EM_pred predicted summary effect measure (according   argument measure). EM_pred_LOR predicted summary odds ratio logarithmic   scale measure = \"RR\" measure = \"RD\". delta estimated trial-specific effect measure (according   argument measure). tau -trial standard deviation. network meta-analysis, EM EM_pred refer   possible pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network. multi-arm trial, estimate total T-1  delta comparisons baseline intervention trial   (found first column element t), T   number interventions trial. Furthermore, output includes following elements: leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. indic sign basic parameters relation reference   intervention specified argument reg jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. run_model function also returns arguments data,  measure, model, assumption, heter_prior,  mean_misspar, var_misspar, D, ref,  base_risk, n_chains, n_iter, n_burnin,   n_thin specified user inherited   functions package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"model runs JAGS progress simulation   appears R console. output run_model used S3   object functions package processed   provide end-user-ready output. data_preparation function called prepare data   Bayesian analysis. data_preparation creates   pseudo-data-frames m_new, ,   dimensions element N. m_new takes zero   value observed trial-arms unreported missing participant   outcome data (.e., m equals NA corresponding   trial-arms), value m observed trial-arms   reported missing participant outcome data, NA unobserved   trial-arms. dummy pseudo-data-frame takes value one   observed trial-arms reported missing participant outcome data,   zero value observed trial-arms unreported missing   participant outcome data (.e., m_new equals zero   corresponding trial-arms), NA unobserved trial-arms.   Thus, indicates whether missing participant outcome data   collected observed trial-arms. user defined   element m data, m_new take zero   value observed trial-arms indicate missing participant   outcome data collected analysed outcome. See 'Details'   data_preparation. Furthermore, data_preparation sorts interventions across   arms trial ascending order correspondingly   remaining elements data (see 'Format').   data_preparation considers first column t   control arm every trial. Thus, sorting ensures   interventions lower identifier consistently treated   control arm trial. case relevant non-star-shaped   networks. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. perform Bayesian pairwise network meta-analysis,   prepare_model function called contains WinBUGS   code written Dias et al. (2013a) binomial normal likelihood   analyse aggregate binary continuous outcome data, respectively.   prepare_model uses consistency model (described   Lu Ades (2006)) estimate possible comparisons network.   also accounts multi-arm trials assigning conditional   univariate normal distributions underlying trial-specific effect   size comparisons baseline arm multi-arm trial   (Dias et al., 2013a). code Dias et al. (2013a) extended incorporate   pattern-mixture model adjust underlying outcome arm   every trial missing participant outcome data (Spineli et al., 2021;   Spineli, 2019a; Turner et al., 2015). assumptions   missingness parameter specified using arguments mean_misspar   var_misspar. Specifically, run_model considers   informative missingness odds ratio logarithmic scale binary   outcome data (Spineli, 2019a; Turner et al., 2015; White et al., 2008),   informative missingness difference means measure   \"MD\" \"SMD\", informative missingness ratio means   logarithmic scale measure \"ROM\"   (Spineli et al., 2021; Mavridis et al., 2015). assumption trial-specific (.e., \"IDE-TRIAL\"   \"HIE-TRIAL\"), independent (.e., \"IND-CORR\"   \"IND-UNCORR\"), one numeric value can assigned   mean_misspar missingness scenario applied   trials trial-arms dataset, respectively. assumption   \"IDE-ARM\" \"HIE-ARM\", maximum two   different identical numeric values can assigned   vector mean_misspars: first value refers experimental   arm, second value refers control arm trial.   case network, first value considered   non-reference interventions second value considered   reference intervention network (.e., intervention   identifier equal ref). necessary ensure transitivity   assumptions missingness parameter across network   (Spineli, 2019b). least one trial-arm unreported missing participant   outcome data (.e., m equals NA corresponding   trial-arms) missing participant outcome data   collected analysed outcome (.e., m missing   data), run_model assigns assumption \"IND-UNCORR\"   assumption. Currently, empirically-based prior distributions   informative missingness parameters. user may refer Spineli (2019),   Turner et al. (2015), Mavridis et al. (2015), White et al. (2008)   determine mean_misspar select proper value   var_misspar. scalar base_risk refers fixed baseline risk   selected reference intervention (specified ref).   base_risk three-element vector, refers random   baseline risk elements sorted ascending order   refer lower bound, mean value, upper bound 95%   confidence interval baseline risk selected reference   intervention. baseline_model function called   calculate mean variance approximately normal distribution   logit event ref using three elements   (Dias et al., 2018). base_risk matrix, refers   predicted baseline risk first column number events,   second column sample size corresponding trials   selected reference intervention. baseline_model   function called contains WinBUGS code written Dias et al.   (2013b) hierarchical baseline model. posterior mean   precision predictive distribution logit event   selected reference intervention plugged WinBUGS code   relative effects model (via prepare_model function).   matrix base_risk comprise trials data   include ref, unless justified (Dias et al., 2018). obtain unique absolute risks intervention, network   meta-analysis model extended incorporate transitive risks   framework, namely, intervention absolute risk regardless   comparator intervention(s) trial (Spineli et al., 2017).   absolute risks function odds ratio (base-case   effect measure binary outcome) selected baseline risk   reference intervention (ref) (Appendix Dias et al., 2013a).   advocate using odds ratio effect measure desired   mathematical properties. , relative risk risk difference can   obtained function absolute risks corresponding   interventions comparison interest. Hence, regardless   selected measure binary outcome, run_model performs   pairwise network meta-analysis based odds ratio.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Ades AE, Welton NJ, Jansen JP, Sutton AJ. Network Meta-Analysis Decision Making. Chichester (UK): Wiley; 2018. Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013a;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013b;33(5):657--70. doi: 10.1177/0272989X13485155 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Lu G, Ades AE. Assessing evidence inconsistency mixed treatment comparisons. J Stat Assoc 2006;101:447--59. doi: 10.1198/016214505000001302 Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019a;19(1):86. doi: 10.1186/s12874-019-0731-y Spineli LM. Modeling missing binary outcome data preserving transitivity assumption yielded credible network meta-analysis results. J Clin Epidemiol 2019b;105:19--26. doi: 10.1016/j.jclinepi.2018.09.002 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):18911. Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"","code":"data(\"nma.baker2009\")  # Show the first six trials of the dataset head(nma.baker2009) #>                   study t1 t2 t3 t4 r1 r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> 1 Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA  1  0 NA NA   8   8 NA NA #> 2        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 27 19 NA NA 139 142 NA NA #> 3          Mahler, 1999  1  7 NA NA 47 28 NA NA 23  9 NA NA 143 135 NA NA #> 4        Casaburi, 2000  1  8 NA NA 41 45 NA NA 18 12 NA NA 191 279 NA NA #> 5       van Noord, 2000  1  7 NA NA 18 11 NA NA  8  7 NA NA  50  47 NA NA #> 6         Rennard, 2001  1  7 NA NA 41 38 NA NA 29 22 NA NA 135 132 NA NA  # \\donttest{ # Perform a random-effects network meta-analysis # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_model(data = nma.baker2009,           measure = \"OR\",           model = \"RE\",           assumption = \"IDE-ARM\",           heter_prior = list(\"halfnormal\", 0, 1),           mean_misspar = c(0, 0),           var_misspar = 1,           D = 0,           ref = 1,           n_chains = 3,           n_iter = 1000,           n_burnin = 100,           n_thin = 1) #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 100 #>    Unobserved stochastic nodes: 148 #>    Total graph size: 2578 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>                mean        sd       2.5%          25%         50%         75% #> EM[2,1] -0.95650159 0.4972589 -1.8231993 -1.291656613 -1.00560023 -0.63344093 #> EM[3,1] -0.69474502 0.4466482 -1.5365196 -1.013759312 -0.69941337 -0.38832075 #> EM[4,1] -0.29725483 0.3100592 -0.8301557 -0.522171155 -0.32990475 -0.10737776 #> EM[5,1] -0.37294142 0.2892509 -0.9061471 -0.574255527 -0.39325099 -0.16210649 #> EM[6,1] -0.08756515 0.2780330 -0.6245114 -0.278431428 -0.09639427  0.09284725 #> EM[7,1] -0.44911219 0.1775482 -0.7829138 -0.576783407 -0.45238153 -0.31866893 #> EM[8,1] -0.49558152 0.1620363 -0.8269129 -0.598555454 -0.48938953 -0.38421967 #> EM[3,2]  0.26175657 0.5225020 -0.7461831 -0.111214210  0.25597692  0.62950540 #> EM[4,2]  0.65924676 0.4795935 -0.3416182  0.380196064  0.67279967  0.96087280 #> EM[5,2]  0.58356017 0.5149498 -0.4479019  0.268970167  0.57928160  0.93133805 #> EM[6,2]  0.86893644 0.5019322 -0.1593315  0.545926755  0.89757152  1.21633670 #> EM[7,2]  0.50738940 0.4661507 -0.4441577  0.207575492  0.54414333  0.83104753 #> EM[8,2]  0.46092007 0.4637407 -0.4591635  0.144316061  0.49280501  0.79181407 #> EM[4,3]  0.39749019 0.4737937 -0.5436504  0.069221469  0.41777859  0.75123727 #> EM[5,3]  0.32180360 0.4768581 -0.6224294 -0.002674747  0.33513468  0.68695319 #> EM[6,3]  0.60717987 0.4138162 -0.1896050  0.304358212  0.60249965  0.90355158 #> EM[7,3]  0.24563283 0.4349316 -0.5963924 -0.059876689  0.24185805  0.56574437 #> EM[8,3]  0.19916350 0.4227505 -0.6152337 -0.088042539  0.21449581  0.49920201 #> EM[5,4] -0.07568659 0.3378556 -0.7214897 -0.299538141 -0.07872276  0.14012668 #> EM[6,4]  0.20968968 0.3673895 -0.5249426 -0.015497183  0.20129832  0.47296921 #> EM[7,4] -0.15185736 0.3140002 -0.8196680 -0.366540507 -0.14184749  0.06973136 #> EM[8,4] -0.19832669 0.3009780 -0.8253266 -0.388183795 -0.16907714  0.01745373 #> EM[6,5]  0.28537627 0.3610874 -0.4427576  0.049049668  0.28929732  0.52984535 #> EM[7,5] -0.07617077 0.3069283 -0.7070859 -0.286982364 -0.05515812  0.13424817 #> EM[8,5] -0.12264010 0.3025883 -0.7030168 -0.339364146 -0.11580068  0.09530935 #> EM[7,6] -0.36154704 0.2781234 -0.9322466 -0.550265635 -0.35746921 -0.17238627 #> EM[8,6] -0.40801637 0.2653921 -0.9592318 -0.580271515 -0.40332340 -0.23908089 #> EM[8,7] -0.04646933 0.1913015 -0.4323057 -0.173626609 -0.05140736  0.09327106 #>               97.5%     Rhat n.eff #> EM[2,1]  0.07139963 1.026582    91 #> EM[3,1]  0.15765985 1.020688   230 #> EM[4,1]  0.35037727 1.152734    19 #> EM[5,1]  0.18003991 1.119795    22 #> EM[6,1]  0.50494948 1.006556  1100 #> EM[7,1] -0.11313389 1.010933   220 #> EM[8,1] -0.20170932 1.020591   140 #> EM[3,2]  1.26346528 1.026522   100 #> EM[4,2]  1.65710338 1.021570   230 #> EM[5,2]  1.59426635 1.063883    42 #> EM[6,2]  1.80603348 1.031096    70 #> EM[7,2]  1.35492502 1.018354   120 #> EM[8,2]  1.24874764 1.016361   140 #> EM[4,3]  1.27435502 1.043157    63 #> EM[5,3]  1.15677122 1.015862   180 #> EM[6,3]  1.37696903 1.018320   150 #> EM[7,3]  1.07559103 1.006740   380 #> EM[8,3]  0.99036017 1.017733   310 #> EM[5,4]  0.60915524 1.124775    21 #> EM[6,4]  0.89023558 1.122449    21 #> EM[7,4]  0.43199612 1.094024    26 #> EM[8,4]  0.32000502 1.102019    26 #> EM[6,5]  0.97730275 1.078571    31 #> EM[7,5]  0.50459049 1.088041    29 #> EM[8,5]  0.42122575 1.089998    27 #> EM[7,6]  0.17197322 1.011701   200 #> EM[8,6]  0.09528798 1.020615   150 #> EM[8,7]  0.29967206 1.001027  3000 #>  #> $dev_o #>                  mean        sd         2.5%        25%       50%       75% #> dev.o[1,1]  2.2874589 2.2934871 0.0057413419 0.53518230 1.5997955 3.2735921 #> dev.o[2,1]  0.9799990 1.3567842 0.0009040793 0.08750351 0.4493182 1.3382242 #> dev.o[3,1]  1.0365991 1.3752512 0.0011921814 0.12054312 0.5172753 1.4001847 #> dev.o[4,1]  0.6582073 0.9202100 0.0007113504 0.06780759 0.3064604 0.8571310 #> dev.o[5,1]  0.7240993 1.0278337 0.0008399303 0.07381661 0.3240149 0.9836629 #> dev.o[6,1]  0.9665951 1.3015890 0.0009801569 0.10637580 0.4570215 1.3187683 #> dev.o[7,1]  0.8267832 1.1623429 0.0013470912 0.08033188 0.3678408 1.0535514 #> dev.o[8,1]  0.7663979 1.0269923 0.0015116082 0.08258928 0.3554470 1.0511285 #> dev.o[9,1]  0.7839683 1.0536511 0.0006917805 0.08625644 0.3842431 1.0486764 #> dev.o[10,1] 0.6181183 0.9316532 0.0006879272 0.06073135 0.2663004 0.8043602 #> dev.o[11,1] 0.9565316 1.3450533 0.0008041292 0.08503049 0.4325146 1.2369434 #> dev.o[12,1] 1.3687556 1.5806922 0.0024881676 0.20665244 0.8128884 1.9812592 #> dev.o[13,1] 1.4216848 1.8982626 0.0020377568 0.15837741 0.7194686 1.9701020 #> dev.o[14,1] 0.9403794 1.3224049 0.0011738343 0.10835526 0.4421340 1.2601274 #> dev.o[15,1] 1.0717224 1.4225022 0.0014229888 0.11609324 0.5347136 1.4250438 #> dev.o[16,1] 1.2792250 1.7211235 0.0013008865 0.14274447 0.6187286 1.7445348 #> dev.o[17,1] 1.9188428 2.1305934 0.0054921638 0.34778822 1.2157477 2.7831471 #> dev.o[18,1] 1.1589208 1.4565854 0.0011644544 0.13183930 0.5845272 1.6799174 #> dev.o[19,1] 1.7680765 1.7896576 0.0049964403 0.40779474 1.2201428 2.5794532 #> dev.o[20,1] 0.7388201 1.0777510 0.0008260636 0.07738417 0.3393072 0.9586155 #> dev.o[21,1] 1.1025666 1.4352846 0.0009188720 0.11970601 0.5518942 1.5139602 #> dev.o[1,2]  3.2427292 1.9770287 0.6432500413 1.82846115 2.8126060 4.2094720 #> dev.o[2,2]  0.9213117 1.3423476 0.0009314441 0.09147796 0.4069814 1.1581512 #> dev.o[3,2]  1.1788846 1.5623425 0.0012290427 0.13316515 0.5877145 1.5835409 #> dev.o[4,2]  0.7245284 0.9958672 0.0011290212 0.07986287 0.3491596 0.9630531 #> dev.o[5,2]  0.6114191 0.8649801 0.0008107598 0.05932203 0.2740910 0.7978367 #> dev.o[6,2]  1.0121497 1.3198457 0.0022999041 0.11947473 0.5296986 1.3890467 #> dev.o[7,2]  0.8848571 1.2809234 0.0009070261 0.09051529 0.3951012 1.1493847 #> dev.o[8,2]  0.7432662 1.0472708 0.0006943668 0.08123950 0.3414563 0.9767347 #> dev.o[9,2]  0.7311364 1.0457022 0.0008036770 0.07349737 0.3326820 0.9872938 #> dev.o[10,2] 1.6542742 1.9287014 0.0027547901 0.22952255 0.9510329 2.4119857 #> dev.o[11,2] 0.9651715 1.3583407 0.0011397597 0.09881662 0.4277460 1.2994474 #> dev.o[12,2] 0.7998703 1.1261678 0.0008153621 0.07797147 0.3545628 1.0473051 #> dev.o[13,2] 0.9874486 1.3921715 0.0010059064 0.09763028 0.4481431 1.3212219 #> dev.o[14,2] 0.8719975 1.2046945 0.0008325098 0.09329128 0.4027345 1.1873025 #> dev.o[15,2] 1.0557747 1.4577363 0.0013808519 0.11486558 0.5083545 1.4117190 #> dev.o[16,2] 1.3148090 1.7597855 0.0014394096 0.13204002 0.6193313 1.8428956 #> dev.o[17,2] 2.3400791 2.1187380 0.0146673939 0.72371262 1.7998480 3.3482889 #> dev.o[18,2] 1.1095931 1.3951210 0.0012090094 0.13152457 0.5973943 1.5321408 #> dev.o[19,2] 0.4924112 0.6956244 0.0005527638 0.05094987 0.2200323 0.6545855 #> dev.o[20,2] 0.7394247 0.9914906 0.0009014805 0.07746594 0.3461189 1.0257509 #> dev.o[21,2] 0.9671877 1.3282257 0.0013785376 0.10251446 0.4499364 1.3077769 #> dev.o[9,3]  0.9077716 1.2766232 0.0009535879 0.08952682 0.4314691 1.2290123 #> dev.o[10,3] 0.7405142 0.9703111 0.0009885797 0.08638920 0.3670129 0.9791190 #> dev.o[12,3] 1.0197928 1.3413697 0.0006834460 0.10839503 0.4972419 1.4302309 #> dev.o[13,3] 1.0186601 1.4447721 0.0008378414 0.08909895 0.4432669 1.3889059 #> dev.o[19,3] 1.2351883 1.1157817 0.0089250340 0.40591651 0.9327374 1.7865234 #> dev.o[10,4] 1.1351520 1.4386201 0.0011702902 0.13323798 0.5913466 1.6003023 #> dev.o[12,4] 0.8339684 1.1611079 0.0009362746 0.09242084 0.3940355 1.1292620 #> dev.o[13,4] 1.1627706 1.6274170 0.0016728141 0.12813861 0.5650485 1.5321293 #>                97.5%     Rhat n.eff #> dev.o[1,1]  8.289029 1.002137  1700 #> dev.o[2,1]  4.802549 1.008320   270 #> dev.o[3,1]  4.799457 1.000762  3000 #> dev.o[4,1]  3.254969 1.000685  3000 #> dev.o[5,1]  3.592264 1.001056  3000 #> dev.o[6,1]  4.670317 1.000563  3000 #> dev.o[7,1]  4.311105 1.001394  2200 #> dev.o[8,1]  3.649513 1.001528  1900 #> dev.o[9,1]  3.702591 1.001347  2400 #> dev.o[10,1] 3.170774 1.001972  1500 #> dev.o[11,1] 4.818664 1.004316   550 #> dev.o[12,1] 5.636068 1.008217   310 #> dev.o[13,1] 6.559125 1.002944  2900 #> dev.o[14,1] 4.400842 1.000664  3000 #> dev.o[15,1] 5.150535 1.002731   900 #> dev.o[16,1] 6.177463 1.001678  1700 #> dev.o[17,1] 7.852805 1.001413  3000 #> dev.o[18,1] 5.180710 1.002984   940 #> dev.o[19,1] 6.725200 1.009336   430 #> dev.o[20,1] 3.733120 1.001678  1800 #> dev.o[21,1] 5.158664 1.002124  1200 #> dev.o[1,2]  8.152589 1.013585   160 #> dev.o[2,2]  4.702379 1.001158  3000 #> dev.o[3,2]  5.706432 1.001570  1900 #> dev.o[4,2]  3.532402 1.000978  3000 #> dev.o[5,2]  3.190065 1.001175  3000 #> dev.o[6,2]  4.678837 1.004075  2700 #> dev.o[7,2]  4.604231 1.001839  3000 #> dev.o[8,2]  3.757033 1.004982   930 #> dev.o[9,2]  3.556742 1.000612  3000 #> dev.o[10,2] 6.802859 1.003219   740 #> dev.o[11,2] 4.869861 1.001599  3000 #> dev.o[12,2] 4.092331 1.000792  3000 #> dev.o[13,2] 4.993206 1.001248  2700 #> dev.o[14,2] 4.109912 1.000560  3000 #> dev.o[15,2] 5.241914 1.001161  3000 #> dev.o[16,2] 6.365209 1.001747  1600 #> dev.o[17,2] 7.811607 1.012824   270 #> dev.o[18,2] 4.981584 1.005679   390 #> dev.o[19,2] 2.433225 1.006065   360 #> dev.o[20,2] 3.544995 1.001046  3000 #> dev.o[21,2] 4.735476 1.001545  1900 #> dev.o[9,3]  4.563838 1.000840  3000 #> dev.o[10,3] 3.427415 1.000517  3000 #> dev.o[12,3] 4.772858 1.004961   450 #> dev.o[13,3] 4.919229 1.000909  3000 #> dev.o[19,3] 4.094685 1.006331   470 #> dev.o[10,4] 5.218338 1.004081   670 #> dev.o[12,4] 4.252248 1.001693  1700 #> dev.o[13,4] 5.624905 1.000789  3000 #>  #> $hat_par #>                     mean         sd        2.5%         25%        50% #> hat.par[1,1]    1.594057  0.7725748   0.3853724   1.0161056   1.504513 #> hat.par[2,1]   49.217811  4.8416717  39.9906212  45.9526969  49.216779 #> hat.par[3,1]   44.113008  4.4709370  35.7848193  41.0811750  43.930762 #> hat.par[4,1]   41.674248  4.5302254  33.5253323  38.4752234  41.461426 #> hat.par[5,1]   17.020522  2.4739610  12.3048799  15.3714373  16.960198 #> hat.par[6,1]   43.616653  4.2448457  35.5059377  40.8436075  43.627492 #> hat.par[7,1]  157.319652  7.6439924 142.1167861 152.2217367 157.257416 #> hat.par[8,1]   68.684134  5.6415633  57.4230865  64.7583114  68.755479 #> hat.par[9,1]   89.800252  5.1889001  80.0655495  86.3438047  89.585291 #> hat.par[10,1]  78.910890  3.7694317  71.5034082  76.4035942  79.018015 #> hat.par[11,1]  72.484885  5.6025162  61.5652015  68.7589196  72.508739 #> hat.par[12,1]  77.602563  4.3680772  68.5499390  74.7594560  77.742383 #> hat.par[13,1]  49.191489  4.9810276  39.7541862  45.7583064  49.134415 #> hat.par[14,1]  34.029496  4.8217797  25.5843675  30.6827562  33.719681 #> hat.par[15,1]  36.902923  4.8812446  27.6700854  33.5462964  36.841679 #> hat.par[16,1] 303.391114 13.7216196 276.8185619 294.2575262 303.627784 #> hat.par[17,1]  10.790492  2.4948559   6.3406910   9.0276066  10.605741 #> hat.par[18,1]  21.611976  3.2916127  15.6675861  19.2219344  21.497456 #> hat.par[19,1]   3.905594  1.3210003   1.7270629   2.9565836   3.765157 #> hat.par[20,1]  25.108484  3.6568431  18.3153089  22.6510780  25.040312 #> hat.par[21,1]  32.135741  4.3656918  24.1791326  29.1656841  31.921530 #> hat.par[1,2]    1.420027  0.7577481   0.3152456   0.8639263   1.289633 #> hat.par[2,2]   46.172860  5.0168282  36.3992829  42.8627561  46.139873 #> hat.par[3,2]   31.361641  4.1465287  23.3711091  28.6258470  31.238868 #> hat.par[4,2]   43.978664  5.0077276  34.7124265  40.3875772  43.818336 #> hat.par[5,2]   11.857556  2.1132403   7.9868313  10.3917275  11.759112 #> hat.par[6,2]   35.199899  3.9661391  27.8315891  32.5064271  35.038974 #> hat.par[7,2]  197.074296 10.1042467 177.1112399 190.4158907 196.869219 #> hat.par[8,2]   51.475076  5.1707433  41.2257955  47.9899296  51.401906 #> hat.par[9,2]   81.703743  5.8420614  70.6441298  77.7566217  81.651926 #> hat.par[10,2]  72.817396  3.9870634  64.9876048  70.0907834  72.937902 #> hat.par[11,2] 119.457945  8.2629279 103.4582115 113.8022712 119.508233 #> hat.par[12,2]  80.127958  4.9192415  69.8997599  77.0297339  80.322696 #> hat.par[13,2]  25.997040  4.5201719  17.8801910  22.8590308  25.767039 #> hat.par[14,2]  32.205266  4.6056112  23.7243607  29.0579569  32.014154 #> hat.par[15,2]  32.641745  4.6429839  24.0006308  29.5246003  32.360703 #> hat.par[16,2] 247.222784 12.8807936 222.3457806 238.1410835 247.328164 #> hat.par[17,2]   7.287567  2.0263926   3.7861091   5.8517390   7.138410 #> hat.par[18,2]  13.330821  2.5389926   8.7176474  11.5630904  13.231298 #> hat.par[19,2]   2.662446  1.0053675   1.1193978   1.9316003   2.523247 #> hat.par[20,2]  18.764314  3.1098261  13.3026360  16.5922451  18.603453 #> hat.par[21,2]  21.637352  3.5444347  15.3814532  19.1565062  21.400591 #> hat.par[9,3]   79.722213  6.0112058  67.9659009  75.7516068  79.676388 #> hat.par[10,3]  68.794152  4.3623209  60.4107623  65.6883410  68.886839 #> hat.par[12,3]  67.810108  4.6290658  58.8040507  64.6187206  67.835865 #> hat.par[13,3]  35.265375  5.2277294  25.8963428  31.7222521  34.972538 #> hat.par[19,3]   2.400052  0.8842682   1.0353329   1.7668486   2.273067 #> hat.par[10,4]  66.684157  4.2196671  58.2082884  63.9072886  66.728464 #> hat.par[12,4]  62.642922  4.3950406  53.9479427  59.7278017  62.619003 #> hat.par[13,4]  41.213635  4.8836335  31.8070546  38.0178226  41.152114 #>                      75%      97.5%     Rhat n.eff #> hat.par[1,1]    2.097303   3.328900 1.002498  1000 #> hat.par[2,1]   52.277365  59.129614 1.043779    51 #> hat.par[3,1]   46.916222  53.303598 1.001541  1900 #> hat.par[4,1]   44.782376  50.725290 1.000585  3000 #> hat.par[5,1]   18.656129  22.060645 1.001761  1600 #> hat.par[6,1]   46.477359  51.898246 1.001915  3000 #> hat.par[7,1]  162.420095 172.907824 1.004606   490 #> hat.par[8,1]   72.552592  79.299058 1.000824  3000 #> hat.par[9,1]   93.106853 100.676545 1.003318   710 #> hat.par[10,1]  81.378524  86.332538 1.002465  1000 #> hat.par[11,1]  76.056069  83.451674 1.002024  3000 #> hat.par[12,1]  80.617179  85.713746 1.009553   230 #> hat.par[13,1]  52.518576  59.114340 1.002885  3000 #> hat.par[14,1]  37.128437  44.175222 1.001379  2300 #> hat.par[15,1]  40.030394  46.754213 1.002447  3000 #> hat.par[16,1] 312.584453 330.018578 1.002463  1000 #> hat.par[17,1]  12.407056  16.234904 1.000947  3000 #> hat.par[18,1]  23.825402  28.657897 1.014146   150 #> hat.par[19,1]   4.687683   6.938700 1.005368   410 #> hat.par[20,1]  27.432178  32.376506 1.001991  1300 #> hat.par[21,1]  34.937225  41.410695 1.002639  1500 #> hat.par[1,2]    1.850631   3.193809 1.013119   170 #> hat.par[2,2]   49.397207  56.364623 1.021185    99 #> hat.par[3,2]   33.981099  40.011746 1.001916  1500 #> hat.par[4,2]   47.415183  53.924074 1.003226   740 #> hat.par[5,2]   13.238283  16.353674 1.002333  1100 #> hat.par[6,2]   37.760816  43.379926 1.000858  3000 #> hat.par[7,2]  204.123701 216.525180 1.001169  3000 #> hat.par[8,2]   55.001622  61.729081 1.001846  1500 #> hat.par[9,2]   85.577487  93.128103 1.001478  2000 #> hat.par[10,2]  75.561087  80.377415 1.006415   340 #> hat.par[11,2] 124.975085 136.301097 1.005999   370 #> hat.par[12,2]  83.359466  89.515709 1.012045   180 #> hat.par[13,2]  29.025905  35.618428 1.002717   900 #> hat.par[14,2]  35.221734  41.414309 1.001584  1800 #> hat.par[15,2]  35.632843  42.410835 1.002279  1500 #> hat.par[16,2] 255.768457 273.419992 1.004246   540 #> hat.par[17,2]   8.542749  11.704226 1.013530   190 #> hat.par[18,2]  14.947307  18.591454 1.017839   120 #> hat.par[19,2]   3.255360   4.950023 1.014988   140 #> hat.par[20,2]  20.767123  25.417178 1.000500  3000 #> hat.par[21,2]  23.927868  29.198775 1.002607   950 #> hat.par[9,3]   83.777370  91.772590 1.001443  3000 #> hat.par[10,3]  71.936711  77.010202 1.000925  3000 #> hat.par[12,3]  70.954413  76.904661 1.012780   160 #> hat.par[13,3]  38.608665  46.114749 1.002576   970 #> hat.par[19,3]   2.936961   4.427858 1.005602   390 #> hat.par[10,4]  69.529333  74.891819 1.002251  1100 #> hat.par[12,4]  65.567000  71.404895 1.003662   630 #> hat.par[13,4]  44.361211  51.139873 1.002073  2700 #>  #> $leverage_o #>  [1] 0.9031161 0.8651543 0.7404001 0.6437835 0.6298659 0.6981282 0.8029820 #>  [8] 0.7553268 0.6646494 0.6177775 0.7981007 0.6657676 0.9093618 0.8128423 #> [15] 0.7778134 0.9890938 0.8633628 0.7818563 0.7240470 0.6749020 0.7908959 #> [22] 0.2391665 0.8734490 0.6869201 0.6963065 0.5219778 0.6889346 0.8775258 #> [29] 0.7358011 0.7292742 0.7391091 0.8860629 0.7604634 0.9874482 0.6992432 #> [36] 0.8526680 0.9700168 0.3918415 0.5590025 0.3041525 0.6443297 0.5886650 #> [43] 0.7520816 0.7171290 0.6907078 1.0160394 0.1511031 0.6537120 0.6481516 #> [50] 0.7987762 #>  #> $sign_dev_o #>  [1]  1  1  1 -1  1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1  1  1 -1  1 -1 -1 -1  1 #> [26] -1  1  1  1  1  1 -1 -1  1 -1  1  1 -1 -1 -1  1 -1 -1 -1  1 -1 -1 -1  1 -1 #>  #> $phi #>                mean        sd       2.5%        25%          50%        75% #> phi[1] -0.281760685 0.6046115 -1.4894732 -0.7038642 -0.261537314  0.1646052 #> phi[2] -0.004515866 1.0338080 -1.9883388 -0.6818916 -0.002918915  0.6789770 #> phi[3] -0.028263241 0.9773701 -1.9601706 -0.6927976 -0.002186151  0.6487791 #> phi[4] -1.101115363 0.8296843 -2.6021630 -1.6722301 -1.165934116 -0.5866482 #> phi[5] -0.204587671 0.8863097 -1.7804547 -0.8415811 -0.240117452  0.3883194 #> phi[6]  0.774689028 0.8466256 -0.9134296  0.2180530  0.786137012  1.3514773 #> phi[7] -0.229596193 0.7503675 -1.7683838 -0.6911322 -0.213375450  0.2598836 #> phi[8] -0.057361558 1.0113418 -2.0164903 -0.7364038 -0.052337655  0.6235714 #>            97.5%     Rhat n.eff #> phi[1] 0.8127209 1.062988    40 #> phi[2] 2.1185359 1.008242   260 #> phi[3] 1.8105146 1.008696   300 #> phi[4] 0.7473586 1.047106    50 #> phi[5] 1.5474153 1.077126    32 #> phi[6] 2.4219209 1.050678    45 #> phi[7] 1.2060064 1.022319   100 #> phi[8] 1.9677160 1.005860   810 #>  #> $model_assessment #>        DIC       pD      dev n_data #> 1 90.74518 35.96929 54.77589     50 #>  #> $data #>                    study t1 t2 t3 t4  r1  r2 r3 r4  m1 m2 m3 m4  n1  n2  n3  n4 #> 1  Llewellyn-Jones, 1996  1  4 NA NA   3   0 NA NA   1  0 NA NA   8   8  NA  NA #> 2         Paggiaro, 1998  1  4 NA NA  51  45 NA NA  27 19 NA NA 139 142  NA  NA #> 3           Mahler, 1999  1  7 NA NA  47  28 NA NA  23  9 NA NA 143 135  NA  NA #> 4         Casaburi, 2000  1  8 NA NA  41  45 NA NA  18 12 NA NA 191 279  NA  NA #> 5        van Noord, 2000  1  7 NA NA  18  11 NA NA   8  7 NA NA  50  47  NA  NA #> 6          Rennard, 2001  1  7 NA NA  41  38 NA NA  29 22 NA NA 135 132  NA  NA #> 7         Casaburi, 2002  1  8 NA NA 156 198 NA NA  77 66 NA NA 371 550  NA  NA #> 8          Chapman, 2002  1  7 NA NA  68  52 NA NA  28 20 NA NA 207 201  NA  NA #> 9          Donohue, 2002  1  7  8 NA  92  82 77 NA  37 20 10 NA 201 213 209  NA #> 10          Mahler, 2002  1  4  7  5  79  77 63 68  69 68 45 52 181 168 160 165 #> 11           Rossi, 2002  1  6 NA NA  75 117 NA NA  59 92 NA NA 220 425  NA  NA #> 12         Hanania, 2003  1  4  7  5  73  79 65 71  59 49 57 53 185 183 177 178 #> 13      Szafranski, 2003  1  2  6  3  53  26 38 35  90 62 64 59 205 198 201 208 #> 14          Briggs, 2005  8  7 NA NA  30  36 NA NA  29 41 NA NA 328 325  NA  NA #> 15        Campbell, 2005  1  6 NA NA  34  35 NA NA  39 30 NA NA 217 215  NA  NA #> 16      Niewoehner, 2005  1  8 NA NA 296 255 NA NA 111 75 NA NA 915 914  NA  NA #> 17       van Noord, 2005  8  6 NA NA   4  14 NA NA   1  1 NA NA  70  69  NA  NA #> 18          Barnes, 2006  1  5 NA NA  24  11 NA NA   4  8 NA NA  73  67  NA  NA #> 19       O Donnell, 2006  1  7  5 NA   6   1  2 NA   5  1  3 NA  64  59  62  NA #> 20     Baumgartner, 2007  1  7 NA NA  24  20 NA NA  32 26 NA NA 143 144  NA  NA #> 21         Freeman, 2007  1  8 NA NA  35  19 NA NA  33 18 NA NA 195 200  NA  NA #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $mean_misspar #> [1] 1e-04 1e-04 #>  #> $var_misspar #> [1] 1 #>  #> $D #> [1] 0 #>  #> $ref #> [1] 1 #>  #> $indic #>       [,1] [,2] [,3] [,4] #>  [1,]    1    1   NA   NA #>  [2,]    1    1   NA   NA #>  [3,]    1    1   NA   NA #>  [4,]    1    1   NA   NA #>  [5,]    1    1   NA   NA #>  [6,]    1    1   NA   NA #>  [7,]    1    1   NA   NA #>  [8,]    1    1   NA   NA #>  [9,]    1    1    1   NA #> [10,]    1    1    1    1 #> [11,]    1    1   NA   NA #> [12,]    1    1    1    1 #> [13,]    1    1    1    1 #> [14,]    1    1   NA   NA #> [15,]    1    1   NA   NA #> [16,]    1    1   NA   NA #> [17,]    1    1   NA   NA #> [18,]    1    1   NA   NA #> [19,]    1    1    1   NA #> [20,]    1    1   NA   NA #> [21,]    1    1   NA   NA #>  #> $jagsfit #> Inference for Bugs model at \"5\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>                    mu.vect sd.vect    2.5%     25%     50%     75%   97.5% #> EM[2,1]             -0.957   0.497  -1.823  -1.292  -1.006  -0.633   0.071 #> EM[3,1]             -0.695   0.447  -1.537  -1.014  -0.699  -0.388   0.158 #> EM[4,1]             -0.297   0.310  -0.830  -0.522  -0.330  -0.107   0.350 #> EM[5,1]             -0.373   0.289  -0.906  -0.574  -0.393  -0.162   0.180 #> EM[6,1]             -0.088   0.278  -0.625  -0.278  -0.096   0.093   0.505 #> EM[7,1]             -0.449   0.178  -0.783  -0.577  -0.452  -0.319  -0.113 #> EM[8,1]             -0.496   0.162  -0.827  -0.599  -0.489  -0.384  -0.202 #> EM[3,2]              0.262   0.523  -0.746  -0.111   0.256   0.630   1.263 #> EM[4,2]              0.659   0.480  -0.342   0.380   0.673   0.961   1.657 #> EM[5,2]              0.584   0.515  -0.448   0.269   0.579   0.931   1.594 #> EM[6,2]              0.869   0.502  -0.159   0.546   0.898   1.216   1.806 #> EM[7,2]              0.507   0.466  -0.444   0.208   0.544   0.831   1.355 #> EM[8,2]              0.461   0.464  -0.459   0.144   0.493   0.792   1.249 #> EM[4,3]              0.397   0.474  -0.544   0.069   0.418   0.751   1.274 #> EM[5,3]              0.322   0.477  -0.622  -0.003   0.335   0.687   1.157 #> EM[6,3]              0.607   0.414  -0.190   0.304   0.602   0.904   1.377 #> EM[7,3]              0.246   0.435  -0.596  -0.060   0.242   0.566   1.076 #> EM[8,3]              0.199   0.423  -0.615  -0.088   0.214   0.499   0.990 #> EM[5,4]             -0.076   0.338  -0.721  -0.300  -0.079   0.140   0.609 #> EM[6,4]              0.210   0.367  -0.525  -0.015   0.201   0.473   0.890 #> EM[7,4]             -0.152   0.314  -0.820  -0.367  -0.142   0.070   0.432 #> EM[8,4]             -0.198   0.301  -0.825  -0.388  -0.169   0.017   0.320 #> EM[6,5]              0.285   0.361  -0.443   0.049   0.289   0.530   0.977 #> EM[7,5]             -0.076   0.307  -0.707  -0.287  -0.055   0.134   0.505 #> EM[8,5]             -0.123   0.303  -0.703  -0.339  -0.116   0.095   0.421 #> EM[7,6]             -0.362   0.278  -0.932  -0.550  -0.357  -0.172   0.172 #> EM[8,6]             -0.408   0.265  -0.959  -0.580  -0.403  -0.239   0.095 #> EM[8,7]             -0.046   0.191  -0.432  -0.174  -0.051   0.093   0.300 #> EM.pred[2,1]        -0.959   0.530  -1.941  -1.303  -1.008  -0.623   0.086 #> EM.pred[3,1]        -0.692   0.480  -1.601  -1.035  -0.698  -0.371   0.265 #> EM.pred[4,1]        -0.297   0.359  -0.936  -0.551  -0.322  -0.077   0.442 #> EM.pred[5,1]        -0.370   0.343  -1.040  -0.603  -0.377  -0.135   0.285 #> EM.pred[6,1]        -0.089   0.334  -0.743  -0.305  -0.090   0.116   0.596 #> EM.pred[7,1]        -0.441   0.251  -0.955  -0.596  -0.443  -0.284   0.060 #> EM.pred[8,1]        -0.497   0.242  -1.016  -0.634  -0.477  -0.341  -0.049 #> EM.pred[3,2]         0.260   0.556  -0.808  -0.126   0.250   0.650   1.366 #> EM.pred[4,2]         0.659   0.513  -0.436   0.353   0.679   0.974   1.730 #> EM.pred[5,2]         0.580   0.545  -0.511   0.253   0.570   0.938   1.650 #> EM.pred[6,2]         0.870   0.534  -0.194   0.523   0.890   1.240   1.871 #> EM.pred[7,2]         0.507   0.498  -0.500   0.181   0.553   0.840   1.453 #> EM.pred[8,2]         0.464   0.501  -0.524   0.132   0.500   0.817   1.309 #> EM.pred[4,3]         0.397   0.506  -0.624   0.063   0.412   0.757   1.346 #> EM.pred[5,3]         0.315   0.509  -0.692  -0.038   0.333   0.703   1.223 #> EM.pred[6,3]         0.608   0.450  -0.260   0.297   0.604   0.919   1.450 #> EM.pred[7,3]         0.242   0.475  -0.673  -0.080   0.249   0.585   1.165 #> EM.pred[8,3]         0.200   0.456  -0.693  -0.097   0.215   0.516   1.048 #> EM.pred[5,4]        -0.072   0.384  -0.801  -0.329  -0.078   0.180   0.717 #> EM.pred[6,4]         0.212   0.408  -0.625  -0.049   0.215   0.495   0.979 #> EM.pred[7,4]        -0.153   0.363  -0.902  -0.392  -0.141   0.095   0.524 #> EM.pred[8,4]        -0.200   0.351  -0.917  -0.425  -0.172   0.040   0.422 #> EM.pred[6,5]         0.283   0.402  -0.504   0.013   0.288   0.549   1.059 #> EM.pred[7,5]        -0.075   0.353  -0.815  -0.307  -0.057   0.154   0.575 #> EM.pred[8,5]        -0.121   0.352  -0.791  -0.369  -0.120   0.125   0.513 #> EM.pred[7,6]        -0.364   0.331  -1.047  -0.574  -0.367  -0.149   0.266 #> EM.pred[8,6]        -0.405   0.323  -1.081  -0.605  -0.400  -0.203   0.209 #> EM.pred[8,7]        -0.045   0.264  -0.593  -0.211  -0.040   0.132   0.467 #> SUCRA[1]             0.109   0.135   0.000   0.000   0.143   0.143   0.429 #> SUCRA[2]             0.868   0.227   0.143   0.857   1.000   1.000   1.000 #> SUCRA[3]             0.728   0.273   0.000   0.571   0.857   1.000   1.000 #> SUCRA[4]             0.404   0.259   0.000   0.286   0.429   0.571   0.857 #> SUCRA[5]             0.492   0.269   0.000   0.286   0.429   0.714   1.000 #> SUCRA[6]             0.198   0.193   0.000   0.000   0.143   0.286   0.714 #> SUCRA[7]             0.574   0.200   0.143   0.429   0.571   0.714   1.000 #> SUCRA[8]             0.627   0.183   0.286   0.571   0.571   0.714   1.000 #> abs_risk[1]          0.392   0.000   0.392   0.392   0.392   0.392   0.392 #> abs_risk[2]          0.209   0.084   0.094   0.150   0.191   0.255   0.409 #> abs_risk[3]          0.252   0.083   0.122   0.189   0.242   0.304   0.430 #> abs_risk[4]          0.327   0.068   0.219   0.276   0.316   0.366   0.478 #> abs_risk[5]          0.311   0.061   0.206   0.266   0.303   0.354   0.435 #> abs_risk[6]          0.373   0.064   0.256   0.328   0.369   0.414   0.516 #> abs_risk[7]          0.293   0.037   0.227   0.266   0.291   0.319   0.365 #> abs_risk[8]          0.283   0.033   0.220   0.261   0.283   0.305   0.345 #> delta[1,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[2,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[3,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[4,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[5,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[6,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[7,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[8,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[9,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[10,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[11,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[12,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[13,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[14,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[15,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[16,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[17,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[18,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[19,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[20,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[21,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[1,2]          -0.348   0.350  -0.997  -0.583  -0.370  -0.143   0.375 #> delta[2,2]          -0.329   0.290  -0.855  -0.535  -0.347  -0.141   0.286 #> delta[3,2]          -0.536   0.220  -1.007  -0.676  -0.516  -0.386  -0.142 #> delta[4,2]          -0.449   0.174  -0.824  -0.562  -0.451  -0.332  -0.105 #> delta[5,2]          -0.467   0.226  -0.919  -0.613  -0.460  -0.314  -0.034 #> delta[6,2]          -0.372   0.210  -0.756  -0.523  -0.377  -0.236   0.043 #> delta[7,2]          -0.460   0.181  -0.817  -0.580  -0.463  -0.341  -0.105 #> delta[8,2]          -0.432   0.195  -0.806  -0.568  -0.434  -0.301  -0.052 #> delta[9,2]          -0.467   0.198  -0.865  -0.606  -0.464  -0.326  -0.091 #> delta[10,2]         -0.238   0.358  -0.839  -0.508  -0.277   0.003   0.518 #> delta[11,2]         -0.146   0.270  -0.657  -0.333  -0.157   0.042   0.382 #> delta[12,2]         -0.256   0.319  -0.783  -0.494  -0.286  -0.058   0.436 #> delta[13,2]         -1.001   0.478  -1.838  -1.325  -1.050  -0.715  -0.004 #> delta[14,2]         -0.089   0.225  -0.549  -0.238  -0.083   0.068   0.328 #> delta[15,2]         -0.027   0.280  -0.562  -0.215  -0.030   0.148   0.559 #> delta[16,2]         -0.339   0.143  -0.595  -0.441  -0.347  -0.242  -0.043 #> delta[17,2]         -0.501   0.313  -1.189  -0.692  -0.485  -0.296   0.068 #> delta[18,2]         -0.442   0.306  -1.037  -0.650  -0.452  -0.223   0.151 #> delta[19,2]         -0.398   0.325  -1.026  -0.624  -0.406  -0.177   0.222 #> delta[20,2]         -0.412   0.218  -0.830  -0.560  -0.413  -0.260   0.020 #> delta[21,2]         -0.556   0.213  -1.008  -0.690  -0.539  -0.410  -0.188 #> delta[9,3]          -0.543   0.197  -0.968  -0.671  -0.526  -0.410  -0.202 #> delta[10,3]         -0.382   0.309  -0.975  -0.606  -0.394  -0.169   0.217 #> delta[12,3]         -0.277   0.304  -0.850  -0.492  -0.292  -0.065   0.311 #> delta[13,3]         -0.745   0.424  -1.542  -1.063  -0.742  -0.462   0.085 #> delta[19,3]         -0.494   0.247  -1.038  -0.638  -0.485  -0.327  -0.047 #> delta[10,4]         -0.493   0.245  -1.012  -0.644  -0.487  -0.331  -0.034 #> delta[12,4]         -0.365   0.238  -0.816  -0.527  -0.372  -0.212   0.136 #> delta[13,4]         -0.182   0.319  -0.814  -0.398  -0.178   0.052   0.442 #> dev.o[1,1]           2.287   2.293   0.006   0.535   1.600   3.274   8.289 #> dev.o[2,1]           0.980   1.357   0.001   0.088   0.449   1.338   4.803 #> dev.o[3,1]           1.037   1.375   0.001   0.121   0.517   1.400   4.799 #> dev.o[4,1]           0.658   0.920   0.001   0.068   0.306   0.857   3.255 #> dev.o[5,1]           0.724   1.028   0.001   0.074   0.324   0.984   3.592 #> dev.o[6,1]           0.967   1.302   0.001   0.106   0.457   1.319   4.670 #> dev.o[7,1]           0.827   1.162   0.001   0.080   0.368   1.054   4.311 #> dev.o[8,1]           0.766   1.027   0.002   0.083   0.355   1.051   3.650 #> dev.o[9,1]           0.784   1.054   0.001   0.086   0.384   1.049   3.703 #> dev.o[10,1]          0.618   0.932   0.001   0.061   0.266   0.804   3.171 #> dev.o[11,1]          0.957   1.345   0.001   0.085   0.433   1.237   4.819 #> dev.o[12,1]          1.369   1.581   0.002   0.207   0.813   1.981   5.636 #> dev.o[13,1]          1.422   1.898   0.002   0.158   0.719   1.970   6.559 #> dev.o[14,1]          0.940   1.322   0.001   0.108   0.442   1.260   4.401 #> dev.o[15,1]          1.072   1.423   0.001   0.116   0.535   1.425   5.151 #> dev.o[16,1]          1.279   1.721   0.001   0.143   0.619   1.745   6.177 #> dev.o[17,1]          1.919   2.131   0.005   0.348   1.216   2.783   7.853 #> dev.o[18,1]          1.159   1.457   0.001   0.132   0.585   1.680   5.181 #> dev.o[19,1]          1.768   1.790   0.005   0.408   1.220   2.579   6.725 #> dev.o[20,1]          0.739   1.078   0.001   0.077   0.339   0.959   3.733 #> dev.o[21,1]          1.103   1.435   0.001   0.120   0.552   1.514   5.159 #> dev.o[1,2]           3.243   1.977   0.643   1.828   2.813   4.209   8.153 #> dev.o[2,2]           0.921   1.342   0.001   0.091   0.407   1.158   4.702 #> dev.o[3,2]           1.179   1.562   0.001   0.133   0.588   1.584   5.706 #> dev.o[4,2]           0.725   0.996   0.001   0.080   0.349   0.963   3.532 #> dev.o[5,2]           0.611   0.865   0.001   0.059   0.274   0.798   3.190 #> dev.o[6,2]           1.012   1.320   0.002   0.119   0.530   1.389   4.679 #> dev.o[7,2]           0.885   1.281   0.001   0.091   0.395   1.149   4.604 #> dev.o[8,2]           0.743   1.047   0.001   0.081   0.341   0.977   3.757 #> dev.o[9,2]           0.731   1.046   0.001   0.073   0.333   0.987   3.557 #> dev.o[10,2]          1.654   1.929   0.003   0.230   0.951   2.412   6.803 #> dev.o[11,2]          0.965   1.358   0.001   0.099   0.428   1.299   4.870 #> dev.o[12,2]          0.800   1.126   0.001   0.078   0.355   1.047   4.092 #> dev.o[13,2]          0.987   1.392   0.001   0.098   0.448   1.321   4.993 #> dev.o[14,2]          0.872   1.205   0.001   0.093   0.403   1.187   4.110 #> dev.o[15,2]          1.056   1.458   0.001   0.115   0.508   1.412   5.242 #> dev.o[16,2]          1.315   1.760   0.001   0.132   0.619   1.843   6.365 #> dev.o[17,2]          2.340   2.119   0.015   0.724   1.800   3.348   7.812 #> dev.o[18,2]          1.110   1.395   0.001   0.132   0.597   1.532   4.982 #> dev.o[19,2]          0.492   0.696   0.001   0.051   0.220   0.655   2.433 #> dev.o[20,2]          0.739   0.991   0.001   0.077   0.346   1.026   3.545 #> dev.o[21,2]          0.967   1.328   0.001   0.103   0.450   1.308   4.735 #> dev.o[9,3]           0.908   1.277   0.001   0.090   0.431   1.229   4.564 #> dev.o[10,3]          0.741   0.970   0.001   0.086   0.367   0.979   3.427 #> dev.o[12,3]          1.020   1.341   0.001   0.108   0.497   1.430   4.773 #> dev.o[13,3]          1.019   1.445   0.001   0.089   0.443   1.389   4.919 #> dev.o[19,3]          1.235   1.116   0.009   0.406   0.933   1.787   4.095 #> dev.o[10,4]          1.135   1.439   0.001   0.133   0.591   1.600   5.218 #> dev.o[12,4]          0.834   1.161   0.001   0.092   0.394   1.129   4.252 #> dev.o[13,4]          1.163   1.627   0.002   0.128   0.565   1.532   5.625 #> effectiveness[1,1]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,1]   0.616   0.486   0.000   0.000   1.000   1.000   1.000 #> effectiveness[3,1]   0.256   0.436   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,1]   0.009   0.093   0.000   0.000   0.000   0.000   0.000 #> effectiveness[5,1]   0.034   0.181   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,1]   0.000   0.018   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,1]   0.036   0.186   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,1]   0.049   0.217   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,2]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,2]   0.181   0.385   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,2]   0.337   0.473   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,2]   0.079   0.269   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,2]   0.143   0.350   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,2]   0.011   0.106   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,2]   0.117   0.321   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,2]   0.132   0.339   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,3]   0.001   0.026   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,3]   0.058   0.233   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,3]   0.097   0.296   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,3]   0.132   0.338   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,3]   0.161   0.367   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,3]   0.026   0.160   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,3]   0.217   0.412   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,3]   0.309   0.462   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,4]   0.010   0.100   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,4]   0.050   0.219   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,4]   0.092   0.289   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,4]   0.125   0.331   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,4]   0.147   0.354   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,4]   0.045   0.208   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,4]   0.263   0.440   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,4]   0.267   0.442   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,5]   0.058   0.234   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,5]   0.043   0.203   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,5]   0.082   0.275   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,5]   0.186   0.389   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,5]   0.154   0.361   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,5]   0.093   0.291   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,5]   0.223   0.416   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,5]   0.161   0.368   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,6]   0.111   0.315   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,6]   0.022   0.147   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,6]   0.074   0.262   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,6]   0.229   0.420   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,6]   0.183   0.387   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,6]   0.188   0.391   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,6]   0.117   0.321   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,6]   0.075   0.264   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,7]   0.320   0.467   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,7]   0.016   0.127   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,7]   0.036   0.186   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,7]   0.117   0.322   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,7]   0.132   0.338   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,7]   0.344   0.475   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,7]   0.028   0.165   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,7]   0.006   0.079   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,8]   0.500   0.500   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,8]   0.014   0.118   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,8]   0.025   0.157   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,8]   0.123   0.329   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,8]   0.047   0.211   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,8]   0.291   0.454   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> hat.par[1,1]         1.594   0.773   0.385   1.016   1.505   2.097   3.329 #> hat.par[2,1]        49.218   4.842  39.991  45.953  49.217  52.277  59.130 #> hat.par[3,1]        44.113   4.471  35.785  41.081  43.931  46.916  53.304 #> hat.par[4,1]        41.674   4.530  33.525  38.475  41.461  44.782  50.725 #> hat.par[5,1]        17.021   2.474  12.305  15.371  16.960  18.656  22.061 #> hat.par[6,1]        43.617   4.245  35.506  40.844  43.627  46.477  51.898 #> hat.par[7,1]       157.320   7.644 142.117 152.222 157.257 162.420 172.908 #> hat.par[8,1]        68.684   5.642  57.423  64.758  68.755  72.553  79.299 #> hat.par[9,1]        89.800   5.189  80.066  86.344  89.585  93.107 100.677 #> hat.par[10,1]       78.911   3.769  71.503  76.404  79.018  81.379  86.333 #> hat.par[11,1]       72.485   5.603  61.565  68.759  72.509  76.056  83.452 #> hat.par[12,1]       77.603   4.368  68.550  74.759  77.742  80.617  85.714 #> hat.par[13,1]       49.191   4.981  39.754  45.758  49.134  52.519  59.114 #> hat.par[14,1]       34.029   4.822  25.584  30.683  33.720  37.128  44.175 #> hat.par[15,1]       36.903   4.881  27.670  33.546  36.842  40.030  46.754 #> hat.par[16,1]      303.391  13.722 276.819 294.258 303.628 312.584 330.019 #> hat.par[17,1]       10.790   2.495   6.341   9.028  10.606  12.407  16.235 #> hat.par[18,1]       21.612   3.292  15.668  19.222  21.497  23.825  28.658 #> hat.par[19,1]        3.906   1.321   1.727   2.957   3.765   4.688   6.939 #> hat.par[20,1]       25.108   3.657  18.315  22.651  25.040  27.432  32.377 #> hat.par[21,1]       32.136   4.366  24.179  29.166  31.922  34.937  41.411 #> hat.par[1,2]         1.420   0.758   0.315   0.864   1.290   1.851   3.194 #> hat.par[2,2]        46.173   5.017  36.399  42.863  46.140  49.397  56.365 #> hat.par[3,2]        31.362   4.147  23.371  28.626  31.239  33.981  40.012 #> hat.par[4,2]        43.979   5.008  34.712  40.388  43.818  47.415  53.924 #> hat.par[5,2]        11.858   2.113   7.987  10.392  11.759  13.238  16.354 #> hat.par[6,2]        35.200   3.966  27.832  32.506  35.039  37.761  43.380 #> hat.par[7,2]       197.074  10.104 177.111 190.416 196.869 204.124 216.525 #> hat.par[8,2]        51.475   5.171  41.226  47.990  51.402  55.002  61.729 #> hat.par[9,2]        81.704   5.842  70.644  77.757  81.652  85.577  93.128 #> hat.par[10,2]       72.817   3.987  64.988  70.091  72.938  75.561  80.377 #> hat.par[11,2]      119.458   8.263 103.458 113.802 119.508 124.975 136.301 #> hat.par[12,2]       80.128   4.919  69.900  77.030  80.323  83.359  89.516 #> hat.par[13,2]       25.997   4.520  17.880  22.859  25.767  29.026  35.618 #> hat.par[14,2]       32.205   4.606  23.724  29.058  32.014  35.222  41.414 #> hat.par[15,2]       32.642   4.643  24.001  29.525  32.361  35.633  42.411 #> hat.par[16,2]      247.223  12.881 222.346 238.141 247.328 255.768 273.420 #> hat.par[17,2]        7.288   2.026   3.786   5.852   7.138   8.543  11.704 #> hat.par[18,2]       13.331   2.539   8.718  11.563  13.231  14.947  18.591 #> hat.par[19,2]        2.662   1.005   1.119   1.932   2.523   3.255   4.950 #> hat.par[20,2]       18.764   3.110  13.303  16.592  18.603  20.767  25.417 #> hat.par[21,2]       21.637   3.544  15.381  19.157  21.401  23.928  29.199 #> hat.par[9,3]        79.722   6.011  67.966  75.752  79.676  83.777  91.773 #> hat.par[10,3]       68.794   4.362  60.411  65.688  68.887  71.937  77.010 #> hat.par[12,3]       67.810   4.629  58.804  64.619  67.836  70.954  76.905 #> hat.par[13,3]       35.265   5.228  25.896  31.722  34.973  38.609  46.115 #> hat.par[19,3]        2.400   0.884   1.035   1.767   2.273   2.937   4.428 #> hat.par[10,4]       66.684   4.220  58.208  63.907  66.728  69.529  74.892 #> hat.par[12,4]       62.643   4.395  53.948  59.728  62.619  65.567  71.405 #> hat.par[13,4]       41.214   4.884  31.807  38.018  41.152  44.361  51.140 #> phi[1]              -0.282   0.605  -1.489  -0.704  -0.262   0.165   0.813 #> phi[2]              -0.005   1.034  -1.988  -0.682  -0.003   0.679   2.119 #> phi[3]              -0.028   0.977  -1.960  -0.693  -0.002   0.649   1.811 #> phi[4]              -1.101   0.830  -2.602  -1.672  -1.166  -0.587   0.747 #> phi[5]              -0.205   0.886  -1.780  -0.842  -0.240   0.388   1.547 #> phi[6]               0.775   0.847  -0.913   0.218   0.786   1.351   2.422 #> phi[7]              -0.230   0.750  -1.768  -0.691  -0.213   0.260   1.206 #> phi[8]              -0.057   1.011  -2.016  -0.736  -0.052   0.624   1.968 #> tau                  0.158   0.082   0.030   0.101   0.147   0.204   0.340 #> totresdev.o         54.776   9.517  37.961  48.103  53.927  60.735  75.288 #> deviance           582.002  13.881 556.478 572.371 581.422 590.922 610.751 #>                     Rhat n.eff #> EM[2,1]            1.027    91 #> EM[3,1]            1.021   230 #> EM[4,1]            1.153    19 #> EM[5,1]            1.120    22 #> EM[6,1]            1.007  1100 #> EM[7,1]            1.011   220 #> EM[8,1]            1.021   140 #> EM[3,2]            1.027   100 #> EM[4,2]            1.022   230 #> EM[5,2]            1.064    42 #> EM[6,2]            1.031    70 #> EM[7,2]            1.018   120 #> EM[8,2]            1.016   140 #> EM[4,3]            1.043    63 #> EM[5,3]            1.016   180 #> EM[6,3]            1.018   150 #> EM[7,3]            1.007   380 #> EM[8,3]            1.018   310 #> EM[5,4]            1.125    21 #> EM[6,4]            1.122    21 #> EM[7,4]            1.094    26 #> EM[8,4]            1.102    26 #> EM[6,5]            1.079    31 #> EM[7,5]            1.088    29 #> EM[8,5]            1.090    27 #> EM[7,6]            1.012   200 #> EM[8,6]            1.021   150 #> EM[8,7]            1.001  3000 #> EM.pred[2,1]       1.024    98 #> EM.pred[3,1]       1.020   200 #> EM.pred[4,1]       1.104    25 #> EM.pred[5,1]       1.077    32 #> EM.pred[6,1]       1.007  1800 #> EM.pred[7,1]       1.006   460 #> EM.pred[8,1]       1.012   370 #> EM.pred[3,2]       1.022   120 #> EM.pred[4,2]       1.018   270 #> EM.pred[5,2]       1.057    47 #> EM.pred[6,2]       1.030    71 #> EM.pred[7,2]       1.013   160 #> EM.pred[8,2]       1.013   170 #> EM.pred[4,3]       1.038    75 #> EM.pred[5,3]       1.014   220 #> EM.pred[6,3]       1.015   190 #> EM.pred[7,3]       1.009   340 #> EM.pred[8,3]       1.014   420 #> EM.pred[5,4]       1.091    28 #> EM.pred[6,4]       1.104    24 #> EM.pred[7,4]       1.077    31 #> EM.pred[8,4]       1.069    36 #> EM.pred[6,5]       1.073    34 #> EM.pred[7,5]       1.060    41 #> EM.pred[8,5]       1.067    36 #> EM.pred[7,6]       1.009   240 #> EM.pred[8,6]       1.015   220 #> EM.pred[8,7]       1.003  1100 #> SUCRA[1]           1.072    52 #> SUCRA[2]           1.009   240 #> SUCRA[3]           1.020   140 #> SUCRA[4]           1.129    20 #> SUCRA[5]           1.076    31 #> SUCRA[6]           1.013   160 #> SUCRA[7]           1.019   110 #> SUCRA[8]           1.013   160 #> abs_risk[1]        1.000     1 #> abs_risk[2]        1.028    82 #> abs_risk[3]        1.018   240 #> abs_risk[4]        1.146    19 #> abs_risk[5]        1.113    23 #> abs_risk[6]        1.005  1600 #> abs_risk[7]        1.011   220 #> abs_risk[8]        1.022   130 #> delta[1,1]         1.000     1 #> delta[2,1]         1.000     1 #> delta[3,1]         1.000     1 #> delta[4,1]         1.000     1 #> delta[5,1]         1.000     1 #> delta[6,1]         1.000     1 #> delta[7,1]         1.000     1 #> delta[8,1]         1.000     1 #> delta[9,1]         1.000     1 #> delta[10,1]        1.000     1 #> delta[11,1]        1.000     1 #> delta[12,1]        1.000     1 #> delta[13,1]        1.000     1 #> delta[14,1]        1.000     1 #> delta[15,1]        1.000     1 #> delta[16,1]        1.000     1 #> delta[17,1]        1.000     1 #> delta[18,1]        1.000     1 #> delta[19,1]        1.000     1 #> delta[20,1]        1.000     1 #> delta[21,1]        1.000     1 #> delta[1,2]         1.128    21 #> delta[2,2]         1.156    18 #> delta[3,2]         1.012   170 #> delta[4,2]         1.016   260 #> delta[5,2]         1.011   270 #> delta[6,2]         1.009  1200 #> delta[7,2]         1.015   270 #> delta[8,2]         1.011   280 #> delta[9,2]         1.015   150 #> delta[10,2]        1.120    23 #> delta[11,2]        1.004  2900 #> delta[12,2]        1.129    21 #> delta[13,2]        1.028    84 #> delta[14,2]        1.002  2400 #> delta[15,2]        1.005   510 #> delta[16,2]        1.002  2100 #> delta[17,2]        1.025   110 #> delta[18,2]        1.094    26 #> delta[19,2]        1.082    30 #> delta[20,2]        1.005  1000 #> delta[21,2]        1.018   140 #> delta[9,3]         1.028    86 #> delta[10,3]        1.115    22 #> delta[12,3]        1.122    22 #> delta[13,3]        1.024   160 #> delta[19,3]        1.013   240 #> delta[10,4]        1.022   160 #> delta[12,4]        1.008   400 #> delta[13,4]        1.004  2200 #> dev.o[1,1]         1.002  1700 #> dev.o[2,1]         1.008   270 #> dev.o[3,1]         1.001  3000 #> dev.o[4,1]         1.001  3000 #> dev.o[5,1]         1.001  3000 #> dev.o[6,1]         1.001  3000 #> dev.o[7,1]         1.001  2200 #> dev.o[8,1]         1.002  1900 #> dev.o[9,1]         1.001  2400 #> dev.o[10,1]        1.002  1500 #> dev.o[11,1]        1.004   550 #> dev.o[12,1]        1.008   310 #> dev.o[13,1]        1.003  2900 #> dev.o[14,1]        1.001  3000 #> dev.o[15,1]        1.003   900 #> dev.o[16,1]        1.002  1700 #> dev.o[17,1]        1.001  3000 #> dev.o[18,1]        1.003   940 #> dev.o[19,1]        1.009   430 #> dev.o[20,1]        1.002  1800 #> dev.o[21,1]        1.002  1200 #> dev.o[1,2]         1.014   160 #> dev.o[2,2]         1.001  3000 #> dev.o[3,2]         1.002  1900 #> dev.o[4,2]         1.001  3000 #> dev.o[5,2]         1.001  3000 #> dev.o[6,2]         1.004  2700 #> dev.o[7,2]         1.002  3000 #> dev.o[8,2]         1.005   930 #> dev.o[9,2]         1.001  3000 #> dev.o[10,2]        1.003   740 #> dev.o[11,2]        1.002  3000 #> dev.o[12,2]        1.001  3000 #> dev.o[13,2]        1.001  2700 #> dev.o[14,2]        1.001  3000 #> dev.o[15,2]        1.001  3000 #> dev.o[16,2]        1.002  1600 #> dev.o[17,2]        1.013   270 #> dev.o[18,2]        1.006   390 #> dev.o[19,2]        1.006   360 #> dev.o[20,2]        1.001  3000 #> dev.o[21,2]        1.002  1900 #> dev.o[9,3]         1.001  3000 #> dev.o[10,3]        1.001  3000 #> dev.o[12,3]        1.005   450 #> dev.o[13,3]        1.001  3000 #> dev.o[19,3]        1.006   470 #> dev.o[10,4]        1.004   670 #> dev.o[12,4]        1.002  1700 #> dev.o[13,4]        1.001  3000 #> effectiveness[1,1] 1.000     1 #> effectiveness[2,1] 1.033    68 #> effectiveness[3,1] 1.038    72 #> effectiveness[4,1] 1.193   220 #> effectiveness[5,1] 1.007  2000 #> effectiveness[6,1] 1.291  3000 #> effectiveness[7,1] 1.130    97 #> effectiveness[8,1] 1.054   190 #> effectiveness[1,2] 1.000     1 #> effectiveness[2,2] 1.018   180 #> effectiveness[3,2] 1.019   120 #> effectiveness[4,2] 1.105    62 #> effectiveness[5,2] 1.071    58 #> effectiveness[6,2] 1.016  2700 #> effectiveness[7,2] 1.007   670 #> effectiveness[8,2] 1.006   640 #> effectiveness[1,3] 1.291  1500 #> effectiveness[2,3] 1.019   460 #> effectiveness[3,3] 1.002  2500 #> effectiveness[4,3] 1.038   110 #> effectiveness[5,3] 1.035   110 #> effectiveness[6,3] 1.004  3000 #> effectiveness[7,3] 1.013   210 #> effectiveness[8,3] 1.005   430 #> effectiveness[1,4] 1.164   240 #> effectiveness[2,4] 1.057   170 #> effectiveness[3,4] 1.004  1300 #> effectiveness[4,4] 1.005   810 #> effectiveness[5,4] 1.014   280 #> effectiveness[6,4] 1.029   380 #> effectiveness[7,4] 1.006   420 #> effectiveness[8,4] 1.007   330 #> effectiveness[1,5] 1.120    68 #> effectiveness[2,5] 1.031   370 #> effectiveness[3,5] 1.008   810 #> effectiveness[4,5] 1.001  3000 #> effectiveness[5,5] 1.001  3000 #> effectiveness[6,5] 1.015   370 #> effectiveness[7,5] 1.002  2000 #> effectiveness[8,5] 1.033   110 #> effectiveness[1,6] 1.035   140 #> effectiveness[2,6] 1.006  3000 #> effectiveness[3,6] 1.005  1300 #> effectiveness[4,6] 1.009   290 #> effectiveness[5,6] 1.023   140 #> effectiveness[6,6] 1.005   560 #> effectiveness[7,6] 1.056    86 #> effectiveness[8,6] 1.008   850 #> effectiveness[1,7] 1.009   240 #> effectiveness[2,7] 1.020  1400 #> effectiveness[3,7] 1.027   500 #> effectiveness[4,7] 1.004  1000 #> effectiveness[5,7] 1.034   120 #> effectiveness[6,7] 1.007   310 #> effectiveness[7,7] 1.018   970 #> effectiveness[8,7] 1.092   750 #> effectiveness[1,8] 1.008   260 #> effectiveness[2,8] 1.078   420 #> effectiveness[3,8] 1.150   110 #> effectiveness[4,8] 1.160    29 #> effectiveness[5,8] 1.103    97 #> effectiveness[6,8] 1.014   180 #> effectiveness[7,8] 1.000     1 #> effectiveness[8,8] 1.000     1 #> hat.par[1,1]       1.002  1000 #> hat.par[2,1]       1.044    51 #> hat.par[3,1]       1.002  1900 #> hat.par[4,1]       1.001  3000 #> hat.par[5,1]       1.002  1600 #> hat.par[6,1]       1.002  3000 #> hat.par[7,1]       1.005   490 #> hat.par[8,1]       1.001  3000 #> hat.par[9,1]       1.003   710 #> hat.par[10,1]      1.002  1000 #> hat.par[11,1]      1.002  3000 #> hat.par[12,1]      1.010   230 #> hat.par[13,1]      1.003  3000 #> hat.par[14,1]      1.001  2300 #> hat.par[15,1]      1.002  3000 #> hat.par[16,1]      1.002  1000 #> hat.par[17,1]      1.001  3000 #> hat.par[18,1]      1.014   150 #> hat.par[19,1]      1.005   410 #> hat.par[20,1]      1.002  1300 #> hat.par[21,1]      1.003  1500 #> hat.par[1,2]       1.013   170 #> hat.par[2,2]       1.021    99 #> hat.par[3,2]       1.002  1500 #> hat.par[4,2]       1.003   740 #> hat.par[5,2]       1.002  1100 #> hat.par[6,2]       1.001  3000 #> hat.par[7,2]       1.001  3000 #> hat.par[8,2]       1.002  1500 #> hat.par[9,2]       1.001  2000 #> hat.par[10,2]      1.006   340 #> hat.par[11,2]      1.006   370 #> hat.par[12,2]      1.012   180 #> hat.par[13,2]      1.003   900 #> hat.par[14,2]      1.002  1800 #> hat.par[15,2]      1.002  1500 #> hat.par[16,2]      1.004   540 #> hat.par[17,2]      1.014   190 #> hat.par[18,2]      1.018   120 #> hat.par[19,2]      1.015   140 #> hat.par[20,2]      1.001  3000 #> hat.par[21,2]      1.003   950 #> hat.par[9,3]       1.001  3000 #> hat.par[10,3]      1.001  3000 #> hat.par[12,3]      1.013   160 #> hat.par[13,3]      1.003   970 #> hat.par[19,3]      1.006   390 #> hat.par[10,4]      1.002  1100 #> hat.par[12,4]      1.004   630 #> hat.par[13,4]      1.002  2700 #> phi[1]             1.063    40 #> phi[2]             1.008   260 #> phi[3]             1.009   300 #> phi[4]             1.047    50 #> phi[5]             1.077    32 #> phi[6]             1.051    45 #> phi[7]             1.022   100 #> phi[8]             1.006   810 #> tau                1.044    65 #> totresdev.o        1.012   170 #> deviance           1.008   270 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 95.7 and DIC = 677.7 #> DIC is an estimate of expected predictive error (lower deviance is better). #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $EM_pred #>                     mean        sd       2.5%         25%         50% #> EM.pred[2,1] -0.95895821 0.5295064 -1.9405713 -1.30339004 -1.00780517 #> EM.pred[3,1] -0.69164410 0.4801117 -1.6013407 -1.03504446 -0.69849254 #> EM.pred[4,1] -0.29676909 0.3591604 -0.9361589 -0.55148007 -0.32155307 #> EM.pred[5,1] -0.37001598 0.3426341 -1.0402883 -0.60279539 -0.37715595 #> EM.pred[6,1] -0.08902118 0.3341245 -0.7431489 -0.30493551 -0.09020267 #> EM.pred[7,1] -0.44129917 0.2506131 -0.9545474 -0.59552797 -0.44302091 #> EM.pred[8,1] -0.49690681 0.2418869 -1.0159779 -0.63428337 -0.47725593 #> EM.pred[3,2]  0.25987317 0.5557432 -0.8076279 -0.12550795  0.25002450 #> EM.pred[4,2]  0.65860276 0.5126785 -0.4364862  0.35255426  0.67902733 #> EM.pred[5,2]  0.58036583 0.5453038 -0.5109097  0.25258895  0.56987177 #> EM.pred[6,2]  0.87035857 0.5339492 -0.1941194  0.52304163  0.89026522 #> EM.pred[7,2]  0.50674065 0.4978655 -0.4999822  0.18126325  0.55322825 #> EM.pred[8,2]  0.46436822 0.5006496 -0.5239938  0.13221171  0.50004492 #> EM.pred[4,3]  0.39687978 0.5055354 -0.6237789  0.06254045  0.41229373 #> EM.pred[5,3]  0.31457723 0.5091179 -0.6924632 -0.03783559  0.33259910 #> EM.pred[6,3]  0.60825319 0.4502522 -0.2595783  0.29692099  0.60357146 #> EM.pred[7,3]  0.24231053 0.4747397 -0.6730903 -0.07979896  0.24886708 #> EM.pred[8,3]  0.19961637 0.4556857 -0.6930812 -0.09719265  0.21523103 #> EM.pred[5,4] -0.07165076 0.3843016 -0.8007637 -0.32928909 -0.07778860 #> EM.pred[6,4]  0.21233513 0.4083359 -0.6245240 -0.04876074  0.21487611 #> EM.pred[7,4] -0.15261282 0.3627999 -0.9015070 -0.39182365 -0.14121266 #> EM.pred[8,4] -0.20038913 0.3506655 -0.9171384 -0.42492736 -0.17232929 #> EM.pred[6,5]  0.28257929 0.4020845 -0.5044746  0.01335145  0.28844212 #> EM.pred[7,5] -0.07514391 0.3533488 -0.8153985 -0.30686314 -0.05660254 #> EM.pred[8,5] -0.12059434 0.3517338 -0.7906801 -0.36861764 -0.11994646 #> EM.pred[7,6] -0.36412690 0.3308671 -1.0465375 -0.57387341 -0.36661684 #> EM.pred[8,6] -0.40497354 0.3226790 -1.0807009 -0.60472251 -0.40031714 #> EM.pred[8,7] -0.04469512 0.2636376 -0.5934388 -0.21074885 -0.03953685 #>                      75%       97.5%     Rhat n.eff #> EM.pred[2,1] -0.62327077  0.08550508 1.024002    98 #> EM.pred[3,1] -0.37060709  0.26454198 1.020096   200 #> EM.pred[4,1] -0.07672240  0.44192259 1.104178    25 #> EM.pred[5,1] -0.13505948  0.28502833 1.077009    32 #> EM.pred[6,1]  0.11557997  0.59560467 1.006514  1800 #> EM.pred[7,1] -0.28448051  0.06037179 1.006308   460 #> EM.pred[8,1] -0.34065972 -0.04904531 1.012030   370 #> EM.pred[3,2]  0.65002964  1.36551347 1.021880   120 #> EM.pred[4,2]  0.97391969  1.72997397 1.017877   270 #> EM.pred[5,2]  0.93810104  1.64961908 1.057296    47 #> EM.pred[6,2]  1.23969331  1.87128480 1.030463    71 #> EM.pred[7,2]  0.84046980  1.45319621 1.012865   160 #> EM.pred[8,2]  0.81705415  1.30874021 1.013347   170 #> EM.pred[4,3]  0.75746684  1.34640715 1.038408    75 #> EM.pred[5,3]  0.70251383  1.22287906 1.013884   220 #> EM.pred[6,3]  0.91876729  1.45044448 1.014996   190 #> EM.pred[7,3]  0.58489064  1.16485326 1.008758   340 #> EM.pred[8,3]  0.51593219  1.04827047 1.014256   420 #> EM.pred[5,4]  0.17959302  0.71651768 1.091242    28 #> EM.pred[6,4]  0.49456117  0.97929657 1.103555    24 #> EM.pred[7,4]  0.09486584  0.52411622 1.076824    31 #> EM.pred[8,4]  0.04029627  0.42158270 1.068662    36 #> EM.pred[6,5]  0.54854923  1.05944600 1.073441    34 #> EM.pred[7,5]  0.15357558  0.57495403 1.059894    41 #> EM.pred[8,5]  0.12511419  0.51261509 1.066995    36 #> EM.pred[7,6] -0.14880270  0.26556043 1.009460   240 #> EM.pred[8,6] -0.20259724  0.20930789 1.014594   220 #> EM.pred[8,7]  0.13203788  0.46707430 1.002561  1100 #>  #> $tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.15809737  0.08160420  0.03039207  0.10073407  0.14698797  0.20374537  #>       97.5%        Rhat       n.eff  #>  0.33953952  1.04351588 65.00000000  #>  #> $delta #>                    mean        sd       2.5%        25%         50% #> delta[1,2]  -0.34828922 0.3499889 -0.9972601 -0.5825640 -0.36989310 #> delta[2,2]  -0.32911656 0.2903253 -0.8553079 -0.5346864 -0.34672740 #> delta[3,2]  -0.53573832 0.2197288 -1.0072090 -0.6760438 -0.51629492 #> delta[4,2]  -0.44924473 0.1744898 -0.8236103 -0.5616105 -0.45126205 #> delta[5,2]  -0.46729116 0.2257805 -0.9186178 -0.6132535 -0.45960280 #> delta[6,2]  -0.37247130 0.2098710 -0.7555147 -0.5230206 -0.37730629 #> delta[7,2]  -0.46000104 0.1805195 -0.8173456 -0.5800391 -0.46291834 #> delta[8,2]  -0.43219673 0.1950956 -0.8062084 -0.5680870 -0.43408784 #> delta[9,2]  -0.46680176 0.1980118 -0.8652243 -0.6059327 -0.46360953 #> delta[10,2] -0.23786906 0.3580316 -0.8387783 -0.5082189 -0.27737574 #> delta[11,2] -0.14610714 0.2704993 -0.6572325 -0.3333489 -0.15650215 #> delta[12,2] -0.25610969 0.3186022 -0.7831767 -0.4935032 -0.28585244 #> delta[13,2] -1.00122031 0.4781959 -1.8380136 -1.3252400 -1.04999577 #> delta[14,2] -0.08873984 0.2245459 -0.5492095 -0.2383703 -0.08314109 #> delta[15,2] -0.02679260 0.2804546 -0.5616107 -0.2150376 -0.02977219 #> delta[16,2] -0.33889154 0.1430502 -0.5951312 -0.4407418 -0.34655072 #> delta[17,2] -0.50085584 0.3127216 -1.1893079 -0.6919179 -0.48509092 #> delta[18,2] -0.44225374 0.3061564 -1.0371139 -0.6501547 -0.45220971 #> delta[19,2] -0.39797782 0.3252137 -1.0262545 -0.6240854 -0.40639456 #> delta[20,2] -0.41165850 0.2183181 -0.8302027 -0.5597763 -0.41304867 #> delta[21,2] -0.55551766 0.2125577 -1.0077006 -0.6898948 -0.53853675 #> delta[9,3]  -0.54345533 0.1965974 -0.9679525 -0.6706344 -0.52647648 #> delta[10,3] -0.38219999 0.3092234 -0.9754887 -0.6061136 -0.39352237 #> delta[12,3] -0.27661290 0.3041194 -0.8501595 -0.4918332 -0.29195544 #> delta[13,3] -0.74513585 0.4238566 -1.5421270 -1.0633214 -0.74231131 #> delta[19,3] -0.49390556 0.2469422 -1.0378661 -0.6383829 -0.48500871 #> delta[10,4] -0.49274340 0.2451571 -1.0123724 -0.6437765 -0.48739587 #> delta[12,4] -0.36513650 0.2376215 -0.8161401 -0.5272718 -0.37233118 #> delta[13,4] -0.18181068 0.3192294 -0.8137821 -0.3975206 -0.17786159 #>                      75%        97.5%     Rhat n.eff #> delta[1,2]  -0.143364497  0.375109729 1.128174    21 #> delta[2,2]  -0.141383644  0.285576209 1.156129    18 #> delta[3,2]  -0.385956980 -0.142420081 1.012275   170 #> delta[4,2]  -0.332391051 -0.105119551 1.015569   260 #> delta[5,2]  -0.313835970 -0.034425510 1.010732   270 #> delta[6,2]  -0.236469826  0.043244749 1.008770  1200 #> delta[7,2]  -0.341259531 -0.105161676 1.015134   270 #> delta[8,2]  -0.301359070 -0.051512160 1.010722   280 #> delta[9,2]  -0.325971015 -0.090816589 1.014523   150 #> delta[10,2]  0.003206949  0.517654557 1.119957    23 #> delta[11,2]  0.042425471  0.382483579 1.003754  2900 #> delta[12,2] -0.057712037  0.435713920 1.129122    21 #> delta[13,2] -0.715225821 -0.004182342 1.027969    84 #> delta[14,2]  0.068268364  0.327909137 1.002440  2400 #> delta[15,2]  0.147595691  0.558843931 1.004786   510 #> delta[16,2] -0.242158212 -0.043346213 1.001652  2100 #> delta[17,2] -0.296042113  0.067604692 1.024779   110 #> delta[18,2] -0.222605689  0.150982666 1.094115    26 #> delta[19,2] -0.176712510  0.222375322 1.082204    30 #> delta[20,2] -0.260359384  0.020290553 1.005287  1000 #> delta[21,2] -0.410410358 -0.188397823 1.018423   140 #> delta[9,3]  -0.409668437 -0.202069230 1.027593    86 #> delta[10,3] -0.169129084  0.216659724 1.115140    22 #> delta[12,3] -0.064696653  0.311279317 1.121701    22 #> delta[13,3] -0.461782158  0.084593206 1.023530   160 #> delta[19,3] -0.326676709 -0.046647087 1.013198   240 #> delta[10,4] -0.331207996 -0.034031828 1.021771   160 #> delta[12,4] -0.212064221  0.136186306 1.007930   400 #> delta[13,4]  0.051734933  0.441539826 1.003925  2200 #>  #> $heter_prior #> [1] 0 1 1 #>  #> $SUCRA #>               mean        sd      2.5%       25%       50%       75%     97.5% #> SUCRA[1] 0.1086190 0.1345076 0.0000000 0.0000000 0.1428571 0.1428571 0.4285714 #> SUCRA[2] 0.8678571 0.2268484 0.1428571 0.8571429 1.0000000 1.0000000 1.0000000 #> SUCRA[3] 0.7284762 0.2728540 0.0000000 0.5714286 0.8571429 1.0000000 1.0000000 #> SUCRA[4] 0.4036667 0.2586346 0.0000000 0.2857143 0.4285714 0.5714286 0.8571429 #> SUCRA[5] 0.4924762 0.2692296 0.0000000 0.2857143 0.4285714 0.7142857 1.0000000 #> SUCRA[6] 0.1977143 0.1932793 0.0000000 0.0000000 0.1428571 0.2857143 0.7142857 #> SUCRA[7] 0.5739048 0.1995070 0.1428571 0.4285714 0.5714286 0.7142857 1.0000000 #> SUCRA[8] 0.6272857 0.1834664 0.2857143 0.5714286 0.5714286 0.7142857 1.0000000 #>              Rhat n.eff #> SUCRA[1] 1.071753    52 #> SUCRA[2] 1.009412   240 #> SUCRA[3] 1.020055   140 #> SUCRA[4] 1.128822    20 #> SUCRA[5] 1.076018    31 #> SUCRA[6] 1.013196   160 #> SUCRA[7] 1.018572   110 #> SUCRA[8] 1.013418   160 #>  #> $effectiveness #>                            mean         sd 2.5% 25% 50% 75% 97.5%     Rhat #> effectiveness[1,1] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[2,1] 0.6160000000 0.48643897    0   0   1   1     1 1.032788 #> effectiveness[3,1] 0.2556666667 0.43630801    0   0   0   1     1 1.037544 #> effectiveness[4,1] 0.0086666667 0.09270610    0   0   0   0     0 1.193473 #> effectiveness[5,1] 0.0340000000 0.18125935    0   0   0   0     1 1.006998 #> effectiveness[6,1] 0.0003333333 0.01825742    0   0   0   0     0 1.290904 #> effectiveness[7,1] 0.0360000000 0.18632115    0   0   0   0     1 1.129560 #> effectiveness[8,1] 0.0493333333 0.21659916    0   0   0   0     1 1.053974 #> effectiveness[1,2] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[2,2] 0.1806666667 0.38480590    0   0   0   0     1 1.018495 #> effectiveness[3,2] 0.3373333333 0.47287852    0   0   0   1     1 1.018861 #> effectiveness[4,2] 0.0786666667 0.26926268    0   0   0   0     1 1.104692 #> effectiveness[5,2] 0.1430000000 0.35013121    0   0   0   0     1 1.071213 #> effectiveness[6,2] 0.0113333333 0.10587079    0   0   0   0     0 1.015502 #> effectiveness[7,2] 0.1166666667 0.32107619    0   0   0   0     1 1.006800 #> effectiveness[8,2] 0.1323333333 0.33890929    0   0   0   0     1 1.006384 #> effectiveness[1,3] 0.0006666667 0.02581558    0   0   0   0     0 1.291460 #> effectiveness[2,3] 0.0576666667 0.23315090    0   0   0   0     1 1.019060 #> effectiveness[3,3] 0.0973333333 0.29646054    0   0   0   0     1 1.001755 #> effectiveness[4,3] 0.1316666667 0.33818439    0   0   0   0     1 1.038442 #> effectiveness[5,3] 0.1606666667 0.36728443    0   0   0   0     1 1.035081 #> effectiveness[6,3] 0.0263333333 0.16015130    0   0   0   0     1 1.003873 #> effectiveness[7,3] 0.2166666667 0.41204225    0   0   0   0     1 1.013413 #> effectiveness[8,3] 0.3090000000 0.46215819    0   0   0   1     1 1.005141 #> effectiveness[1,4] 0.0100000000 0.09951533    0   0   0   0     0 1.163612 #> effectiveness[2,4] 0.0503333333 0.21866830    0   0   0   0     1 1.056656 #> effectiveness[3,4] 0.0920000000 0.28907413    0   0   0   0     1 1.003988 #> effectiveness[4,4] 0.1253333333 0.33115169    0   0   0   0     1 1.005119 #> effectiveness[5,4] 0.1473333333 0.35449698    0   0   0   0     1 1.014136 #> effectiveness[6,4] 0.0453333333 0.20806887    0   0   0   0     1 1.028698 #> effectiveness[7,4] 0.2630000000 0.44033582    0   0   0   1     1 1.005678 #> effectiveness[8,4] 0.2666666667 0.44229036    0   0   0   1     1 1.007267 #> effectiveness[1,5] 0.0580000000 0.23378242    0   0   0   0     1 1.120241 #> effectiveness[2,5] 0.0430000000 0.20289091    0   0   0   0     1 1.031285 #> effectiveness[3,5] 0.0823333333 0.27491771    0   0   0   0     1 1.007618 #> effectiveness[4,5] 0.1860000000 0.38917154    0   0   0   0     1 1.000727 #> effectiveness[5,5] 0.1536666667 0.36068905    0   0   0   0     1 1.001095 #> effectiveness[6,5] 0.0933333333 0.29094749    0   0   0   0     1 1.015166 #> effectiveness[7,5] 0.2226666667 0.41610568    0   0   0   0     1 1.001509 #> effectiveness[8,5] 0.1610000000 0.36759222    0   0   0   0     1 1.032674 #> effectiveness[1,6] 0.1113333333 0.31459690    0   0   0   0     1 1.034793 #> effectiveness[2,6] 0.0220000000 0.14670779    0   0   0   0     0 1.006286 #> effectiveness[3,6] 0.0740000000 0.26181453    0   0   0   0     1 1.005269 #> effectiveness[4,6] 0.2290000000 0.42025929    0   0   0   0     1 1.009426 #> effectiveness[5,6] 0.1830000000 0.38673098    0   0   0   0     1 1.023330 #> effectiveness[6,6] 0.1883333333 0.39104330    0   0   0   0     1 1.005420 #> effectiveness[7,6] 0.1170000000 0.32147387    0   0   0   0     1 1.055874 #> effectiveness[8,6] 0.0753333333 0.26397244    0   0   0   0     1 1.007933 #> effectiveness[1,7] 0.3203333333 0.46668243    0   0   0   1     1 1.009181 #> effectiveness[2,7] 0.0163333333 0.12677505    0   0   0   0     0 1.020445 #> effectiveness[3,7] 0.0360000000 0.18632115    0   0   0   0     1 1.027422 #> effectiveness[4,7] 0.1173333333 0.32187071    0   0   0   0     1 1.004121 #> effectiveness[5,7] 0.1316666667 0.33818439    0   0   0   0     1 1.034420 #> effectiveness[6,7] 0.3440000000 0.47512024    0   0   0   1     1 1.006986 #> effectiveness[7,7] 0.0280000000 0.16500023    0   0   0   0     1 1.017987 #> effectiveness[8,7] 0.0063333333 0.07934306    0   0   0   0     0 1.092005 #> effectiveness[1,8] 0.4996666667 0.50008324    0   0   0   1     1 1.008255 #> effectiveness[2,8] 0.0140000000 0.11751001    0   0   0   0     0 1.077677 #> effectiveness[3,8] 0.0253333333 0.15716166    0   0   0   0     1 1.149849 #> effectiveness[4,8] 0.1233333333 0.32887425    0   0   0   0     1 1.159686 #> effectiveness[5,8] 0.0466666667 0.21095906    0   0   0   0     1 1.103354 #> effectiveness[6,8] 0.2910000000 0.45429924    0   0   0   1     1 1.013594 #> effectiveness[7,8] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[8,8] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #>                    n.eff #> effectiveness[1,1]     1 #> effectiveness[2,1]    68 #> effectiveness[3,1]    72 #> effectiveness[4,1]   220 #> effectiveness[5,1]  2000 #> effectiveness[6,1]  3000 #> effectiveness[7,1]    97 #> effectiveness[8,1]   190 #> effectiveness[1,2]     1 #> effectiveness[2,2]   180 #> effectiveness[3,2]   120 #> effectiveness[4,2]    62 #> effectiveness[5,2]    58 #> effectiveness[6,2]  2700 #> effectiveness[7,2]   670 #> effectiveness[8,2]   640 #> effectiveness[1,3]  1500 #> effectiveness[2,3]   460 #> effectiveness[3,3]  2500 #> effectiveness[4,3]   110 #> effectiveness[5,3]   110 #> effectiveness[6,3]  3000 #> effectiveness[7,3]   210 #> effectiveness[8,3]   430 #> effectiveness[1,4]   240 #> effectiveness[2,4]   170 #> effectiveness[3,4]  1300 #> effectiveness[4,4]   810 #> effectiveness[5,4]   280 #> effectiveness[6,4]   380 #> effectiveness[7,4]   420 #> effectiveness[8,4]   330 #> effectiveness[1,5]    68 #> effectiveness[2,5]   370 #> effectiveness[3,5]   810 #> effectiveness[4,5]  3000 #> effectiveness[5,5]  3000 #> effectiveness[6,5]   370 #> effectiveness[7,5]  2000 #> effectiveness[8,5]   110 #> effectiveness[1,6]   140 #> effectiveness[2,6]  3000 #> effectiveness[3,6]  1300 #> effectiveness[4,6]   290 #> effectiveness[5,6]   140 #> effectiveness[6,6]   560 #> effectiveness[7,6]    86 #> effectiveness[8,6]   850 #> effectiveness[1,7]   240 #> effectiveness[2,7]  1400 #> effectiveness[3,7]   500 #> effectiveness[4,7]  1000 #> effectiveness[5,7]   120 #> effectiveness[6,7]   310 #> effectiveness[7,7]   970 #> effectiveness[8,7]   750 #> effectiveness[1,8]   260 #> effectiveness[2,8]   420 #> effectiveness[3,8]   110 #> effectiveness[4,8]    29 #> effectiveness[5,8]    97 #> effectiveness[6,8]   180 #> effectiveness[7,8]     1 #> effectiveness[8,8]     1 #>  #> $abs_risk #>                  mean         sd       2.5%       25%       50%       75% #> abs_risk[1] 0.3916667 0.00000000 0.39166667 0.3916667 0.3916667 0.3916667 #> abs_risk[2] 0.2094462 0.08428183 0.09419037 0.1503360 0.1906315 0.2546901 #> abs_risk[3] 0.2521040 0.08293613 0.12165702 0.1893758 0.2423708 0.3039343 #> abs_risk[4] 0.3270204 0.06814289 0.21917722 0.2763813 0.3164323 0.3664006 #> abs_risk[5] 0.3105189 0.06132534 0.20644989 0.2660870 0.3028923 0.3537906 #> abs_risk[6] 0.3731931 0.06440514 0.25638881 0.3276698 0.3689542 0.4139974 #> abs_risk[7] 0.2925735 0.03654944 0.22736929 0.2655936 0.2905543 0.3188676 #> abs_risk[8] 0.2828849 0.03250178 0.21973271 0.2613686 0.2829853 0.3048026 #>                 97.5%     Rhat n.eff #> abs_risk[1] 0.3916667 1.000000     1 #> abs_risk[2] 0.4088038 1.027859    82 #> abs_risk[3] 0.4298037 1.017557   240 #> abs_risk[4] 0.4775315 1.145751    19 #> abs_risk[5] 0.4352969 1.112599    23 #> abs_risk[6] 0.5161538 1.005226  1600 #> abs_risk[7] 0.3650653 1.011139   220 #> abs_risk[8] 0.3447898 1.022056   130 #>  #> $base_risk #> [1] 0.3916667 #>  #> attr(,\"class\") #> [1] \"run_model\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the node-splitting approach — run_nodesplit","title":"Perform the node-splitting approach — run_nodesplit","text":"Performs Bayesian node-splitting approach Dias et al. (2010)   extended address aggregate binary continuous missing participant   outcome data via pattern-mixture model (Spineli et al., 2021;   Spineli, 2019). model offers local evaluation   plausibility consistency assumption network   (Dias et al., 2010).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the node-splitting approach — run_nodesplit","text":"","code":"run_nodesplit(full, n_chains, n_iter, n_burnin, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the node-splitting approach — run_nodesplit","text":"full object S3 class run_model. See 'Value' run_model. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the node-splitting approach — run_nodesplit","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic   following monitored parameters: direct summary effect measure (according argument   measure defined run_model) split node based   corresponding trials. indirect indirect summary effect measure (according   argument measure defined run_model) split   node based remaining network removing (splitting)   corresponding node. diff inconsistency parameter split node defined   difference direct indirect effect corresponding   split node. tau -trial standard deviation split node,   random-effects model specified. Furthermore, output includes following element: model_assessment data-frame measures model assessment   split node: deviance information criterion,   total residual deviance, number effective parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the node-splitting approach — run_nodesplit","text":"run_nodesplit inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, ref, indic   run_model (now contained argument full).   prevents specifying different Bayesian model considered   run_model. Therefore, user needs first apply   run_model, use run_nodesplit   (see 'Examples'). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_nodesplit   currently performs node-splitting using odds ratio effect measure   base-case effect measure run_model   binary outcome (see also 'Details' run_model). perform Bayesian node-splitting approach,   prepare_nodesplit function called contains   WinBUGS code written Dias et al. (2010) binomial normal   likelihood analyse binary continuous outcome data, respectively.   prepare_nodesplit extended incorporate   pattern-mixture model informative missingness parameters binary   continuous outcome data (see 'Details' run_model). run_nodesplit runs Bayesian node-splitting approach   JAGS. progress simulation appears R console.   number times run_nodesplit used appears R console   text red equals number split nodes (see 'Examples').   split nodes network, execution function   stopped error message printed R console.   model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. run_nodesplit uses   mtc.nodesplit.comparisons   function R-package   gemtc   obtain automatically nodes split based decision rule   van Valkenhoef et al. (2016).   run_nodesplit uses option (1) van Valkenhoef et al. (2016)   parameterise multi-arm trials contain node--split.   contrast,   mtc.nodesplit.comparisons   uses option (3) van Valkenhoef et al. (2016).   Option (1) keeps baseline arm node--split corresponding   multi-arms. Option (3) excludes arms node--split   corresponding multi-arm trials. output run_nodesplit end-user-ready.   nodesplit_plot function inherits output   run_nodesplit S3 object processes provide   end-user-ready output. run_nodesplit can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform the node-splitting approach — run_nodesplit","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y van Valkenhoef G, Dias S, Ades AE, Welton NJ. Automated generation node-splitting models assessment inconsistency network meta-analysis. Res Synth Methods 2016;7(1):80--93. doi: 10.1002/jrsm.1167","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform the node-splitting approach — run_nodesplit","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the node-splitting approach — run_nodesplit","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # \\donttest{ # Run random-effects node-splitting approach # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_nodesplit(full = res,               n_chains = 3,               n_iter = 1000,               n_burnin = 100,               n_thin = 1) #> JAGS generates initial values for the parameters. #> 1 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 1 until convergence #> 2 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 2 until convergence #> 3 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 3 until convergence #> 4 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 4 until convergence #> 5 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 5 until convergence #> 6 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 6 until convergence #> 7 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 7 until convergence #> 8 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2530 #>  #> Initializing model #>  #> Updating model for split node 8 until convergence #> $direct #>   treat1 treat2       mean        sd       2.5%       97.5%     Rhat n.eff #> 1      6      1 -0.4118009 0.2379709 -0.9367185  0.07538669 1.053771    96 #> 2      7      1 -0.4977904 0.2472717 -1.2173362 -0.11976094 1.963469     5 #> 3      8      1 -0.3068949 0.1637373 -0.7229880 -0.06945310 1.324814    10 #> 4      5      4 -0.1662375 0.2009210 -0.5967559  0.22658327 1.004724   480 #> 5      7      4 -0.5620111 0.2423137 -1.0485343 -0.06154875 1.040517    58 #> 6      7      5 -0.3882015 0.2394913 -0.8650817  0.06477497 1.031592    93 #> 7      8      6 -1.6979965 0.8156387 -3.2673145 -0.27788530 1.059618    40 #> 8      8      7 -0.8828357 0.3495282 -1.5638817 -0.20704741 1.315256    11 #>  #> $indirect #>   treat1 treat2        mean        sd       2.5%      97.5%     Rhat n.eff #> 1      6      1  1.23680347 0.8128773 -0.4118940  2.6294910 1.377411     9 #> 2      7      1  0.23449328 0.6197991 -0.9729792  1.4340783 1.359914     9 #> 3      8      1 -0.99428942 0.4215193 -1.9193491 -0.3047727 1.291854    11 #> 4      5      4 -0.52323992 0.5113064 -1.5678527  0.4247992 1.028821   140 #> 5      7      4 -0.20038920 0.2089812 -0.5954085  0.2271275 1.103734    24 #> 6      7      5 -0.29177040 0.3393078 -1.0204228  0.3305946 1.078478    46 #> 7      8      6 -0.08636863 0.2090346 -0.5117019  0.3241281 1.008156   300 #> 8      8      7 -0.06674555 0.1877759 -0.4885816  0.2791635 1.031403    73 #>  #> $diff #>   treat1 treat2        mean        sd        2.5%       97.5%     Rhat n.eff #> 1      6      1 -1.64860435 0.8538752 -3.16060542  0.15578772 1.376179     9 #> 2      7      1 -0.73228368 0.7170582 -2.23528898  0.46806632 1.791653     6 #> 3      8      1  0.68739455 0.3944100 -0.05223545  1.53969276 1.170643    23 #> 4      5      4  0.35700242 0.5288460 -0.63320914  1.43920320 1.041657   110 #> 5      7      4 -0.36162191 0.3324475 -0.98086211  0.27016685 1.004146   550 #> 6      7      5 -0.09643106 0.4491935 -0.94550295  0.80532198 1.034079   170 #> 7      8      6 -1.61162792 0.8366833 -3.15339847 -0.10883549 1.050049    46 #> 8      8      7 -0.81609012 0.4330921 -1.65800685  0.08428173 1.287608    11 #>  #> $tau #>   treat1 treat2        50%         sd         2.5%     97.5%     Rhat n.eff #> 1      6      1 0.15231074 0.10608094 0.0076732407 0.3892762 1.244054    15 #> 2      7      1 0.06869423 0.09087569 0.0005481785 0.3072761 2.211114     5 #> 3      8      1 0.09088988 0.10220045 0.0003085378 0.3336325 2.953375     4 #> 4      5      4 0.10292000 0.10374351 0.0066007311 0.3792919 1.036409   190 #> 5      7      4 0.10942186 0.08057161 0.0251331578 0.3269146 1.191910    15 #> 6      7      5 0.16560856 0.10099800 0.0483893615 0.4205952 1.049133    53 #> 7      8      6 0.14441903 0.08720261 0.0254429917 0.3566555 1.025982   130 #> 8      8      7 0.10423762 0.09375392 0.0116255152 0.3571677 1.002642  1900 #>  #> $model #> [1] \"RE\" #>  #> $model_assessment #>   treat1 treat2 deviance      DIC       pD #> 1      6      1 53.55050 90.14570 36.59520 #> 2      7      1 55.48235 90.04201 34.55966 #> 3      8      1 53.93050 88.96305 35.03255 #> 4      5      4 53.12954 91.44609 38.31654 #> 5      7      4 53.19020 89.87446 36.68426 #> 6      7      5 52.98297 92.25532 39.27236 #> 7      8      6 53.05971 89.45791 36.39820 #> 8      8      7 54.73180 91.81966 37.08785 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> attr(,\"class\") #> [1] \"run_nodesplit\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Performs sensitivity analysis applying pairwise   meta-analysis network meta-analysis series different scenarios   informative missingness parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"","code":"run_sensitivity(   full,   assumption,   mean_scenarios,   var_misspar,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"full object S3 class run_model. See 'Value' run_model. assumption Character string indicating structure informative missingness parameter. Set assumption equal one following two: \"HIE-ARM\", \"IDE-ARM\" (see 'Details'). default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\" stand identical, hierarchical, respectively. mean_scenarios vector numeric values mean normal distribution informative missingness parameter (see 'Details'). vector length equal 5 larger. missing--random (MAR) assumption median vector, number informative scenarios appear MAR. default scenarios c(-log(3), -log(2), log(0.9999), log(2), log(3)) c(-2, -1, 0, 1, 2) binary continuous outcome data, respectively. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure (defined run_model) \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\", default argument 0.04. n_chains Integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"list R2jags outputs summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   random-effects pairwise meta-analysis: EM estimated summary effect measure (according    argument measure defined run_model). EM_LOR estimated summary odd ratio logarithmic scale   measure = \"RR\" measure = \"RD\". tau -trial standard deviation. element    appear case fixed-effect pairwise meta-analysis. random-effects network meta-analysis, EM refer possible   pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"model runs JAGS progress simulation   appears R console. number times run_sensitivity   used appears R console text red equals   number scenarios defined square length   vector specified mean_scenarios (see 'Examples').   output run_sensitivity used S3 object   functions package processed provide   end-user-ready output. case pairwise meta-analysis, EM tau   estimated many times number scenarios considered.   case network meta-analysis, possible pairwise comparison   estimated many times number scenarios considered. informative missingness parameter assumed differ across   interventions dataset. Therefore, user can specify   informative missingness parameter arm-specific identical   (assumption = \"IDE-ARM\"), arm-specific   hierarchical (assumption = \"HIE-ARM\") (Spineli et al., 2021). length vector specified argument mean_scenarios   equal 5 (positive odd integer) allow   adequate number scenarios. important number   corresponding MAR assumption middle numbers   vector specified argument mean_scenarios. MAR   assumption constitutes primary analysis.   informative missingness difference means parameter (relevant   raw standardised mean diffenre), MAR assumption equals 0.   informative missingness odds ratio parameter (IMOR; relevant   odds ratio) informative missingness ratio means (IMRoM;   relevant ratio means) parameter, MAR assumption equals 1;   however, parameters analysed logarithmic scale. advise   using value 0.999 rather 1 mean_scenarios   IMOR IMRoM parameters; otherwise, execution function   stopped error 'Invalid parent values' printed   R console. Currently, empirically-based prior distributions   informative missingness parameters. users may refer Spineli (2019),   Mavridis et al. (2015), Turner et al. (2015), White et al. (2008)   determine mean_scenarios informative missingness mechanism   select proper value var_misspar. run_sensitivity inherits arguments data,   measure, model, heter_prior, D, indic,   base_risk, ref run_model   (now contained argument full). prevents specifying   different Bayesian model considered primary analysis   (via run_model)--exception assumption   argument restricted two character strings. Therefore,   user needs first apply run_model, use   run_sensitivity (see 'Examples'). run_sensitivity function also returns arguments   measure, scenarios, D, heter, n_chains,   n_iter, n_burnin, n_thin specified user   inherited relevant functions package. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. run_sensitivity can used missing participant   outcome data extracted least one trial. Otherwise,   execution function stopped error message   printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_taylor.rds', package = 'rnmamod'))  # \\donttest{ # Perform the sensitivity analysis (default arguments) # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_sensitivity(full = res,                 assumption = \"IDE-ARM\",                 var_misspar = 1,                 n_chains = 3,                 n_iter = 1000,                 n_burnin = 100,                 n_thin = 5) #> The default scenarios were considered: c(-2, -1, 0, 1, 2). #> JAGS generates initial values for the parameters. #> 1 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 1 until convergence #> 2 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 2 until convergence #> 3 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 3 until convergence #> 4 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 4 until convergence #> 5 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 5 until convergence #> 6 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 6 until convergence #> 7 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 7 until convergence #> 8 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 8 until convergence #> 9 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 9 until convergence #> 10 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 10 until convergence #> 11 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 11 until convergence #> 12 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 12 until convergence #> 13 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 13 until convergence #> 14 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 14 until convergence #> 15 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 15 until convergence #> 16 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 16 until convergence #> 17 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 17 until convergence #> 18 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 18 until convergence #> 19 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 19 until convergence #> 20 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 20 until convergence #> 21 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 21 until convergence #> 22 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 22 until convergence #> 23 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 23 until convergence #> 24 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 24 until convergence #> 25 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 25 until convergence #> $EM #>               mean        sd       2.5%        25%          50%          75% #>  [1,] -0.126868061 0.2483807 -0.5874043 -0.2914170 -0.126838836  0.028910852 #>  [2,] -0.156652587 0.2731867 -0.6559197 -0.3239737 -0.160249946 -0.005865364 #>  [3,] -0.147190724 0.2632825 -0.6734893 -0.3040218 -0.145639931  0.002315553 #>  [4,] -0.137366563 0.2639888 -0.7076403 -0.2893586 -0.133342071  0.013455758 #>  [5,] -0.147448979 0.2922438 -0.7382995 -0.3098753 -0.144530869  0.015784605 #>  [6,] -0.098134663 0.2248005 -0.5198390 -0.2504843 -0.108809156  0.052290042 #>  [7,] -0.110566343 0.2345203 -0.5568618 -0.2606091 -0.110675518  0.031001067 #>  [8,] -0.112632147 0.2653473 -0.6052136 -0.2742903 -0.109498125  0.046252995 #>  [9,] -0.140513406 0.2459981 -0.5810040 -0.3110653 -0.139159368  0.002565925 #> [10,] -0.147281770 0.2229947 -0.6308304 -0.2889199 -0.140972290 -0.004898091 #> [11,] -0.088647698 0.2488149 -0.5480487 -0.2466818 -0.092662356  0.050842782 #> [12,] -0.081998377 0.2419031 -0.5559767 -0.2379612 -0.058857984  0.079118319 #> [13,] -0.094144487 0.2545997 -0.5618141 -0.2411930 -0.103693857  0.049077535 #> [14,] -0.122279296 0.2684896 -0.5976421 -0.2964534 -0.116124525  0.055219629 #> [15,] -0.107711301 0.2546929 -0.5960821 -0.2554727 -0.096433774  0.060240961 #> [16,] -0.028219597 0.2572366 -0.5729169 -0.1714281 -0.016086579  0.126579659 #> [17,] -0.030531502 0.2662812 -0.5391686 -0.1844322 -0.029688490  0.140821669 #> [18,] -0.072805625 0.2511698 -0.5766781 -0.2211247 -0.074620229  0.080415044 #> [19,] -0.094105355 0.2532346 -0.6045385 -0.2450031 -0.090793522  0.040551730 #> [20,] -0.101284999 0.2908543 -0.6086152 -0.2724504 -0.113622017  0.057569343 #> [21,]  0.003687165 0.2598106 -0.4690264 -0.1390402 -0.003532221  0.151666347 #> [22,]  0.017375064 0.2557016 -0.4389851 -0.1561326  0.007207158  0.190169603 #> [23,] -0.042890357 0.2362887 -0.5309148 -0.1847718 -0.049623302  0.104154183 #> [24,] -0.087606028 0.2343723 -0.5770373 -0.2385587 -0.089281046  0.052084404 #> [25,] -0.102180486 0.2310989 -0.5356530 -0.2615373 -0.090591671  0.060187260 #>           97.5%      Rhat n.eff #>  [1,] 0.3612938 1.0086206   600 #>  [2,] 0.4146834 1.0091545   310 #>  [3,] 0.3895244 1.0101417   600 #>  [4,] 0.3625747 1.0039228   590 #>  [5,] 0.4513369 1.0062037   600 #>  [6,] 0.3409378 1.0203528    97 #>  [7,] 0.3649391 1.0027477   600 #>  [8,] 0.3513826 1.0078006   600 #>  [9,] 0.3910688 1.0199430   130 #> [10,] 0.2644625 1.0096875   250 #> [11,] 0.3935290 1.0192568   180 #> [12,] 0.3418544 1.0091487   240 #> [13,] 0.4063994 1.0036813   600 #> [14,] 0.3533458 1.0030554   600 #> [15,] 0.3526535 1.0041928   390 #> [16,] 0.4599752 1.0066982   320 #> [17,] 0.4537877 1.0161145   260 #> [18,] 0.4294313 1.0016274   600 #> [19,] 0.3838061 0.9992933   600 #> [20,] 0.4547121 1.0108344   370 #> [21,] 0.5185603 1.0179995   600 #> [22,] 0.5111636 1.0016699   600 #> [23,] 0.4290211 1.0076891   430 #> [24,] 0.3729560 1.0075155   500 #> [25,] 0.3352876 1.0100016   220 #>  #> $tau #>            mean        sd        2.5%        25%       50%       75%     97.5% #>  [1,] 0.2353274 0.2393375 0.012379643 0.08622826 0.1772553 0.3069768 0.8514724 #>  [2,] 0.2702278 0.2352457 0.015966882 0.10474786 0.2090684 0.3708562 0.8520584 #>  [3,] 0.2475160 0.2500663 0.009594359 0.08381794 0.1826293 0.3413602 0.7477012 #>  [4,] 0.2585011 0.2359767 0.013225225 0.08850714 0.1996518 0.3600033 0.8707806 #>  [5,] 0.3022205 0.2900896 0.021495693 0.11298631 0.2248686 0.3954077 1.0142296 #>  [6,] 0.2200616 0.2073074 0.007043508 0.07617129 0.1690944 0.2886187 0.7176699 #>  [7,] 0.2171498 0.1879602 0.012094637 0.07811882 0.1669114 0.3002449 0.7133262 #>  [8,] 0.2405239 0.2385161 0.011224803 0.08770636 0.1701764 0.3214205 0.8223803 #>  [9,] 0.2508116 0.2284168 0.012999969 0.09927421 0.1956019 0.3288813 0.8527621 #> [10,] 0.2102437 0.1931612 0.011693555 0.06725771 0.1579977 0.2971573 0.6721487 #> [11,] 0.2142818 0.1990255 0.015500232 0.08352856 0.1594617 0.2740434 0.7148224 #> [12,] 0.2224845 0.1893000 0.009521880 0.08480907 0.1782677 0.3117029 0.6975844 #> [13,] 0.2426882 0.2280687 0.014539442 0.08822304 0.1878094 0.3143724 0.8036938 #> [14,] 0.2259916 0.2333470 0.008933877 0.07240211 0.1646009 0.2981061 0.8172443 #> [15,] 0.2613757 0.2566222 0.018794676 0.09545860 0.1909491 0.3384522 0.9039183 #> [16,] 0.2520568 0.2221634 0.008586992 0.09733473 0.1885281 0.3313080 0.8459220 #> [17,] 0.2337712 0.2243652 0.010885164 0.07370715 0.1736608 0.3086304 0.8516948 #> [18,] 0.2289584 0.2212926 0.004446070 0.07699892 0.1784542 0.3149394 0.8368228 #> [19,] 0.2371755 0.2153407 0.026806142 0.09681053 0.1878187 0.3052490 0.8283111 #> [20,] 0.2555035 0.2329203 0.018399284 0.10474883 0.1883110 0.3432139 0.8288999 #> [21,] 0.2353204 0.2027090 0.017396713 0.09654750 0.1863620 0.3348966 0.6769980 #> [22,] 0.2312851 0.2096131 0.014645088 0.08072063 0.1714076 0.3189449 0.7624886 #> [23,] 0.2164837 0.1981168 0.018658853 0.07697346 0.1614202 0.2841582 0.7500869 #> [24,] 0.2335187 0.2223538 0.012106704 0.08949196 0.1715633 0.3057768 0.8380116 #> [25,] 0.2175742 0.2076305 0.011591307 0.08360004 0.1679920 0.2881772 0.7027327 #>           Rhat n.eff #>  [1,] 1.042887    84 #>  [2,] 1.004608   600 #>  [3,] 1.047657   180 #>  [4,] 1.006899   580 #>  [5,] 1.015582   210 #>  [6,] 1.031163   120 #>  [7,] 1.031388   100 #>  [8,] 1.017141   470 #>  [9,] 1.083574    53 #> [10,] 1.016063   160 #> [11,] 1.008694   230 #> [12,] 1.002295   600 #> [13,] 1.006042   380 #> [14,] 1.069196   130 #> [15,] 1.019773   410 #> [16,] 1.035124   230 #> [17,] 1.079036    65 #> [18,] 1.002449   600 #> [19,] 1.020792    94 #> [20,] 1.027202   100 #> [21,] 1.021312   220 #> [22,] 1.093949    30 #> [23,] 1.003992   400 #> [24,] 1.056357    59 #> [25,] 1.025507   150 #>  #> $measure #> [1] \"SMD\" #>  #> $model #> [1] \"RE\" #>  #> $scenarios #> [1] -2 -1  0  1  2 #>  #> $D #> [1] 0 #>  #> $heter #> [1] -2.9900000  0.2143347  4.0000000 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 5 #>  #> attr(,\"class\") #> [1] \"run_sensitivity\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Performs Bayesian pairwise meta-analysis pairwise   comparison least two trials network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"","code":"run_series_meta(full, n_chains, n_iter, n_burnin, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"full object S3 class run_model. See 'Value' run_model. n_chains Integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic (Gelman et al., 1992)   following monitored parameters: EM summary effect estimate (according argument   measure defined run_model) observed   pairwise comparison least two trials network. tau -trial standard deviation pairwise comparisons   least two trials, random-effects model   specified. single binary vector indicates comparisons EM   one trial.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"run_series_meta inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar run_model   (now contained argument full). prevents specifying   different Bayesian model considered run_model.   Therefore, user needs first apply run_model,   use run_series_meta (see 'Examples'). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_series_meta   currently performs series pairwise meta-analysis using odds ratio   effect measure base-case effect measure   run_model binary outcome (see also 'Details'   run_model). run_series_meta runs series Bayesian pairwise meta-analyses   JAGS. progress simulation appears R console.   number times function used also printed console   (red) equal number  observed pairwise comparisons   network (see 'Examples').   model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. output run_series_meta end-user-ready.   series_meta_plot function inherits output   run_series_meta S3 object processes provide   end-user-ready output. run_series_meta can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"","code":"data(\"nma.dogliotti2014\")  # Show the first six trials of the dataset (one-trial-per-row format) head(nma.dogliotti2014) #>              study t1 t2 t3   r1   r2 r3  m1  m2 m3   n1   n2 n3 #> 1     BAATAF, 1990  1  7 NA  195  188 NA   0  21 NA  208  212 NA #> 2     SPINAF, 1992  1  7 NA  186  172 NA  56  81 NA  265  260 NA #> 3    SPAF-II, 1994  2  7 NA  480  478 NA  23  38 NA  545  555 NA #> 4      PATAF, 1999  2  7 NA  243   86 NA  54  42 NA  319  131 NA #> 5 ACTIVE (W), 2006  3  7 NA 2825 3089 NA 410 223 NA 3335 3371 NA #> 6       JAST, 2006  1  2 NA  338  313 NA  89  96 NA  445  426 NA  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_dogliotti.rds', package = 'rnmamod'))  # \\donttest{ # Run separate random-effects pairwise meta-analyses # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_series_meta(full = res,                 n_chains = 3,                 n_iter = 1000,                 n_burnin = 100,                 n_thin = 1) #> JAGS generates initial values for the parameters. #> 1 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 20 #>    Unobserved stochastic nodes: 29 #>    Total graph size: 524 #>  #> Initializing model #>  #> 2 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 28 #>    Unobserved stochastic nodes: 37 #>    Total graph size: 691 #>  #> Initializing model #>  #> 3 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 4 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 25 #>    Total graph size: 439 #>  #> Initializing model #>  #> 5 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 6 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 7 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 8 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 9 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 10 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 11 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> $EM #>    t1 t2        mean        sd       2.5%          25%        50%        75% #> 1   1  7  1.07435942 0.4225728  0.1908003  0.825684780  1.0855737 1.32852476 #> 2   2  7  0.49339142 0.3933828 -0.2350171  0.247772290  0.4840687 0.73271646 #> 3   3  7  0.59255196 1.0194737 -1.6256883  0.146065998  0.5898692 1.04431752 #> 4   1  2  0.31470548 0.3387399 -0.3553844  0.147432556  0.3375924 0.49003679 #> 5   2  3  0.22584303 1.0525784 -2.0029752 -0.229899536  0.2363024 0.68540838 #> 6   6  7 -0.31204548 1.0440969 -2.5822164 -0.779438100 -0.2901354 0.15748372 #> 7   7  8  0.21082354 1.0213368 -2.1169948 -0.172224365  0.2410750 0.60651192 #> 8   2  8  0.86021542 1.0312711 -1.3798313  0.403962789  0.8522035 1.33914548 #> 9   4  5  0.46583756 1.0465919 -1.5883397 -0.005769575  0.4201799 0.91493011 #> 10  4  7 -0.03127464 1.1677871 -2.5936385 -0.514062142 -0.0169997 0.47707162 #> 11  5  7 -0.43976076 1.0767970 -2.7949274 -0.883154650 -0.4250969 0.02622599 #>        97.5%     Rhat n.eff #> 1  1.8707997 1.005263  3000 #> 2  1.2823531 1.001505  3000 #> 3  2.8913665 1.011718   520 #> 4  0.9211496 1.020383   620 #> 5  2.4754185 1.000990  3000 #> 6  1.9192986 1.022243   260 #> 7  2.3415416 1.000716  3000 #> 8  3.1295341 1.001679  1700 #> 9  2.7068946 1.006417   340 #> 10 2.3814411 1.004239   620 #> 11 1.7966252 1.019114   150 #>  #> $tau #>   t1 t2      mean        sd       2.5%        25%       50%       75%    97.5% #> 1  1  7 0.5369812 0.3448601 0.06964326 0.29742586 0.4661884 0.7015477 1.384701 #> 2  2  7 0.5648137 0.3058117 0.10248969 0.34933906 0.5225308 0.7244992 1.309759 #> 4  1  2 0.3242584 0.3611793 0.00911983 0.09605763 0.2204857 0.4022948 1.496898 #>       Rhat n.eff #> 1 1.014544   750 #> 2 1.035286   170 #> 4 1.066431    49 #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $single #>  [1] 0 0 1 0 1 1 1 1 1 1 1 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> attr(,\"class\") #> [1] \"run_series_meta\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the unrelated mean effects model — run_ume","title":"Perform the unrelated mean effects model — run_ume","text":"Performs unrelated mean effects model Dias et al. (2013)   refined (Spineli, 2021) extended address aggregate   binary continuous missing participant outcome data via   pattern-mixture model (Spineli et al. 2021; Spineli, 2019). model   offers global evaluation plausibility consistency   assumption network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the unrelated mean effects model — run_ume","text":"","code":"run_ume(full, n_iter, n_burnin, n_chains, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the unrelated mean effects model — run_ume","text":"full object S3 class run_model. See 'Value' run_model. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the unrelated mean effects model — run_ume","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic (Gelman et al., 1992)   following monitored parameters: EM summary effect estimate (according argument   measure defined run_model) pairwise   comparison observed network. dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. tau -trial standard deviation (assumed common across   observed pairwise comparisons) whole network, random-effects   model specified. m_tau -trial standard deviation (assumed common   across observed pairwise comparisons) subset multi-arm   trials, random-effects model specified. output also includes following elements: leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. Furthermore, run_ume returns character vector pairwise   comparisons observed network, obs_comp, character   vector comparisons non-baseline interventions observed   multi-arm trials , frail_comp. vectors used  ume_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the unrelated mean effects model — run_ume","text":"run_ume inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, ref   run_model.   prevents specifying different Bayesian model considered   run_model.Therefore, user needs first apply   run_model, use run_ume (see 'Examples'). run_ume function also returns arguments data,   model, measure, assumption, n_chains,   n_iter, n_burnin, n_thin specified user   inherited relevant functions package. Initially, run_ume calls improved_ume function   identify frail comparisons, , comparisons   non-baseline interventions multi-arm trials investigated   two-arm multi-arm trial network (Spineli, 2021). 'original'   model Dias et al. (2013) omits frail comparisons estimation   process. Consequently, number estimated summary effects less   obtained performing separate pairwise meta-analyses   (see run_series_meta). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_ume currently   considers odds ratio effect measure base-case   effect measure run_model binary outcome   (see also 'Details' run_model). run_ume calls prepare_ume function contains   WinBUGS code written Dias et al. (2013) binomial normal   likelihood analyse binary continuous outcome data, respectively.   prepare_ume extended incorporate   pattern-mixture model informative missingness parameters binary   continuous outcome data (see 'Details' run_model).   prepare_ume also refined account   multi-arm trials assigning conditional univariate normal distributions   underlying trial-specific effect size comparisons   baseline arm multi-arm trial (Spineli, 2021). run_ume runs Bayesian unrelated mean effects model JAGS.   progress simulation appears R console. model   updated convergence using autojags   function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. output run_ume end-user-ready.   ume_plot function uses output run_ume S3   object processes provide end-user-ready output. run_ume can used network interventions. case   two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform the unrelated mean effects model — run_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM. Revised Framework Evaluate Consistency Assumption Globally Network Interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform the unrelated mean effects model — run_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the unrelated mean effects model — run_ume","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # \\donttest{ # Run random-effects unrelated mean effects model # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_ume(full = res,         n_chains = 3,         n_iter = 1000,         n_burnin = 100,         n_thin = 1) #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 59 #>    Unobserved stochastic nodes: 80 #>    Total graph size: 1291 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>               mean        sd       2.5%        25%        50%         75% #> EM[2,1]  0.5966885 0.8342222 -1.0994215  0.1569220  0.5945228  1.05122744 #> EM[3,1]  0.2304546 0.7113043 -1.2355160 -0.1763918  0.2247365  0.65396064 #> EM[4,1]  0.8338454 0.5659844 -0.3553165  0.4926443  0.8679732  1.22794589 #> EM[5,1]  1.9537071 0.7891748  0.4253632  1.4097994  1.9601821  2.50630471 #> EM[4,2] -0.4746563 1.0085621 -2.5602172 -1.0607855 -0.4176659  0.09031537 #> EM[6,2] -1.2885208 1.1526491 -3.6531767 -1.9960014 -1.2934126 -0.57287953 #> EM[4,3]  1.1880354 0.9397013 -0.7466540  0.6703262  1.2081067  1.70459760 #> EM[5,4] -0.7504635 1.4555264 -3.9071829 -1.7972332 -0.5663716  0.25938551 #>            97.5%     Rhat n.eff #> EM[2,1] 2.297911 1.005960  3000 #> EM[3,1] 1.619610 1.007649   460 #> EM[4,1] 1.860852 1.036058    61 #> EM[5,1] 3.398116 1.020633   120 #> EM[4,2] 1.517655 1.002253  1100 #> EM[6,2] 1.015504 1.009320   340 #> EM[4,3] 3.077021 1.011269   470 #> EM[5,4] 1.756041 1.037026    74 #>  #> $dev_o #>                    mean         sd         2.5%        25%       50% #> dev.o[1,1]  0.976959727 1.33873878 0.0007010644 0.09913790 0.4634169 #> dev.o[2,1]  0.841933929 1.17895429 0.0008668805 0.08808460 0.4034739 #> dev.o[3,1]  1.124782071 1.49645439 0.0010866462 0.11264729 0.5046061 #> dev.o[4,1]  1.005666777 1.41520570 0.0010088342 0.09488830 0.4518879 #> dev.o[5,1]  0.958727227 1.40689517 0.0009685106 0.10123914 0.4434823 #> dev.o[6,1]  1.116963315 1.49075461 0.0011118169 0.12954707 0.5418241 #> dev.o[7,1]  1.060789276 1.39478494 0.0011421647 0.12219928 0.5089456 #> dev.o[8,1]  0.004549947 0.04513835 0.0000000000 0.00000000 0.0000000 #> dev.o[9,1]  0.825071794 1.14343064 0.0005893364 0.08827685 0.3972898 #> dev.o[10,1] 1.091084148 1.38624941 0.0014840765 0.12967395 0.5448985 #> dev.o[11,1] 0.743251787 1.02815941 0.0005762650 0.07156105 0.3549021 #> dev.o[1,2]  1.016819538 1.44417075 0.0010147430 0.11182901 0.4702504 #> dev.o[2,2]  1.125121403 1.46434446 0.0011694425 0.12458716 0.5533803 #> dev.o[3,2]  1.140564021 1.58545175 0.0011604765 0.12366243 0.5245611 #> dev.o[4,2]  0.985637634 1.40007442 0.0008816534 0.10077529 0.4321237 #> dev.o[5,2]  1.042813817 1.50407412 0.0009334041 0.10488314 0.4453120 #> dev.o[6,2]  1.331656521 1.60781417 0.0017094019 0.19729038 0.7591602 #> dev.o[7,2]  0.836841391 1.21279298 0.0007982162 0.08123854 0.3669786 #> dev.o[8,2]  0.010579408 0.13177468 0.0000000000 0.00000000 0.0000000 #> dev.o[9,2]  1.065315488 1.49604865 0.0011738714 0.10958637 0.4741480 #> dev.o[10,2] 1.384706597 1.69192787 0.0017876939 0.17855494 0.7383296 #> dev.o[11,2] 1.109070618 1.55812964 0.0009797543 0.11765442 0.5144245 #> dev.o[9,3]  1.113379811 1.54224879 0.0013741441 0.11626973 0.5278750 #> dev.o[10,3] 0.898685123 1.25842976 0.0008391889 0.08826259 0.4245276 #> dev.o[11,3] 0.947384388 1.32933954 0.0014770029 0.09935093 0.4077821 #>                      75%      97.5%     Rhat n.eff #> dev.o[1,1]  1.318853e+00 4.87956980 1.001971  1400 #> dev.o[2,1]  1.140005e+00 4.16941155 1.002615   950 #> dev.o[3,1]  1.546504e+00 5.41738612 1.004698   630 #> dev.o[4,1]  1.346898e+00 5.02815344 1.001076  3000 #> dev.o[5,1]  1.252319e+00 4.78899808 1.001296  3000 #> dev.o[6,1]  1.505215e+00 5.43816063 1.001776  1800 #> dev.o[7,1]  1.467946e+00 4.91971813 1.002086  1300 #> dev.o[8,1]  3.197442e-14 0.01194100 1.001845  3000 #> dev.o[9,1]  1.093501e+00 3.97374188 1.000551  3000 #> dev.o[10,1] 1.556344e+00 4.83462541 1.003914   590 #> dev.o[11,1] 9.869966e-01 3.83590301 1.012787   160 #> dev.o[1,2]  1.380173e+00 4.86271731 1.001928  1400 #> dev.o[2,2]  1.563192e+00 5.23160029 1.001094  3000 #> dev.o[3,2]  1.519281e+00 5.61726807 1.001422  2200 #> dev.o[4,2]  1.296707e+00 5.10096096 1.000798  3000 #> dev.o[5,2]  1.381207e+00 5.40851926 1.001906  1400 #> dev.o[6,2]  1.880094e+00 5.85242042 1.015107   170 #> dev.o[7,2]  1.055929e+00 4.56899040 1.007833  3000 #> dev.o[8,2]  6.661338e-14 0.02296173 1.034488  3000 #> dev.o[9,2]  1.399660e+00 5.20042788 1.001800  1500 #> dev.o[10,2] 1.968092e+00 6.12868583 1.001425  2200 #> dev.o[11,2] 1.424576e+00 5.62691224 1.006794   480 #> dev.o[9,3]  1.489340e+00 5.42249494 1.001592  1800 #> dev.o[10,3] 1.168885e+00 4.58814855 1.003838   600 #> dev.o[11,3] 1.241395e+00 4.63090286 1.005051   800 #>  #> $hat_par #>                    mean         sd       2.5%       25%       50%       75% #> hat.par[1,1]  26.820064 4.55336501 18.8731812 23.612983 26.566530 29.837952 #> hat.par[2,1]   2.778605 1.28778624  0.7909060  1.823799  2.606373  3.530044 #> hat.par[3,1]   9.905309 1.27641179  6.9938513  9.110023 10.094598 10.895403 #> hat.par[4,1]  23.039742 2.47745988 17.8746581 21.388247 23.173350 24.778097 #> hat.par[5,1]   7.901707 2.01659604  4.0967519  6.503109  7.869749  9.294705 #> hat.par[6,1]   3.232346 0.96748997  1.3258808  2.555353  3.241378  3.949236 #> hat.par[7,1]   2.489779 1.27812835  0.6526770  1.535982  2.282450  3.213850 #> hat.par[8,1]  11.997746 0.02227675 11.9940310 12.000000 12.000000 12.000000 #> hat.par[9,1]  15.232906 2.54639423 10.3444768 13.474596 15.253362 17.000291 #> hat.par[10,1]  3.214069 1.23926464  1.2309379  2.306492  3.087075  3.963881 #> hat.par[11,1]  4.548701 1.45048150  1.9744118  3.500671  4.425689  5.533585 #> hat.par[1,2]  38.173715 5.15021812 28.4586396 34.623784 38.101457 41.683619 #> hat.par[2,2]   4.212494 1.63635657  1.5948183  2.997128  4.042273  5.261739 #> hat.par[3,2]   8.103625 1.44554618  4.8835116  7.199660  8.304100  9.213096 #> hat.par[4,2]  15.989873 2.46689424 10.9990516 14.359363 15.955599 17.711360 #> hat.par[5,2]   3.030003 1.54184540  0.7156971  1.888900  2.778331  3.884277 #> hat.par[6,2]   3.842171 0.92797592  1.8362456  3.259371  3.960572  4.527742 #> hat.par[7,2]   2.544306 1.23481886  0.6562592  1.646182  2.385550  3.257073 #> hat.par[8,2]  14.994852 0.06300360 14.9885235 15.000000 15.000000 15.000000 #> hat.par[9,2]  16.964116 2.79172269 11.3058989 15.110626 17.025774 18.825615 #> hat.par[10,2]  3.201172 1.32122247  0.9021838  2.228609  3.107864  4.067031 #> hat.par[11,2]  6.948819 1.52163347  3.8777874  5.937579  6.962234  8.043357 #> hat.par[9,3]  21.697641 2.27074588 17.0170797 20.236587 21.820706 23.269812 #> hat.par[10,3]  8.422304 1.37624237  5.4933230  7.500214  8.538103  9.427714 #> hat.par[11,3] 11.478078 1.57399730  8.0895584 10.457689 11.609590 12.598347 #>                   97.5%     Rhat n.eff #> hat.par[1,1]  36.618639 1.001471  2100 #> hat.par[2,1]   5.746459 1.007539   320 #> hat.par[3,1]  11.744294 1.010036   250 #> hat.par[4,1]  27.521467 1.006613   330 #> hat.par[5,1]  11.834576 1.003507   740 #> hat.par[6,1]   5.030862 1.005376   410 #> hat.par[7,1]   5.549282 1.008013   270 #> hat.par[8,1]  12.000000 1.001845  3000 #> hat.par[9,1]  20.069941 1.014195   160 #> hat.par[10,1]  6.050436 1.010975   190 #> hat.par[11,1]  7.564720 1.019757   210 #> hat.par[1,2]  48.417919 1.003213   840 #> hat.par[2,2]   7.839870 1.002915   830 #> hat.par[3,2]  10.271553 1.023865   160 #> hat.par[4,2]  20.685402 1.002789   880 #> hat.par[5,2]   6.558441 1.010520   230 #> hat.par[6,2]   5.357775 1.018950   120 #> hat.par[7,2]   5.540656 1.012838   170 #> hat.par[8,2]  15.000000 1.034488  3000 #> hat.par[9,2]  22.177987 1.004999   710 #> hat.par[10,2]  5.980506 1.008472   360 #> hat.par[11,2]  9.790050 1.007255  1200 #> hat.par[9,3]  25.806624 1.008809   240 #> hat.par[10,3] 10.759889 1.005342   480 #> hat.par[11,3] 14.121672 1.008994   240 #>  #> $leverage_o #>  [1]  0.975450136  0.567125228  1.119533253  1.005422176  0.956636444 #>  [6]  0.711685418  0.944566490 -0.009762510  0.818452578  0.830746409 #> [11]  0.648347096  1.015676460  0.950911340  1.135569276  0.985621904 #> [16]  1.042451356  0.839150080  0.683216177  0.007003067  0.955892276 #> [21]  0.687665838  0.763309204  0.820822387  0.761184884  0.878337499 #>  #> $sign_dev_o #>  [1]  1 -1  1 -1  1  1  1 -1 -1  1 -1 -1  1 -1  1 -1 -1 -1 -1 -1 -1  1  1  1 -1 #>  #> $tau #>         mean           sd         2.5%          25%          50%          75%  #> 6.901601e-01 4.262690e-01 3.900282e-02 3.799128e-01 6.207667e-01 9.336426e-01  #>        97.5%         Rhat        n.eff  #> 1.762270e+00 1.053054e+00 2.400000e+03  #>  #> $m_tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.67522107  0.51017458  0.01510335  0.26055755  0.57117256  0.97597289  #>       97.5%        Rhat       n.eff  #>  1.86061300  1.14522129 40.00000000  #>  #> $model_assessment #>        DIC       pD      dev #> 1 43.85337 20.09501 23.75836 #>  #> $obs_comp #> [1] \"2vs1\" \"3vs1\" \"4vs1\" \"5vs1\" \"4vs2\" \"6vs2\" \"4vs3\" \"5vs4\" #>  #> $jagsfit #> Inference for Bugs model at \"9\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>               mu.vect sd.vect   2.5%    25%    50%    75%  97.5%  Rhat n.eff #> EM[2,1]         0.597   0.834 -1.099  0.157  0.595  1.051  2.298 1.006  3000 #> EM[3,1]         0.230   0.711 -1.236 -0.176  0.225  0.654  1.620 1.008   460 #> EM[4,1]         0.834   0.566 -0.355  0.493  0.868  1.228  1.861 1.036    61 #> EM[5,1]         1.954   0.789  0.425  1.410  1.960  2.506  3.398 1.021   120 #> EM[4,2]        -0.475   1.009 -2.560 -1.061 -0.418  0.090  1.518 1.002  1100 #> EM[6,2]        -1.289   1.153 -3.653 -1.996 -1.293 -0.573  1.016 1.009   340 #> EM[4,3]         1.188   0.940 -0.747  0.670  1.208  1.705  3.077 1.011   470 #> EM[5,4]        -0.750   1.456 -3.907 -1.797 -0.566  0.259  1.756 1.037    74 #> dev.o[1,1]      0.977   1.339  0.001  0.099  0.463  1.319  4.880 1.002  1400 #> dev.o[2,1]      0.842   1.179  0.001  0.088  0.403  1.140  4.169 1.003   950 #> dev.o[3,1]      1.125   1.496  0.001  0.113  0.505  1.547  5.417 1.005   630 #> dev.o[4,1]      1.006   1.415  0.001  0.095  0.452  1.347  5.028 1.001  3000 #> dev.o[5,1]      0.959   1.407  0.001  0.101  0.443  1.252  4.789 1.001  3000 #> dev.o[6,1]      1.117   1.491  0.001  0.130  0.542  1.505  5.438 1.002  1800 #> dev.o[7,1]      1.061   1.395  0.001  0.122  0.509  1.468  4.920 1.002  1300 #> dev.o[8,1]      0.005   0.045  0.000  0.000  0.000  0.000  0.012 1.002  3000 #> dev.o[9,1]      0.825   1.143  0.001  0.088  0.397  1.094  3.974 1.001  3000 #> dev.o[10,1]     1.091   1.386  0.001  0.130  0.545  1.556  4.835 1.004   590 #> dev.o[11,1]     0.743   1.028  0.001  0.072  0.355  0.987  3.836 1.013   160 #> dev.o[1,2]      1.017   1.444  0.001  0.112  0.470  1.380  4.863 1.002  1400 #> dev.o[2,2]      1.125   1.464  0.001  0.125  0.553  1.563  5.232 1.001  3000 #> dev.o[3,2]      1.141   1.585  0.001  0.124  0.525  1.519  5.617 1.001  2200 #> dev.o[4,2]      0.986   1.400  0.001  0.101  0.432  1.297  5.101 1.001  3000 #> dev.o[5,2]      1.043   1.504  0.001  0.105  0.445  1.381  5.409 1.002  1400 #> dev.o[6,2]      1.332   1.608  0.002  0.197  0.759  1.880  5.852 1.015   170 #> dev.o[7,2]      0.837   1.213  0.001  0.081  0.367  1.056  4.569 1.008  3000 #> dev.o[8,2]      0.011   0.132  0.000  0.000  0.000  0.000  0.023 1.034  3000 #> dev.o[9,2]      1.065   1.496  0.001  0.110  0.474  1.400  5.200 1.002  1500 #> dev.o[10,2]     1.385   1.692  0.002  0.179  0.738  1.968  6.129 1.001  2200 #> dev.o[11,2]     1.109   1.558  0.001  0.118  0.514  1.425  5.627 1.007   480 #> dev.o[9,3]      1.113   1.542  0.001  0.116  0.528  1.489  5.422 1.002  1800 #> dev.o[10,3]     0.899   1.258  0.001  0.088  0.425  1.169  4.588 1.004   600 #> dev.o[11,3]     0.947   1.329  0.001  0.099  0.408  1.241  4.631 1.005   800 #> hat.par[1,1]   26.820   4.553 18.873 23.613 26.567 29.838 36.619 1.001  2100 #> hat.par[2,1]    2.779   1.288  0.791  1.824  2.606  3.530  5.746 1.008   320 #> hat.par[3,1]    9.905   1.276  6.994  9.110 10.095 10.895 11.744 1.010   250 #> hat.par[4,1]   23.040   2.477 17.875 21.388 23.173 24.778 27.521 1.007   330 #> hat.par[5,1]    7.902   2.017  4.097  6.503  7.870  9.295 11.835 1.004   740 #> hat.par[6,1]    3.232   0.967  1.326  2.555  3.241  3.949  5.031 1.005   410 #> hat.par[7,1]    2.490   1.278  0.653  1.536  2.282  3.214  5.549 1.008   270 #> hat.par[8,1]   11.998   0.022 11.994 12.000 12.000 12.000 12.000 1.002  3000 #> hat.par[9,1]   15.233   2.546 10.344 13.475 15.253 17.000 20.070 1.014   160 #> hat.par[10,1]   3.214   1.239  1.231  2.306  3.087  3.964  6.050 1.011   190 #> hat.par[11,1]   4.549   1.450  1.974  3.501  4.426  5.534  7.565 1.020   210 #> hat.par[1,2]   38.174   5.150 28.459 34.624 38.101 41.684 48.418 1.003   840 #> hat.par[2,2]    4.212   1.636  1.595  2.997  4.042  5.262  7.840 1.003   830 #> hat.par[3,2]    8.104   1.446  4.884  7.200  8.304  9.213 10.272 1.024   160 #> hat.par[4,2]   15.990   2.467 10.999 14.359 15.956 17.711 20.685 1.003   880 #> hat.par[5,2]    3.030   1.542  0.716  1.889  2.778  3.884  6.558 1.011   230 #> hat.par[6,2]    3.842   0.928  1.836  3.259  3.961  4.528  5.358 1.019   120 #> hat.par[7,2]    2.544   1.235  0.656  1.646  2.386  3.257  5.541 1.013   170 #> hat.par[8,2]   14.995   0.063 14.989 15.000 15.000 15.000 15.000 1.034  3000 #> hat.par[9,2]   16.964   2.792 11.306 15.111 17.026 18.826 22.178 1.005   710 #> hat.par[10,2]   3.201   1.321  0.902  2.229  3.108  4.067  5.981 1.008   360 #> hat.par[11,2]   6.949   1.522  3.878  5.938  6.962  8.043  9.790 1.007  1200 #> hat.par[9,3]   21.698   2.271 17.017 20.237 21.821 23.270 25.807 1.009   240 #> hat.par[10,3]   8.422   1.376  5.493  7.500  8.538  9.428 10.760 1.005   480 #> hat.par[11,3]  11.478   1.574  8.090 10.458 11.610 12.598 14.122 1.009   240 #> m.tau           0.675   0.510  0.015  0.261  0.571  0.976  1.861 1.145    40 #> resdev.o[1]     1.994   1.972  0.051  0.572  1.418  2.740  7.311 1.006   420 #> resdev.o[2]     1.967   1.817  0.064  0.653  1.450  2.734  6.649 1.007   510 #> resdev.o[3]     2.265   2.150  0.064  0.701  1.619  3.191  7.830 1.008   290 #> resdev.o[4]     1.991   2.020  0.040  0.535  1.347  2.790  7.294 1.001  3000 #> resdev.o[5]     2.002   2.077  0.046  0.534  1.362  2.777  7.568 1.002  1200 #> resdev.o[6]     2.449   1.963  0.119  1.042  2.004  3.291  7.565 1.027    97 #> resdev.o[7]     1.898   1.834  0.062  0.582  1.352  2.564  6.672 1.005   590 #> resdev.o[8]     0.015   0.160  0.000  0.000  0.000  0.000  0.047 1.017  3000 #> resdev.o[9]     3.004   2.394  0.225  1.231  2.451  4.027  9.542 1.004   750 #> resdev.o[10]    3.374   2.334  0.290  1.621  2.936  4.624  9.379 1.002  1100 #> resdev.o[11]    2.800   2.304  0.209  1.136  2.182  3.787  8.840 1.004   560 #> tau             0.690   0.426  0.039  0.380  0.621  0.934  1.762 1.053  2400 #> totresdev.o    23.758   6.692 12.159 19.083 23.232 27.772 38.204 1.007   300 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> $data #>                study t1 t2 t3 r1 r2 r3 m1 m2 m3  n1  n2 n3 #> 356    Richard, 2012  1  3  4 15 16 23  6  8  4  39  42 34 #> 357     Barone, 2010  1  2 NA 27 38 NA 19 20 NA 152 144 NA #> 358 Weinbtraub, 2010  1  3 NA  2  5 NA  6  6 NA  27  28 NA #> 359      Menza, 2009  1  4  5  4  2  9  6  7  5  17  18 17 #> 360      Devos, 2008  1  4  5  4  8 11  0  2  1  16  15 17 #> 361   Antonini, 2006  4  5 NA 10  8 NA  4  4 NA  16  15 NA #> 362     Barone, 2006  2  4 NA 23 16 NA  1  7 NA  33  34 NA #> 363  Rektorova, 2003  2  6 NA  8  3 NA  3  2 NA  22  19 NA #> 364  Leentjens, 2003  1  4 NA  4  3 NA  0  0 NA   6   6 NA #> 365    Wermuth, 1998  1  4 NA  3  2 NA  2  5 NA  19  18 NA #> 366      Rabey, 1996  4  5 NA 12 15 NA  8 12 NA  20  27 NA #>  #> $model #> [1] \"RE\" #>  #> $measure #> [1] \"OR\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $phi #> NULL #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $m_tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.67522107  0.51017458  0.01510335  0.26055755  0.57117256  0.97597289  #>       97.5%        Rhat       n.eff  #>  1.86061300  1.14522129 40.00000000  #>  #> $frail_comp #> [1] \"4vs3\" #>  #> attr(,\"class\") #> [1] \"run_ume\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of SUCRA values — scatterplot_sucra","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Creates scatterplot SUCRA values   network meta-analysis network meta-regression specified level   value investigated covariate.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"","code":"scatterplot_sucra(full, reg, cov_value, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. cov_value list two elements following order: 1) number covariate value interest (see 'Arguments' run_metareg), 2) character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"scatterplot SUCRA values network meta-analysis   (y-axis) SUCRA values network meta-regression   (x-axis) specified level value investigated covariate.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"names interventions appear point plot.   Three coloured rectangles drawn scatterplot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. covariate binary, specify second element   cov_value name level scatterplot   created. scatterplot_sucra integrated metareg_plot. scatterplot_sucra can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviance scatterplots — scatterplots_dev","title":"Deviance scatterplots — scatterplots_dev","text":"Illustrates posterior mean deviance contribution   individual data points unrelated mean effects model (via   run_ume) posterior mean deviance contribution   consistency model (via run_model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviance scatterplots — scatterplots_dev","text":"","code":"scatterplots_dev(full, ume, colour)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviance scatterplots — scatterplots_dev","text":"full numeric vector posterior mean deviance obtained using consistency model (see 'Value' run_model). ume numeric vector posterior mean deviance obtained using unrelated mean effects model (see 'Value' run_ume). colour string define colour points plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviance scatterplots — scatterplots_dev","text":"scatterplot posterior mean deviance contribution   individual data points unrelated mean effects model   consistency model. data point corresponds trial-arm   indicated pair numbers. first number refers position   trial dataset, second number refers   corresponding trial-arm (see 'Arguments' 'Value'  data_preparation).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deviance scatterplots — scatterplots_dev","text":"scatterplots_dev integrated ume_plot   function compare models regarding posterior mean deviance.   scatterplot also considered Dias et al. (2013).   majority data points scattered across diagonal line,   may conclude compared models good agreement. Data points   systematically scattered diagonal line may   contribute poor fit unrelated mean effects model   consistency model, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deviance scatterplots — scatterplots_dev","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013a;33(5):641--56. doi: 10.1177/0272989X12455847","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviance scatterplots — scatterplots_dev","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Facilitates comparison consistency model   (via run_model) series pairwise meta-analyses   (via run_series_meta) regarding estimated summary effect   sizes -trial standard deviation comparisons   least two trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"","code":"series_meta_plot(full, meta, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"full object S3 class run_model. See 'Value' run_model. meta object S3 class run_series_meta. See 'Value' run_series_meta. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"R console prints data-frame estimated summary effect   sizes -trial standard deviation comparisons   models. comparisons least two trials. case   fixed-effect model, data-frame printed without results   -trial standard deviation. Furthermore, series_meta_plot exports data-frame 'xlsx'   file working  directory user.  series_meta_plot returns panel two forest plots: (1)   forest plot posterior median 95% credible interval summary   effect size observed comparisons network meta-analysis   corresponding pairwise meta-analyses, (2) forest plot   posterior median 95% credible interval -trial standard   deviation observed comparisons. estimated median 95%   credible intervals -trial standard deviation network   meta-analysis appear forest plot solid two dotted parallel   blue lines, respectively. different levels heterogeneity appear   green, yellow, orange, red rectangles indicate low, reasonable,   fairly high, fairly extreme heterogeneity, respectively, following   classification Spiegelhalter et al. (2004).   fixed-effect model fitted, forest plot   estimated summary effect sizes shown.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"series_meta_plot can used network   interventions. Otherwise, execution function stopped   error message printed R console. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, series_meta_plot   currently presents results odds ratio   base-case effect measure run_model binary   outcome (see also 'Details' run_model). user can detect inconsistencies estimated   effects compared models explore gains precision   stemming applying network meta-analysis. Furthermore, user can   investigate plausibility common -trial heterogeneity   assumption typically considered network meta-analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Spiegelhalter DJ, Abrams KR, Myles JP. Bayesian approaches clinical trials health-care evaluation. John Wiley Sons, Chichester, 2004.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"","code":"data(\"nma.dogliotti2014\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_dogliotti.rds', package = 'rnmamod'))  # Read results from 'run_series_meta' (using the default arguments) meta <- readRDS(system.file('extdata/meta_dogliotti.rds',                 package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"aspirin\", \"aspirin plus clopidogrel\",                   \"dabigatran 110 mg\", \"dabigatran 150 mg\", \"rivaroxaban\",                   \"vitamin K antagonist\", \"apixaban\")  # Plot the results from both models series_meta_plot(full = res,                  meta = meta,                  drug_names = interv_names) #> $tabulated_results #>  #>  #> Table: Estimation for each observed comparison #>  #> |Comparison                      |Median NMA |SD NMA |95% CrI NMA   |Median MA |SD MA |95% CrI MA    |Median tau |SD tau |95% CrI tau  | #> |:-------------------------------|:----------|:------|:-------------|:---------|:-----|:-------------|:----------|:------|:------------| #> |aspirin vs placebo              |1.53       |0.27   |(0.92, 2.78)  |1.43      |0.37  |(0.66, 2.97)  |0.24       |0.28   |(0.01, 1.08) | #> |vitamin K antagonist vs placebo |2.72       |0.30   |(1.54, 5.19)* |3.00      |0.42  |(1.28, 6.96)* |0.45       |0.34   |(0.03, 1.34) | #> |vitamin K antagonist vs aspirin |1.77       |0.23   |(1.13, 2.84)* |1.60      |0.39  |(0.75, 3.56)  |0.51       |0.30   |(0.10, 1.29) | #>  #> $forest_plots  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Applies pattern-mixture model specific assumption   informative missingness parameter trial-arms   continuous missing participant outcome data uses Taylor   series obtain effect size standard error trial   (Mavridis et al., 2015).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"","code":"taylor_continuous(data, measure, mean_value, var_value, rho)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"columns data-frame argument data refer   following ordered elements continuous outcome:","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"data data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. See 'Format' specification columns. measure Character string indicating effect measure values \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference, ratio means, respectively. mean_value numeric value mean normal distribution informative missingness parameter. value considered trial-arms dataset. default argument 0 corresponds missing--random assumption. informative missingness ratio means, mean value defined logarithmic scale. var_value positive non-zero number variance normal distribution informative missingness parameter. measure \"MD\", \"SMD\" default argument 1; measure \"ROM\" default argument 0.04. value considered trial-arms dataset. rho numeric value interval [-1, 1] indicates correlation coefficient two informative missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"data-frame additionally includes following elements: EM effect size adjusted missing participants   obtained using Taylor series. se.EM standard error effect size adjusted missing   participants obtained using Taylor series.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"taylor_continuous function integrated   unrelated_effects_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"Applies pattern-mixture model specific assumption   informative missingness odds ratio trial-arms   binary missing participant outcome data uses Taylor   series obtain odds ratio (logarithmic scale) standard   error trial (White et al., 2008).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"","code":"taylor_imor(data, mean_value, var_value, rho)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"columns data-frame argument data refer   following ordered elements binary outcome:","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"data data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. See 'Format' specification columns. mean_value numeric value mean normal distribution informative missingness odds ratio logarithmic scale. value considered trial-arms dataset. default argument 0 corresponds missing--random assumption. var_value positive non-zero number variance normal distribution informative missingness odds ratio logarithmic scale. default argument 1. rho numeric value interval [-1, 1] indicates correlation coefficient two missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"data-frame additionally includes following elements: EM odds ratio logarithmic scale (log ) adjusted   missing participants obtained using Taylor series. se.EM standard error log adjusted missing   participants obtained using Taylor series.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"taylor_imor function integrated   unrelated_effects_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Rating the quality of transitivity evaluation — trans_quality","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Classifies systematic review multiple interventions   low, unclear high quality regarding transitivity evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rating the quality of transitivity evaluation — trans_quality","text":"","code":"trans_quality(   plan_protocol,   plan_methods,   report_results,   discuss_trans,   proper_table )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rating the quality of transitivity evaluation — trans_quality","text":"plan_protocol Character string indicates systematic review planned protocol assess transitivity assumption. following values can considered: \"\", \"\", \"protocol\", \"direct methods\", \"indirect methods\". \"\" implies least one direct one indirect method used. plan_methods Character string indicates whether systematic review described methods section strategy assess transitivity assumption. following values can considered: \"Yes\", \"\". report_results Character string indicates whether systematic review reported results section transitivity evaluation strategy employed. following values can considered: \"\", \"\", \"direct methods\", \"indirect methods\". \"\" implies least one direct one indirect method used. discuss_trans Character string indicates whether systematic review discussed transitivity assumption model parameters considered. following values can considered: \"\", \"\", \"treatment effects\", \"parameter\", \"NMA conducted\". \"\" implies treatment effect model parameters considered. proper_table Character string indicates whether systematic review reported proper table characteristics. following values can considered: \"\", \"table\", \"Yes\".","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rating the quality of transitivity evaluation — trans_quality","text":"character value \"Low\", \"Unclear\",  \"High\" indicate low, unclear, high-quality transitivity   evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rating the quality of transitivity evaluation — trans_quality","text":"systematic review \"Low\" quality transitivity   evaluation provide protocol, describe evaluation   strategy methods section, report evaluation results,   discusses transitivity evaluation provide table   characteristics. contrary, systematic review \"High\"   quality transitivity evaluation provides evaluation plan   protocol (including least one direct method), describes evaluation   strategy methods section (including least one direct method),   reports evaluation results results section, discusses   transitivity evaluation considering least one model parameter   (NMA conducted), provides proper table   characteristics. Otherwise, systematic review judged   \"Unclear\" quality transitivity evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Spineli LM, Kalyvas C, Seide SE, Papadimitropoulou K. Low awareness transitivity assumption complex networks interventions: empirical evidence 356 network meta-analyses. 2022 submitted","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for the unrelated mean effects model — ume_plot","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"ume_plot hosts toolkit functions facilitates   comparison consistency model (via run_model)   unrelated mean effects model (via run_ume) regarding   posterior summaries summary effect size pairwise comparisons   observed network, -trial standard deviation (tau)   model assessment parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"","code":"ume_plot(full, ume, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"full object S3 class run_model. See 'Value' run_model. ume object S3 class run_ume. See 'Value' run_ume. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"ume_plot prints R console message   parsimonious model () based DIC (red text). , function   returns following list elements: table_effect_size posterior median, posterior standard   deviation, 95% credible interval summary effect size   pairwise comparison observed network consistency model   unrelated mean effects model. table_model_assessment DIC, number effective   parameters, total residual deviance consistency model   unrelated mean effects model (Spiegelhalter et al., 2002). table_tau posterior median 95% credible interval   tau consistency model unrelated mean effects   model. fixed-effect model performed, ume_plot   return element. scatterplots scatterplot Bland-Altman plot   posterior mean deviance contribution individual data points   consistency model unrelated mean effects model. See 'Details'   'Value' scatterplots_dev   bland_altman_plot, respectively. levarage_plots leverage plot consistency model   unrelated mean effects model, separately. See 'Details'   'Value' leverage_plot. intervalplots panel interval plots summary effect   size consistency model unrelated mean effects model   pairwise comparison observed network. See 'Details'   'Value' intervalplot_panel_ume.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"deviance information criterion (DIC) consistency model   compared DIC unrelated mean effects model   (Dias et al., 2013). difference DIC exceeds 5, unrelated mean   effects model preferred. difference DIC less -5,   consistency preferred; otherwise, little choose   compared models. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, ume_plot currently   presents results network meta-analysis unrelated mean effects   odds ratio base-case effect measure   run_model binary outcome (see also 'Details'   run_model). Furthermore, ume_plot exports table_effect_size   table_model_assessment separate 'xlsx' files (via   write_xlsx function) working   directory user. ume_plot can used network interventions.   case two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--396. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"","code":"data(\"nma.liu2013\")  # \\donttest{ # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # Read results from 'run_ume' (using the default arguments) ume <- readRDS(system.file('extdata/ume_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Plot the results from both models ume_plot(full = res,          ume = ume,          drug_names = interv_names) #> There is little to choose between the two models. #> $table_effect_size #>  #>  #> Table: Estimation for each observed comparison #>  #> |Comparison                                                                                   | Median NMA | SD NMA |   95% CrI NMA   | Median UME | SD UME |   95% CrI UME   | #> |:--------------------------------------------------------------------------------------------|:----------:|:------:|:---------------:|:----------:|:------:|:---------------:| #> |pramipexole vs placebo                                                                       |    2.22    |  0.65  | ( 0.61,  8.71)  |    1.79    |  0.84  | ( 0.31, 10.28)  | #> |serotonin-norepinephrine #>                   reuptake inhibitor vs placebo                      |    1.12    |  0.70  | ( 0.29,  4.78)  |    1.18    |  0.72  | ( 0.29,  5.19)  | #> |serotonin reuptake inhibitor vs placebo                                                      |    2.03    |  0.51  | ( 0.69,  5.25)  |    2.29    |  0.57  | ( 0.65,  6.30)  | #> |tricyclic antidepressant vs placebo                                                          |    4.48    |  0.71  | ( 1.08, 17.87)* |    6.75    |  0.79  | ( 1.44, 32.94)* | #> |serotonin reuptake inhibitor vs pramipexole                                                  |    0.92    |  0.70  | ( 0.20,  3.32)  |    0.63    |  0.98  | ( 0.08,  4.41)  | #> |pergolide vs pramipexole                                                                     |    0.27    |  1.13  | ( 0.03,  2.41)  |    0.28    |  1.15  | ( 0.03,  2.45)  | #> |serotonin reuptake inhibitor vs serotonin-norepinephrine #>                   reuptake inhibitor |    1.81    |  0.76  | ( 0.35,  7.27)  |    3.26    |  0.94  | ( 0.46, 21.27)  | #> |tricyclic antidepressant vs serotonin reuptake inhibitor                                     |    2.22    |  0.70  | ( 0.58,  8.99)  |    0.41    |  1.42  | ( 0.02,  6.57)  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment parameters (25 unconstrained data points) #>  #> |    |Full NMA | UME model | #> |:---|:--------|:---------:| #> |DIC |43.52515 | 44.02893  | #> |pD  |18.94214 | 20.13015  | #> |dev |24.58300 | 23.89878  | #>  #> $table_tau #>  #>  #> Table: Between-trial standard deviation #>  #> |          |Median    | Lower 95% CrI | Upper 95% CrI | #> |:---------|:---------|:-------------:|:-------------:| #> |Full NMA  |0.5907608 |   0.0370939   |   1.541924    | #> |UME model |0.5992070 |   0.0354797   |   1.633918    | #>  #> $scatterplots  #>  #> $leverage_plots  #>  #> $intervalplots  #>  # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Performs unrelated trial effects model (also known fixed   effects model) illustrates results trial corresponding   pairwise comparison.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"","code":"unrelated_effects_plot(   data,   measure,   char,   drug_names,   trial_names,   mean_misspar,   var_misspar,   rho,   save_xls )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. measure Character string indicating effect measure values \"\", \"MD\", \"SMD\", \"ROM\" odds ratio, mean difference, standardised mean difference ratio means, respectively. char data-frame three columns number rows equal number trials data. column refers trial-characteristic nominal elements. drug_names vector labels name interventions order appear argument data. drug_names defined, order interventions appear data used, instead. trial_names vector labels name trials order appear argument data. trial_names defined, order trials appear data used, instead. mean_misspar numeric value mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption. value considered across trials dataset. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\" default argument 0.04. value considered across trials dataset. rho numeric value interval [-1, 1] indicates correlation coefficient two informative missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"panel interval plots observed comparison   network, 15 trials data. Otherwise,  unrelated_effects_plot exports data-frame 'xlsx' file   working  directory user. data-frame includes  data long format, within-trial effect measure   95% confidence interval corresponding comparisons,   interventions compared, three characteristics (defined  char).   datasets 15 trials, plot becomes cluttered   difficult identify trial-names. Hence, exporting results   Excel file viable alternative.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"unrelated trial effects model may alternative network   meta-analysis, latter deemed appropriate (e.g.,   considerable statistical heterogeneity, substantial intransitivity).   presence missing participant outcome data, effect size   standard error adjusted applying pattern-mixture model   Taylor series trial-arms reported missing participants (Mavridis et   al., 2015; White et al., 2008). unrelated_effects_plot function   calls taylor_imor taylor_continuous   functions (binary continuous outcome, respectively) employ   pattern-mixture model Taylor series. unrelated_effects_plot   function considers informative missingness odds ratio   logarithmic scale binary outcome data (White et al., 2008),   informative missingness difference means measure   \"MD\" \"SMD\", informative missingness ratio means   logarithmic scale measure \"ROM\"   (Mavridis et al., 2015). number interval plots equals number observed comparisons   network. interval plot, y-axis refers trials   network x-axis refers selected effect measure. odds ratio   ratio means calculated logarithmic scale   reported original scale exponentiation. unrelated_effects_plot depicts three characteristics   trial using different colours, line-types point-shapes   corresponding 95% confidence interval point estimate. Ideally,   characteristic three categories; otherwise,   plot becomes cluttered. now, unrelated_effects_plot function   uses default colour palette, line-types point-shapes.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-040-2024-0x-xx","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.4.0 (2024-0X-XX)","title":"rnmamod, version 0.4.0 (2024-0X-XX)","text":"Performs quantitative evaluation transitivity assumption using inter-study dissimilarities various study-level aggregate participant methodological characteristics may act effect modifiers. Returns dendrogram integrated heatmap clustered comparisons studies based hierarchical agglomerative clustering (performed using function comp_clustering). R packages heatmaply dendextend used. returns violin plots box plots dots quantitative characteristics, stacked barplots qualitative characteristics across observed treatment comparisons. function can also used illustrate distribution characteristics across clusters defined comp_clustering. returns various plots visualise missing cases characteristics across studies treatment comparisons. returns N--N matrix Gower’s dissimilarity coefficient pairs N studies network. returns barplot ratio MCMC error posterior standard deviation barplot Gelman-Rubin R diagnostic. Green bars indicate ratio less 0.05 R less 1.10; otherwise, bars red. corresponding models updated convergence via autojags function R package R2jags. argument inits added allow user define initial values parameters, following documentation jags function R package R2jags. reports tables evidence base information one outcome. network plot reported (see use netplot, instead). Self-created function using R package igraph. function creates network plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-030-2022-11-01","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.3.0 (2022-11-01)","title":"rnmamod, version 0.3.0 (2022-11-01)","text":"CRAN release: 2022-11-01 processes elements argument base_risk fixed, random predicted baseline model passes output run_model run_metareg obtain absolute risks interventions. predicted baseline model conducted, returns forest plot trial-specific summary probability event selected reference intervention. upgraded plot presents two forest plots side--side: () one estimation prediction network meta-analysis network meta-regression selected comparator intervention (allows comparison two analyses), (ii) one SUCRA values analyses. forest plots present results network meta-regression selected value investigated covariate. (binary outcome) yields graph league_table_absolute, input rnmamod object: user defines input includes summary effect corresponding (credible confidence) interval comparisons reference intervention. results stem network meta-analysis conducted using another R-package statistical software. calculates robustness index sensitivity analysis performed using R-package netmeta metafor. user defines input function returns robustness index. function returns output robustness_index function. classifies systematic review multiple interventions low, unclear high quality regarding transitivity evaluation based five quality criteria.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-020-2022-04-06","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.2.0 (2022-04-06)","title":"rnmamod, version 0.2.0 (2022-04-06)","text":"CRAN release: 2022-04-06 Typos links (functions packages) documentation corrected. allows user define reference intervention network via argument ref; (binary outcome) estimates absolute risks non-reference interventions using selected baseline risk reference intervention (argument base_risk); (binary outcome) estimates relative risks risk difference functions estimated absolute risks. (binary outcome) presents absolute risks per 1000 participants main diagonal, odds ratio upper -diagonals, risk difference per 1000 participants lower -diagonals; allow user select interventions present via argument show (ideal large networks make league table cluttered). allow user select interventions present via argument show (ideal large networks make league table cluttered); allow user illustrate results two outcomes model (.e. via run_model run_metareg) results two models outcome (applicable : () run_model versus run_metareg, (ii) run_model versus run_series_meta). present extent heterogeneity forest plot tau using different colours low, reasonable, fairly high, fairly extreme tau (classification suggested Spiegelhalter et al., 2004; ISBN 0471499757).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-010-2021-11-21","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.1.0 (2021-11-21)","title":"rnmamod, version 0.1.0 (2021-11-21)","text":"CRAN release: 2021-11-29 First CRAN submission.","code":""}]
