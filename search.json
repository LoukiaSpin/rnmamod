[{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Description of the network","text":"vignette aims illustrate toolkits rnmamod package creation network plot summarisation corresponding outcome data. missing participant outcome data (MOD) extracted trials dataset, rnmamod package facilitates visualising proportion MOD across network within dataset.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"dataset-preparation","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Dataset preparation","title":"Description of the network","text":"use systematic review Bottomley et al., (2011) comprises 9 trials comparing six pharmacologic interventions placebo moderately severe scalp psoriasis. analysed binary outcome investigator global assessment response 4 weeks (?nma.bottomley2011). dataset one-trial-per-row format containing arm-level data trial. format widely used BUGS models. binary outcome, dataset must minimum three items: item t refers intervention identifier corresponding (intervention) arm; item r refers number observed events corresponding arm. item n refers number randomised participants corresponding arm. least one trial reports number missing participants per arm, also include item m dataset. trial reports total number missing participants rather number missing participants per arm, indicate NA item m arms corresponding trial. example, maximum number interventions observed trial four. Therefore, element comprises four columns (e.g., t1, t2, t3, t4) indicate maximum number arms dataset. Furthermore, trials dataset reported number missing participants per arm; therefore, element m appears dataset.","code":"study t1 t2 t3 t4  r1  r2  r3 r4 m1 m2 m3 m4  n1  n2  n3  n4 1             Buckley, 2008  1  6 NA NA  67  79  NA NA  2  1 NA NA 110 108  NA  NA 2              Tyring, 2008  6  7 NA NA  74  12  NA NA  2  0 NA NA 135  42  NA  NA 3           Kragballe, 2009  3  6 NA NA  19 114  NA NA  9  2 NA NA 105 207  NA  NA 4               Luger, 2008  3  6 NA NA 101 196  NA NA 44  9 NA NA 431 419  NA  NA 5              Klaber, 1994  2  3 NA NA 175 138  NA NA  2 11 NA NA 234 240  NA  NA 6             Barrett, 2005  3  4 NA NA  79  79  NA NA 19 18 NA NA 225 236  NA  NA 7 Klaber and McKinnon, 2000  3  5 NA NA  55  31  NA NA 35 16 NA NA 238 237  NA  NA 8      van de Kerkhof, 2009  1  3  6 NA 287  74 311 NA  7  8  4 NA 563 286 568  NA 9               Jemec, 2008  1  3  6  7 304  64 362 20  6 20  8  7 556 272 541 136"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"the-network-plot","dir":"Articles","previous_headings":"Example on a binary outcome","what":"The network plot","title":"Description of the network","text":"function netplot (see ?netplot help) creates network plot using two arguments: data dataset (one-trial-per-row format) drug_names names intervention dataset.  intervention names drug_names must sorted ascending order identifier. Hence, 1 element t refers BDP, (betamethasone dipropionate) 2 BMV (betamethasone valerate), 3 CPL (calcipotriol) . See Details ?nma.bottomley20119 names interventions. node refers intervention edge refers pairwise comparison. size node thickness edge weighted number trials investigated corresponding intervention pairwise comparison, respectively.","code":"netplot(data = nma.bottomley2011, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"), show_multi = TRUE, edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"network-characteristics","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Network characteristics","title":"Description of the network","text":"netplot also produces table characteristics network, number interventions, number possible comparisons, number direct comparisons (.e., comparisons interventions informed least one trial), : Description network","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-the-outcome","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of the outcome","title":"Description of the network","text":"Furthermore, netplot returns table summarises number trials, number randomised participants proportion completers (participants completed trial) per intervention. case binary outcome, table additionally illustrates distribution outcome proportion across corresponding trials: Interventions identical table returned observed comparisons network: Observed comparisons users can export tables xlsx file working directory project adding argument save_xls = TRUE describe_network function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-missing-participants-across-the-network","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of missing participants across the network","title":"Description of the network","text":"missing participants reported arm every trial, use heatmap_missing_network function illustrate distribution proportion missing participants per intervention (main diagonal) observed comparison (lower -diagonal) network (see Details ?heatmap_missing_network).  green colour implies median proportion missing participant 5%, hence, low risk associated missing participants. red colour implies median proportion missing participant 20%, hence, high risk associated missing participants; otherwise, orange indicates moderate risk. example, interventions observed comparisons associated low risk due participant losses.","code":"heatmap_missing_network(data = nma.bottomley2011, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"))"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"distribution-of-missing-participants-across-the-trials","dir":"Articles","previous_headings":"Example on a binary outcome","what":"Distribution of missing participants across the trials","title":"Description of the network","text":"Use heatmap_missing_dataset function illustrate proportion missing participants arm every trial dataset :","code":"heatmap_missing_dataset(data = nma.bottomley2011, trial_names = nma.bottomley2011$study, drug_names = c(\"BDP\", \"BMV\", \"CPL\", \"CPL+polytar\", \"capasal\", \"TCF gel\", \"placebo\"))"},{"path":"https://loukiaspin.github.io/rnmamod/articles/network_description.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Description of the network","text":"Bottomley JM, Taylor RS, Ryttov J. effectiveness two-compound formulation calcipotriol betamethasone dipropionate gel treatment moderately severe scalp psoriasis: systematic review direct indirect evidence. Curr Med Res Opin 2011;27(1):251–268. doi: 10.1185/03007995.2010.541022","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Perform network meta-analysis","text":"vignette illustrates perform one-stage Bayesian random-effects network meta-analysis consistency equation using run_model function. function includes arguments handle aggregate missing participant outcome data (MOD) arm every trial via pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"example-on-a-binary-outcome","dir":"Articles","previous_headings":"","what":"Example on a binary outcome","title":"Perform network meta-analysis","text":"use network pharmacologic interventions chronic obstructive pulmonary disease (COPD) systematic review Baker et al. (2009). network comprises 21 trials comparing seven pharmacological interventions placebo. exacerbation COPD (harmful outcome) analysed binary outcome (see ?nma.baker2009).","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"run-the-model","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"Run the model","title":"Perform network meta-analysis","text":"run_model calls jags function R2jags package perform Bayesian analysis using BUGS code Dias colleagues (2013). minimum required arguments, function adjusts MOD missing--random assumption (MAR; default) via informative missingness odds ratio (IMOR) logarithmic scale (White et al. (2008)): minimum required arguments run_model include specifying: dataset (data-frame one-trial-per-row format) data (see ?data_preparation); effect measure measure (see ‘Arguments’ ?run_model): prior distribution heterogeneity parameter heter_prior (see ?heterogeneity_param_prior); direction outcome D (, D = 0 outcome harmful; see, ‘Arguments’ ?run_model) number chains n_chains (see ‘Arguments’ ?run_model – also subsequent arguments); number iterations n_iter; number burn-n_burnin, thinning n_thin.","code":"run_model(data = nma.baker2009,           measure = \"OR\",           heter_prior = list(\"halfnormal\", 0, 1),           D = 0,           n_chains = 3,           n_iter = 10000,           n_burnin = 1000,           n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"using-all-arguments","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"Using all arguments","title":"Perform network meta-analysis","text":"Suppose decide use empirically-based prior distribution -trial variance aligns outcome interventions investigation. also consider hierarchical structure prior normal distribution log IMOR specific interventions network (assumption = \"HIE-ARM\") (Turner et al., 2015a; Spineli, 2019). still assume MAR average variance log IMOR equal 1 (var_misspar = 1) also default argument. case, run_model must specified follows: argument model = \"RE\" refers random-effects model. fixed-effect model, use model = \"FE\". heter_prior = list(\"lognormal\", -2.06, 0.438) refers ‘symptoms reflecting continuation condition’ ‘pharmacological versus placebo’ comparison-type elicited Turner colleagues (2015b). argument mean_misspar = c(0, 0), first second element vector refers mean log IMOR non-reference interventions reference intervention network, respectively – latter always intervention identifier equal 1. Hence, non-reference interventions can consider mean log IMOR. See ‘Details’ ?missingness_param_prior","code":"run_model(data = nma.baker2009,           measure = \"OR\",           model = \"RE\",           assumption = \"HIE-ARM\",           heter_prior = list(\"lognormal\", -2.06, 0.438),           mean_misspar = c(0, 0),           var_misspar = 1,           D = 0,           n_chains = 3,           n_iter = 10000,           n_burnin = 1000,           n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"the-output","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"The output","title":"Perform network meta-analysis","text":"run_model returns list R2jags output summaries posterior distribution, Gelman-Rubin convergence diagnostic monitored parameters (see ‘Value’ ?run_model). output used S3 object functions package processed provide end-user-ready output. See, example, function ?league_heatmap creates league table effect sizes possible comparisons network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"no-or-partially-extracted-missing-participant-outcome-data","dir":"Articles","previous_headings":"Perform Bayesian random-effects network meta-analysis","what":"No or partially extracted missing participant outcome data","title":"Perform network meta-analysis","text":"run_model can also handle dataset MOD extracted MOD extracted trials trial-arms. illustrative purposes, removed item m nma.baker2009 indicate MOD extracted outcome: Using minimum required arguments, run_model run provide results. run_model calls data_preparation function. latter creates pseudo-data-frame item m (see ‘Value’ ?data_preparation) assigns NA trial-arms. data_preparation also creates pseudo-data-frame dimension items dataset, assigns zero value trial-arms indicate MOD extracted. pseudo-data-frames aim retain dataset trials without information MOD; otherwise, trials excluded analysis. See ‘Details’ ?data_preparation ?run_model.","code":"study t1 t2 t3 t4 r1 r2 r3 r4  n1  n2 n3 n4 1 Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA   8   8 NA NA 2        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 139 142 NA NA 3          Mahler, 1999  1  7 NA NA 47 28 NA NA 143 135 NA NA 4        Casaburi, 2000  1  8 NA NA 41 45 NA NA 191 279 NA NA 5       van Noord, 2000  1  7 NA NA 18 11 NA NA  50  47 NA NA 6         Rennard, 2001  1  7 NA NA 41 38 NA NA 135 132 NA NA"},{"path":"https://loukiaspin.github.io/rnmamod/articles/perform_network_metaanalysis.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Perform network meta-analysis","text":"Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607–617. doi: 10.1177/0272989X12458724 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis–part 1: two-stage methods. Stat Med 2008;27(5):711–27. doi: 10.1002/sim.3008 Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015a;34(12):2062–80. doi: 10.1002/sim.6475 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta- analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner RM, Jackson D, Wei Y, Thompson SG, Higgins JPT. Predictive distributions -study heterogeneity simple methods application Bayesian meta-analysis. Stat Med 2015b;34(6):984–98. doi: 10.1002/sim.6381","code":""},{"path":"https://loukiaspin.github.io/rnmamod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Loukia Spineli. Author, maintainer. Chrysostomos Kalyvas. Contributor. Katerina Papadimitropoulou. Contributor.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spineli L (2024). rnmamod: Bayesian Network Meta-Analysis Missing Participants. R package version 0.3.0, https://github.com/LoukiaSpin/rnmamod, https://CRAN.R-project.org/package=rnmamod.","code":"@Manual{,   title = {rnmamod: Bayesian Network Meta-Analysis with Missing Participants},   author = {Loukia Spineli},   year = {2024},   note = {R package version 0.3.0, https://github.com/LoukiaSpin/rnmamod},   url = {https://CRAN.R-project.org/package=rnmamod}, }"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"rnmamod-bayesian-network-meta-analysis-r-package-","dir":"","previous_headings":"","what":"Bayesian Network Meta-Analysis with Missing Participants ","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Official Git repository rnmamod R package R Views November 2021: “Top 40” New CRAN Packages Medium Peek--boo: Evidence synthesis using rnmamod R package YouTube channel ESMARConf2023","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Loukia Spineli, Chrysostomos Kalyvas, Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"website rnmamod currently includes two short tutorials (Description network Perform network meta-analysis). also structured reference list facilitate access documentation functions available package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"rnmamod package performs one-stage fixed-effect random-effects Bayesian network meta-analysis (NMA) adjusting missing participant outcome data (MOD) using pattern-mixture model. case two interventions, package performs one-stage Bayesian pairwise meta-analysis. Standard aggregate data NMA special case NMA MOD, either studies studies MOD available, respectively. package handles data inputs arm-based format: - binary data (effect size: odds ratio, risk ratio, risk difference) - continuous data (effect size: raw standardised mean differences, ratio means). rnmamod package comprises suite necessary models estimation prediction intervention effect, evaluation consistency assumption locally globally. Also includes rich suite visualisation tools aid interpretation results preparation NMA manuscript submission. Missing participant outcome data addressed models package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Run following code install load package CRAN: run following code install development version package:","code":"install.packages(\"rnmamod\") library(rnmamod) install.packages(\"devtools\") devtools::install_github(\"LoukiaSpin/rnmamod\")"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Baker et al. (2009) comprising 21 trials comparing seven pharmacologic interventions placebo chronic obstructive pulmonary disease (COPD) patients. exacerbation COPD (harmful outcome) analysed binary outcome.","code":"head(nma.baker2009) #>                 study t1 t2 t3 t4 r1 r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA  1  0 NA NA   8   8 NA NA #>        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 27 19 NA NA 139 142 NA NA #>          Mahler, 1999  1  7 NA NA 47 28 NA NA 23  9 NA NA 143 135 NA NA #>        Casaburi, 2000  1  8 NA NA 41 45 NA NA 18 12 NA NA 191 279 NA NA #>       van Noord, 2000  1  7 NA NA 18 11 NA NA  8  7 NA NA  50  47 NA NA #>         Rennard, 2001  1  7 NA NA 41 38 NA NA 29 22 NA NA 135 132 NA NA"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"network-plot","dir":"","previous_headings":"Example","what":"Network plot","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Create network plot using netplot function:","code":"# The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\", \"fluticasone\", \"fluticasone plus salmeterol\", \"formoterol\", \"salmeterol\", \"tiotropium\")  netplot(data = nma.baker2009, drug_names = interv_names, show_multi = TRUE, edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"perform-bayesian-random-effects-network-meta-analysis","dir":"","previous_headings":"Example","what":"Perform Bayesian random-effects network meta-analysis","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"following code performs Bayesian random-effects network meta-analysis missing random assumption using intervention-specific informative missingness odds ratio (assumption = \"IDE-ARM\") logarithmic scale:","code":"res <- run_model(data = nma.baker2009,                  measure = \"OR\",                  model = \"RE\",                  assumption = \"IDE-ARM\",                  heter_prior = list(\"halfnormal\", 0, 1),                  mean_misspar = c(0, 0),                   var_misspar = 1,                  D = 0,                  n_chains = 3,                  n_iter = 10000,                  n_burnin = 1000,                  n_thin = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"league-table","dir":"","previous_headings":"Example","what":"League table","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"Illustrate possible pairwise comparisons interventions using league heatmap. Interventions sorted decreasing order posterior mean SUCRA (surface cumulative ranking) value main diagonal:","code":"league_heatmap(full1 = res, drug_names1 = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/index.html","id":"rankogram-with-sucra-curves","dir":"","previous_headings":"Example","what":"Rankogram with SUCRA curves","title":"Bayesian Network Meta-Analysis with Missing Participants ","text":"following code presents hierarchy interventions network using integrated rankograms SUCRA curves:","code":"rankosucra_plot(full1 = res, drug_names1 = interv_names)"},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced balloon plot — balloon_plot","title":"Enhanced balloon plot — balloon_plot","text":"Creates enhanced balloon plot summary effect size   -trial standard deviation, tau, different scenarios   missingness parameter pair interventions.   balloon_plot uses scenarios considered   run_sensitivity.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced balloon plot — balloon_plot","text":"","code":"balloon_plot(sens, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced balloon plot — balloon_plot","text":"sens object S3 class run_sensitivity. See 'Value' run_sensitivity. compar character vector two elements indicating pairwise comparison interest. first element refers 'experimental' second element 'control' intervention comparison. drug_names vector labels name interventions order appear argument data run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced balloon plot — balloon_plot","text":"balloon_plot returns two enhanced balloon plots one   comparison (see 'Details'): plot_effect_size enhanced balloon plot   summary effect size (according argument measure inherited   run_sensitivity) one pairwise comparison. plot_tau enhanced balloon plot tau.   fixed-effect model performed run_sensitivity,   function return plot_tau.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Enhanced balloon plot — balloon_plot","text":"plot_effect_size selected pairwise comparison,   different colours sizes bubbles reflect   posterior standard deviation posterior mean, respectively.   colour key appears plot. size bubble proportional   corresponding posterior mean.   Crossed bubbles indicate scenarios conclusive evidence (  95% credible interval excludes null value), filled bubbles   indicate scenarios inconclusive evidence (95% credible interval   includes null value). missing--random assumption (primary   analysis) labeled white frame.   axes illustrate scenarios specified argument   mean_scenarios run_sensitivity:   x-axis refers 'experimental' intervention, y-axis refers   'control' intervention. enhanced balloon plot created tau (plot_tau).   However, filled bubbles indicate low statistical heterogeneity   (posterior median tau lower median   prior distribution heterogeneity parameter),   crossed bubbles indicate considerable statistical heterogeneity   (posterior median tau exceeds median prior   distribution heterogeneity parameter). balloon_plot can used missing participant   outcome data extracted least one trial.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enhanced balloon plot — balloon_plot","text":"Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--490. doi: https://doi.org/10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Enhanced balloon plot — balloon_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/balloon_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced balloon plot — balloon_plot","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_taylor.rds',                     package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"inositol\")  # Create the enhanced balloon plot for 'inositol versus placebo' balloon_plot(sens = res_sens,              compar = c(\"inositol\", \"placebo\"),              drug_names = interv_names) #> $plot_effect_size  #>  #> $plot_tau  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The baseline model for binary outcome — baseline_model","title":"The baseline model for binary outcome — baseline_model","text":"process elements argument base_risk   run_model function. also runs hierarchical baseline   model, separately relative effects model described   Dias et al. (2018) Dias et al. (2013b). output passed   run_model run_metareg obtain   (unadjusted adjusted, respectively) absolute risks   intervention dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The baseline model for binary outcome — baseline_model","text":"","code":"baseline_model(base_risk, n_chains, n_iter, n_burnin, n_thin)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The baseline model for binary outcome — baseline_model","text":"base_risk scalar, vector length three elements sorted ascending order, matrix two columns number rows equal number relevant trials. case scalar vector, elements interval (0, 1). matrix, first column refers number events second column sample size trials comprising dataset baseline model. See 'Details' run_model. argument relevant binary outcome. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The baseline model for binary outcome — baseline_model","text":"base_risk scalar (fixed baseline), function   returns user-defined baseline selected reference intervention   logit scale. base_risk vector (random baseline),   function returns vector calculated logit event   selected reference intervention precision. Finally,  base_risk matrix (predicted baseline), function returns   following elements: ref_base vector posterior mean precision   predicted logit event selected reference intervention.   vector passed run_model   run_metareg. figure forest plot trial-specific observed estimated   baseline risk. See 'Details'. table_baseline table posterior predictive   distribution summary baseline mean posterior distribution   -trial standard deviation baseline. results   logit scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The baseline model for binary outcome — baseline_model","text":"base_risk matrix, baseline_model creates   hierarchical baseline model JAGS dialect BUGS language.   output function (see 'Value') constitutes   posterior mean precision predicted logit event   selected reference intervention plugged WinBUGS code   relative effects model (Dias et al., 2013a) via   prepare_model function. Following (Dias et al., 2013a),   uniform prior distribution assigned -trial standard   deviation upper lower limit equal 0 5, respectively. base_risk matrix, function also returns forest plot   estimated trial-specific probability event 95% credible   intervals (random effects) alongside corresponding observed   probability event selected reference intervention. grey   rectangular illustrates summary mean 95% credible interval   random effects. base_risk matrix (predicted baseline), model   updated convergence using autojags   function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The baseline model for binary outcome — baseline_model","text":"Dias S, Ades AE, Welton NJ, Jansen JP, Sutton AJ. Network Meta-Analysis Decision Making. Chichester (UK): Wiley; 2018. Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013a;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013b;33(5):657--70. doi: 10.1177/0272989X13485155","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/baseline_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The baseline model for binary outcome — baseline_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"The Bland-Altman plot — bland_altman_plot","title":"The Bland-Altman plot — bland_altman_plot","text":"function facilitates creating Bland-Altman plot  posterior mean deviance contribution two models using three  arguments.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Bland-Altman plot — bland_altman_plot","text":"","code":"bland_altman_plot(model1, model2, colour)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Bland-Altman plot — bland_altman_plot","text":"model1 vector numeric values target model (instance, consistency model). model2 vector numeric values reference model (instance, unrelated mean effects model). colour string define colour data points plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Bland-Altman plot — bland_altman_plot","text":"Bland-Altman plot posterior mean deviance contribution  individual data points model 1 model 2.  data point corresponds trial-arm indicated pair numbers.  first number refers position trial dataset,  second arm refers corresponding trial-arm (see 'Arguments'  'Value' data_preparation).  plot also displays average bias 95% limits agreement  horizontal solid black lines.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Bland-Altman plot — bland_altman_plot","text":"bland_altman_plot integrated ume_plot   create Bland-Altman plot posterior mean deviance   consistency model (via run_model)   unrelated mean effects model (via run_ume). uniform scattering data points within 95% limits agreement   average bias close 0 indicate compared models good   agreement. Data points positioned 95% limits   agreement correspond trials contribute poor fit   consistency model unrelated mean effects model, respectively. bland_altman_plot can used compare following models   regarding deviance contribution: consistency model (via run_model)    unrelated effect means model (via run_ume); network meta-analysis model (via run_model)    network meta-analysis model (via run_metareg).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Bland-Altman plot — bland_altman_plot","text":"Bland JM, Altman DG. Measuring agreement method comparison studies. Stat Methods Med Res 1999;8:135--60. doi: 10.1177/096228029900800204","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/bland_altman_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Bland-Altman plot — bland_altman_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"comp_clustering hosts toolkit functions facilitates   conducting, visualising evaluating hierarchical agglomerative   observed comparisons interventions specific network set   characteristics act effect modifiers. also calculates   non-statistical heterogeneity within-comparisons -comparisons   using dissimilarities among trials network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"","code":"comp_clustering(   input,   drug_names,   threshold,   informative = TRUE,   ranged_values = FALSE,   optimal_clusters,   get_plots = \"none\",   label_size = 4,   title_size = 14,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 13,   str_wrap_width = 10 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first three columns refer trial name, first second arm comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns. drug_names vector labels name interventions order defined argument input. threshold positive scalar indicate cut-low dissimilarity two comparisons. value much low. informative Logical TRUE evaluating comparison dissimilarity FALSE performing hierarchical agglomerative clustering, thus, allowing user define number clusters via argument optimal_clusters. default argument TRUE. ranged_values Whether use colour scale creating heatmap within-comparison -comparison dissimilarities (TRUE) colour cells green orange, exceeding specified threshold. Relevant informative = TRUE. default argument FALSE. optimal_clusters positive integer optimal number clusters, ideally, decided inspecting profile plot average silhouette widths range clusters, dendrogram. user must define value. takes values two number trials minus one. get_plots Logical values TRUE returning plots FALSE concealing plots. default argument FALSE. label_size positive integer font size labels violin plot study dissimilarities per comparison comparison comparisons. label_size determines size argument found geom's aesthetic properties R-package ggplot2. title_size positive integer font size legend title stacked barplot percentage studies comparison found clusters. title_size determines title argument found theme's properties R-package ggplot2. axis_title_size positive integer font size axis title violin plot study dissimilarities per comparison comparison comparisons, barplot percentage trials per comparison cluster. axis_title_size determines axis.title argument found theme's properties R-package ggplot2. axis_text_size positive integer font size axis text violin plot study dissimilarities per comparison comparison comparisons, heatmap comparison dissimilarity, barplot percentage trials per comparison cluster. axis_text_size determines axis.text argument found theme's properties R-package ggplot2. axis_x_text_angle positive integer angle axis text violin plot study dissimilarities per comparison comparison comparisons. axis_x_text_angle determines axis.text.x argument found theme's properties R-package ggplot2. legend_text_size positive integer font size legend text barplot percentage trials per comparison cluster. legend_text_size determines legend.text argument found theme's properties R-package ggplot2. str_wrap_width positive integer wrapping axis labels violin plot study dissimilarities per comparison comparisons. str_wrap_width determines str_wrap function R-package stringr.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Initially, comp_clustering prints console following   messages: number observed comparisons (number single-study   comparisons, ); number dropped characteristics due many   missing data; maximum value cophenetic correlation coefficient;   optimal linkage method selected based cophenetic correlation   coefficient. , function returns following list elements: Trials_diss_table lower -diagonal matrix 'dist' class   Gower dissimilarities pairs studies network. Comparisons_diss_table lower -diagonal matrix 'dist' class   within-comparison dissimilarities main diagonal   -comparison dissimilarities pairs observed   intervention comparisons -diagonal elements. Total_dissimilarity data-frame observed comparisons   comparisons comparisons, alongside corresponding   within-comparison -comparisons dissimilarity. data-frame   sorted decreasing within dissimilarity 'type'. Types_used data-frame type mode (.e., double integer)   characteristic. Total_missing percentage missing cases dataset,   calculated ratio total missing cases product number   studies number characteristics. Cluster_comp data-frame studies cluster   belong (based argument optimal_clusters. Table_average_silhouette_width data-frame average   silhouette width range 2 P-1 trials, P number   trials. Table_cophenetic_coefficient data-frame cophenetic   correlation coefficient eight linkage methods (Ward's two   versions, single, complete, average, Mcquitty, median centroid).   data-frame sorted decreasing order cophenetic correlation   coefficient. Optimal_link optimal linkage method (ward.D, ward.D2, single,   complete, average, mcquitty, median, centroid) based cophenetic   correlation coefficient. get_plots = FALSE list elements mentioned   returned. get_plots = TRUE, comp_clustering returns   series plots addition list elements mentioned : Within_comparison_dissimilarity violin plot integrated box   plots dots study dissimilarities per observed comparison   (x-axis). Violins sorted descending order within-comparison   dissimilarities (blue point). Between_comparison_dissimilarity violin plot integrated box   plots dots study dissimilarities per comparison   comparisons (x-axis). Violins sorted descending order   -comparison dissimilarities (blue point). Dissimilarity_heatmap heatmap within-comparison   -comparison dissimilarities (informative = TRUE).   Diagonal elements refer within-comparison dissimilarity,   -diagonal elements refer -comparisons dissimilarity. Using   threshold high similarity (specified using argument   threshold), cells equal threshold highlighted   orange; otherwise, green. heatmap aids finding 'hot spots'   comparisons may violate plausibility transitivity   network. Single-study comparisons indicated white numbers. Profile_plot profile plot average silhouette width   range 2 P-1 clusters, P number trials.   candidate optimal number  clusters indicated red point   directly line. Silhouette_width_plot silhouette plot illustrating silhouette   width trial, trials sorted decreasing order within   cluster belong. output obtained calling   silhouette function R-package   cluster. Barplot_comparisons_cluster stacked barplot percentage   trials comparison found clusters (based argument   optimal_clusters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"correct type mode columns input must ensured use   function comp_clustering. first three columns referring   trial name, first second arm comparison, respectively, must   character. remaining columns referring   characteristics must double integer depending   whether corresponding characteristic refers quantitative   qualitative variable. type mode column assessed   comp_clustering using base function typeof. Note   comp_clustering invites unordered ordered variables;   latter, add argument ordered = TRUE base function   factor(). interventions sorted ascending order   identifier number within trials first intervention column   (second column input) control arm every pairwise   comparison. important ensure consistency intervention   order within comparisons obtained related functions. comp_clustering excludes dataset following type   characteristics: () completely missing characteristics   (ii) characteristics missing values one studies   least one non-single-stufy comparison. proceeds clustering   process. cophenetic correlation coefficient calculated using   cophenetic function alongside   hclust function selected linkage methods. comp_clustering can used network least three   comparisons. Otherwise, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Gower J. General Coefficient Similarity Properties. Biometrics 1971;27(4):857--71. doi: 10.2307/2528823 Sokal R, Rohlf F. Comparison Dendrograms Objective Methods. Int Assoc Plant Taxon 1962;11(2):33--40. doi: 10.2307/1217208 Handl J, Knowles J, Kell DB. Computational cluster validation post-genomic data analysis. Biometrics 2005;21(15):3201--120. doi: 10.1093/bioinformatics/bti517 Rousseeuw PJ. Silhouettes: graphical aid interpretation validation cluster analysis. J Comput Appl Math 1987;20:53--65.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/comp_clustering.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for comparison dissimilarity and hierarchical clustering\n(Comparisons' comparability for transitivity evaluation) — comp_clustering","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare the dataset in the proper format for R2jags — data_preparation","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data_preparation prepares dataset proper format   R2jags returns list elements run_model inherits   via argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"","code":"data_preparation(data, measure)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data data-frame one-trial-per-row format arm-level data. See 'Format' run_model. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"list data-frames following elements passed   run_model: pseudo_m pseudo-data-frame values -1 m   corresponding trial-arms unreported reported missing participant   outcome data, respectively (see 'Details'). m number missing participant outcome data   trial-arm (see 'Details'). N number randomised participants trial-arm. t intervention identifier trial-arm. pseudo-data-frame indicates whether missing participant   outcome data reported observed trial-arm   (see 'Details'). measure effect measure analysed outcome. y0 observed mean value outcome trial-arm,   outcome continuous. se0 observed standard deviation outcome   trial-arm, outcome continuous. r number observed events outcome   trial-arm, outcome binary.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"data_preparation prepares data Bayesian analysis   (See 'Format' run_model). data_preparation   creates pseudo-data-frames m_new, , m_pseudo   dimensions element N. m_new takes   zero value observed trial-arms unreported missing   participant outcome data (.e., m equals NA   corresponding trial-arms), value m observed   trial-arms reported missing participant outcome data, NA   unobserved trial-arms. dummy data-frame takes   value one observed trial-arms reported missing participant   outcome data, zero value observed trial-arms unreported   missing participant outcome data (.e., m_new equals zero   corresponding trial-arms), NA unobserved trial-arms.   Thus, indicates whether missing participant outcome data   collected observed trial-arms. user defined   element m data_preparation, m_new   take zero value observed trial-arms indicate missing   participant outcome data collected analysed outcome.   m_new used following functions   package: run_model, run_metareg,   prepare_model, run_nodesplit,   prepare_nodesplit, run_ume,   prepare_ume,  run_sensitivity.   Lastly, m_pseudo variant m_new: takes value -1   observed trial-arms unreported missing participant outcome   data (.e., m equals NA corresponding trial-arms),   value m observed trial-arms reported   missing participant outcome data, NA unobserved   trial-arms. used function heatmap_missing_network   calculate illustrate percentage missing participant outcome data   across observed comparisons interventions network   function heatmap_missing_dataset illustrate trial-arms   unreported missing participant outcome data. pseudo-data-frames   aim retain trials without information missing participant outcome   data. Furthermore, data_preparation sorts interventions across   arms trial ascending order correspondingly   remaining elements data (See 'Format'   run_model). data_preparation considers first   column t control arm every trial. Thus,   sorting ensures interventions lower identifier   consistently treated control arm trial. case   relevant non-star-shaped networks.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/data_preparation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare the dataset in the proper format for R2jags — data_preparation","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"dendro_heatmap creates dendrogram alongside heatmap   Gower dissimilarities among trials network specific   linkage method number clusters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"","code":"dendro_heatmap(input, label_size = 12, axis_text_size = 10)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"input object S3 class comp_clustering. See 'Value' comp_clustering. label_size positive integer font size heatmap elements. label_size determines size argument found geom's aesthetic properties R-package ggplot2. axis_text_size positive integer font size row column names heatmap. axis_text_size determines axis.text argument found theme's properties R-package ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"dendro_heatmap uses heatmaply function R-package  heatmaply create   cluster heatmap selected linkage method number clusters.   function uses different colours indicate clusters directly   dendrogram, specified using R-package  dendextend. names   leaves refer trials corresponding pairwise comparison. @details    function inherits linkage method number optimal clusters    comp_clustering function. Remember: using comp_clustering function, inspect    average silhouette width wide range clusters decide    optimal number clusters.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/dendro_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dendrogram with amalgamated heatmap\n(Comparisons' comparability for transitivity evaluation) — dendro_heatmap","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to describe the evidence base — describe_network","title":"A function to describe the evidence base — describe_network","text":"Calculates necessary elements describe evidence base   outcome across network, interventions, observed   comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to describe the evidence base — describe_network","text":"","code":"describe_network(data, drug_names, measure, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to describe the evidence base — describe_network","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions order appear argument data. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to describe the evidence base — describe_network","text":"describe_network returns following data-frames describe   evidence base: network_description number : interventions, possible   comparisons, direct indirect comparisons, number trials total,   number two-arm multi-arm trials, number randomised participants,   proportion participants completing trial (completers).   outcome binary, number trials least one zero   event, number trials zero events also   presented. table_interventions intervention, number trials,   number randomised participants, proportion completers.   outcome binary, data-frame presents also corresponding   proportion total observed events, minimum, median maximum   proportion observed events across corresponding trials. table_comparisons Identical structure table_interventions   observed comparison network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to describe the evidence base — describe_network","text":"describe_network calls data_preparation   facilitate calculations. Furthermore, describe_network exports data-frames separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/describe_network.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to describe the evidence base — describe_network","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"distr_characteristics uses violin bar plots visualise   distribution characteristic dataset either per comparison   cluster comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"","code":"distr_characteristics(   input,   drug_names,   rename_char = NULL,   cluster = NULL,   label_size = 4,   title_size = 14,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 13 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first three columns refer trial name, first second arm comparison (identifier number), respectively. remaining columns refer summary characteristics. See 'Details' specifying columns. drug_names vector labels name interventions order appear argument input. rename_char list two elements: () numeric vector position characteristics input, (ii) character vector names characteristics, wished appear title plots. argument optional, case user wants control appearance titles. cluster object S3 class comp_clustering information cluster comparison. See 'Value' comp_clustering. cluster provided, function presents distribution characteristics per comparison; otherwise per cluster. latter, function prints table comparisons corresponding cluster. label_size positive integer font size labels plots. label_size determines size argument found geom's aesthetic properties R-package ggplot2). title_size positive integer font size legend title plots. title_size determines title argument found theme's properties R-package ggplot2. axis_title_size positive integer font size axis title plots. axis_title_size determines axis.title argument found theme's properties R-package ggplot2. axis_text_size positive integer font size axis text plots. axis_text_size determines axis.text argument found theme's properties R-package ggplot2). axis_x_text_angle positive integer angle axis text plots. axis_text_angle determines axis.text.x argument found theme's properties R-package ggplot2). legend_text_size positive integer font size legend text plots. legend_text_size determines legend.text argument found theme's properties R-package ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"distr_characteristics returns list plots using proper plot   (violin bar plot) characteristic. size dots   violin plot (amalgamated box plots dots) proportional   total sample size study: large sample size study,   larger size corresponding point.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"correct type mode columns input must ensured use   function distr_characteristics. first three columns   referring trial name, first second arm comparison,   respectively, must character. remaining columns referring   characteristics must double integer   depending whether corresponding characteristic refers   quantitative qualitative variable. type mode column   assessed distr_characteristics using base function   typeof. interventions sorted ascending order   identifier number within trials first treatment column   (second column input) control arm every pairwise   comparison. important ensure consistency order   interventions within comparisons obtained related   functions.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/distr_characteristics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualising the distribution of characteristics\n(Comparisons' comparability for transitivity evaluation) — distr_characteristics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparator-specific forest plot for network meta-analysis — forestplot","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Provides forest plot posterior median 95% credible   prediction intervals comparisons selected intervention   (comparator) network, forest plot corresponding   SUCRA values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"","code":"forestplot(full, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"full object S3 class run_model. See 'Value' run_model. compar character indicate comparator intervention. must name found drug_names. drug_names vector labels name interventions order appear argument data run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"panel two forest plots: (1) forest plot effect   estimates predictions comparisons selected intervention   network, (2) forest plot posterior mean 95% credible   interval SUCRA values interventions (Salanti et al., 2011).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"y-axis forest plot effect sizes displays   labels interventions network; selected intervention   comprises compar argument annotated plot   label 'Comparator intervention'.   comparison selected intervention, 95% credible   prediction intervals displayed overlapping lines different   colours. corresponding numerical results displayed line:   95% credible intervals found parentheses, 95% predictive   intervals found brackets. Odds ratios, relative risks, ratio   means reported original scale exponentiation   logarithmic scale. y-axis forest plot SUCRA values displays   labels interventions network.   corresponding numerical results displayed line.   Three coloured rectangles appear forest plot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. plots, interventions sorted descending order   SUCRA values. forestplot can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparator-specific forest plot for network meta-analysis — forestplot","text":"","code":"data(\"nma.liu2013\")  # Show the first six trials of the dataset (one-trial-per-row format) head(nma.liu2013) #>                study t1 t2 t3 r1 r2 r3 m1 m2 m3  n1  n2 n3 #> 356    Richard, 2012  1  3  4 15 16 23  6  8  4  39  42 34 #> 357     Barone, 2010  1  2 NA 27 38 NA 19 20 NA 152 144 NA #> 358 Weinbtraub, 2010  1  3 NA  2  5 NA  6  6 NA  27  28 NA #> 359      Menza, 2009  1  4  5  4  2  9  6  7  5  17  18 17 #> 360      Devos, 2008  1  4  5  4  8 11  0  2  1  16  15 17 #> 361   Antonini, 2006  4  5 NA 10  8 NA  4  4 NA  16  15 NA  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine reuptake inhibitor\", \"serotonin reuptake inhibitor\", \"tricyclic antidepressant\", \"pergolide\")  # Create the forest plot forestplot(full = res,            compar = \"placebo\",            drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Provides forest plot posterior median 95% credible   prediction intervals comparisons selected intervention   (comparator) network network meta-analysis   network meta-regression specified level value investigated   covariate, forest plot corresponding SUCRA values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"","code":"forestplot_metareg(full, reg, compar, cov_value, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. compar character indicate comparator intervention. must name found drug_names. cov_value list two elements following order: number covariate value interest (see 'Arguments' run_metareg), character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"panel two forest plots: (1) forest plot effect   estimates predictions comparisons selected intervention   network network meta-analysis network meta-regression   specified level value investigated covariate, (2) forest   plot posterior mean 95% credible interval SUCRA values   interventions (Salanti et al., 2011).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"y-axis forest plot effect sizes displays   labels interventions network; selected intervention   comprises compar argument annotated plot   label 'Comparator intervention'.   comparison selected intervention, 95% credible   prediction intervals displayed overlapping lines. Black lines refer   estimation analyses. Green red lines refer prediction   network meta-analysis network meta-regression, respectively.   corresponding numerical results displayed line:   95% credible intervals found parentheses, 95% predictive   intervals found brackets. Odds ratios, relative risks, ratio   means reported original scale exponentiation   logarithmic scale. y-axis forest plot SUCRA values displays   labels interventions network.   corresponding numerical results displayed line.   Three coloured rectangles appear forest plot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. plots, interventions sorted descending order   SUCRA values based network meta-analysis. obtain posterior distribution SUCRAs network   meta-regression specified level value investigated   covariate, two-step procedured followed. First, posterior median   standard deviation basic parameters corresponding beta   coefficients considered calculate meadin standard deviation   basic parameters selected level value investigated   covariate: d + beta * cov_value. , calculated values fed   BUGS code get posterior distribution SUCRA. progress   simulation appears R console. forestplot_metareg integrated metareg_plot. forestplot_metareg can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi:10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/forestplot_metareg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Comparator-specific forest plot for network meta-regression — forestplot_metareg","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"gower_distance calculate Gower's dissimilarity coefficient    pairs trials included network interventions, considering    several characteristics measured trial level.    takes values 0 1, 0 implying complete similarity 1   complete dissimilarity.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"","code":"gower_distance(input)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first two columns refer trial name, pairwise comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"gower_distance returns following list elements: Dissimilarity_table lower -diagonal matrix 'dist' class   dissimilarities pairs trials. Types_used data-frame type mode (.e., double integer)   characteristic. Total_missing percentage missing cases comparison,   calculated ratio total missing cases product number   studies number characteristics.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"correct type mode columns input must ensured use   function gower_distance. first two columns referring   trial name, pairwise comparison, respectively, must   character. remaining columns referring   characteristics must double integer depending   whether corresponding characteristic refers quantitative   qualitative variable. type mode column assessed   gower_distance using base function typeof. Note   gower_distance invites unordered ordered variables;   latter, add argument ordered = TRUE base function   factor(). gower_distance integrated function   comp_clustering.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"Gower J. General Coefficient Similarity Properties. Biometrics 1971;27(4):857--71. doi: 10.2307/2528823","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/gower_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gower's dissimilarity measure\n(Trials' comparability for transitivity evaluation) — gower_distance","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Illustrates proportion missing participants   associated risk bias arm every trial dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"","code":"heatmap_missing_dataset(data, trial_names, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. trial_names vector labels name trials order appear argument data. drug_names vector labels name interventions order appear argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"heatmap presenting proportion missing participants   trial-arm dataset. columns rows heatmap   correspond interventions trials, respectively.   'five--twenty' rule Sackett colleagues (1997) used   characterise proportion missing participants associated   low (5%), moderate (5% 20%), high   risk bias (20%). Low, moderate, high risk bias due   missing participants indicated using green, orange, red colour,   respectively. function also applicable pairwise meta-analysis.   missing participants reported trial-arm,   corresponding cell indicated grey.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"number missing participants extracted   arm trials, execution function stopped   error message printed R console. 80 trials, value proportion missing   participants appear heatmap. number   cells distinguishable.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Sackett DL, Richardson WS, Rosenberg WM, Haynes RB. Evidence-based medicine: practice teach EBM. New York: Churchill Livingstone 1997. ISBN: 0-443-05686-2.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of proportion of missing participants in the dataset — heatmap_missing_dataset","text":"","code":"data(\"nma.schwingshackl2014\")  # Return the first six trials of the dataset head(nma.schwingshackl2014) #>            study t1 t2 t3    y1    y2 y3  sd1  sd2 sd3 m1 m2 m3 n1 n2 n3 #> 1   Bacchi, 2012  1  2 NA -0.40 -0.35 NA 0.44 0.48  NA  1  1 NA 20 20 NA #> 2       Ku, 2010  1  2 NA -0.60 -0.30 NA 1.20 0.90  NA  0  0 NA 15 13 NA #> 3      Moe, 2011  1  2 NA -0.53 -0.35 NA 0.45 0.40  NA  1  2 NA 13 13 NA #> 4       Ng, 2010  1  2 NA -0.30 -0.40 NA 0.88 0.60  NA  0  0 NA 30 30 NA #> 5   Sukala, 2012  1  2 NA -0.10 -0.10 NA 0.51 0.93  NA  4  4 NA 13 13 NA #> 6 Balducci, 2009  1  3 NA  6.34  6.65 NA 0.94 1.08  NA  0  0 NA 20 22 NA  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"aerobic\", \"resistance\", \"combined training\")  # Create the heatmap heatmap_missing_dataset(data = nma.schwingshackl2014,                         trial_names = nma.schwingshackl2014$study,                         drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Illustrates distribution missing participants   associated risk bias intervention observed comparison   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"","code":"heatmap_missing_network(data, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions order appear argument data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"heatmap proportion missing participants   intervention observed comparison network. cell annotates   median, minimum maximum (latter two parenthesis) proportion   missing participants across corresponding trials.   proportion missing participants intervention observed   comparison depicted main diagonal lower -diagonal   white black colour, respectively. pairwise comparisons read   left right. 'five--twenty' rule Sackett colleagues (1997) used   characterise median proportion missing participants   associated low (5%), moderate (5% 20%),   high risk bias (20%). Low, moderate, high risk   bias associated missing participants indicated using green, orange,   red colour, respectively. missing participants   reported intervention comparison, corresponding cell   indicated grey. summary statistics (median, minimum maximum) intervention   (main diagonal; white font) result calculating proportion   missing participants arm every trial summarising across   corresponding trial-arms. Similarly, summary statistics   observed comparison (lower -diagonal; black font) result   calculating proportion total missing participants trial   summarising across corresponding trials.  heatmap_missing_network can used network   interventions. Otherwise, execution function stopped   error message printed R console. Likewise,   number missing participants extracted arm   trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Sackett DL, Richardson WS, Rosenberg WM, Haynes RB. Evidence-based medicine: practice teach EBM. New York: Churchill Livingstone 1997. ISBN: 0-443-05686-2.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_missing_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of proportion of missing participants in the network — heatmap_missing_network","text":"","code":"data(\"nma.stowe2011\")  # Return the first six trials of the dataset head(nma.stowe2011) #>                study t1 t2    y1    y2  sd1  sd2 m1 m2  n1  n2 #> 1   DA (B): Interntl  1  2 -0.30 -1.20 4.36 4.32  7  3  83  84 #> 2      DA (C): Spain  1  2 -2.47 -3.33 3.91 3.48  8  9  20  23 #> 3         DA (C): UK  1  2 -0.70 -2.00 2.24 2.33  2  1  18  19 #> 4      DA (C): USA 1  1  2 -0.77 -2.08 3.32 3.21 19 34  65 123 #> 5 DA (Pe): N America  1  2 -0.20 -1.80 4.79 4.81  0  0 187 189 #> 6 DA (Pr): CLEOPATRA  1  2 -0.90 -2.80 5.00 2.83  1  1 101 201  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"PBO+LD\", \"DA+LD\", \"COMTI+LD\", \"MAOBI+LD\")  # Create the heatmap heatmap_missing_network(data = nma.stowe2011,                         drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of robustness — heatmap_robustness","title":"Heatmap of robustness — heatmap_robustness","text":"Facilitates detection comparisons associated   lack robustness context sensitivity analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of robustness — heatmap_robustness","text":"","code":"heatmap_robustness(robust, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of robustness — heatmap_robustness","text":"robust object S3 class robustness_index robustness_index_user. See 'Value' robustness_index robustness_index_user. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of robustness — heatmap_robustness","text":"heatmap_robustness first prints R console message   threshold robustness determined user  robustness_index robustness_index_user.   , returns lower triangular heatmap matrix robustness   index value possible pairwise comparisons.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap of robustness — heatmap_robustness","text":"heatmap illustrates robustness index possible   pairwise comparison network. pairwise comparisons read   left right. Comparisons highlighted green red colour imply   robust frail conclusions primary analysis, respectively.   corresponds robustness index least selected   threshold robustness. heatmap_robustness inherits threshold   robustness selected robustness_index   robustness_index_user function.   robustness index pairwise comparison also appears   corresponding cell.   least one comparison frail conclusions, primary   analysis results may questionable whole network   (Spineli et al., 2021). heatmap_robustness restricted sensitivity   analysis concerning impact missing participant outcome data. heatmap_robustness can used network interventions.   Otherwise, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Heatmap of robustness — heatmap_robustness","text":"Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap of robustness — heatmap_robustness","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heatmap_robustness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of robustness — heatmap_robustness","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_baker.rds',                     package = 'rnmamod'))  # Calculate the robustness index robust <- robustness_index(sens = res_sens,                            threshold = 0.28) #> The value 0.28 was assigned as 'threshold' for odds ratio.  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Create the heatmap of robustness heatmap_robustness(robust = robust,                    drug_names = interv_names) #> The value 0.28 was assigned as 'threshold' for odds ratio."},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Generates prior distribution (weakly informative empirically-based)   heterogeneity parameter.   run_model inherits heterogeneity_param_prior via   argument heter_prior.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"","code":"heterogeneity_param_prior(measure, model, heter_prior)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". heter_prior list three elements following order: 1) character string indicating distribution (currently available) values \"halfnormal\", \"uniform\", \"lognormal\", \"logt\"; 2) two numeric values refer parameters selected distribution.  \"lognormal\", \"logt\" numbers refer mean precision, respectively. \"halfnormal\", numbers refer zero scale parameter (equal 4 1 corresponding precision scale parameter 0.5 1). \"uniform\", numbers refer minimum maximum value distribution.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"value passed run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"names (current) prior distributions follow JAGS syntax.   mean precision \"lognormal\" \"logt\" align   values proposed Turner et al. (2015) Rhodes et al. (2015)   corresponding empirically-based prior distributions   measure \"\" \"SMD\", respectively.   users may refer Dias et al. (2013) determine minimum   maximum value uniform distribution, Friede et al. (2017)   determine mean precision half-normal distribution.   model \"FE\", heterogeneity_param_prior   ignored run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607--17. doi: 10.1177/0272989X12458724 Friede T, Roever C, Wandel S, Neuenschwander B. Meta-analysis two studies presence heterogeneity applications rare diseases. Biom J 2017;59(4):658--71. doi: 10.1002/bimj.201500236 Rhodes KM, Turner RM, Higgins JP. Predictive distributions developed extent heterogeneity meta-analyses continuous outcome data. J Clin Epidemiol 2015;68(1):52--60. doi: 10.1016/j.jclinepi.2014.08.012 Turner RM, Jackson D, Wei Y, Thompson SG, Higgins JP. Predictive distributions -study heterogeneity simple methods application Bayesian meta-analysis. Stat Med 2015;34(6):984--98. doi: 10.1002/sim.6381","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/heterogeneity_param_prior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine the prior distribution for the heterogeneity parameter — heterogeneity_param_prior","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the frail comparisons in multi-arm trials — improved_ume","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Detects frail comparisons multi-arm trials, ,   comparisons non-baseline interventions investigated   two-arm trial network (Spineli, 2021). 'original' model   Dias et al. (2013) omits frail comparisons estimation process   unrelated mean effects model. Consequently, posterior   distribution coincides prior distribution yielding implausible   posterior standard deviations.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"","code":"improved_ume(t, N, ns, na)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"t data-frame one-trial-per-row format containing intervention identifier arm every trial (see 'Details' , 'Format' run_model). N data-frame one-trial-per-row format containing number participants randomised assigned intervention arm every trial (see 'Details' , 'Format' run_model). ns scale parameter number trials. na vector length equal ns number arms trial.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"output improved_ume list elements   inherited run_ume: nbase_multi scalar parameter number frail comparisons. t1_bn vector numeric values referring first arm   frail comparison. t2_bn vector numeric values referring second arm   frail comparison. ref_base scalar referring reference intervention   subnetwork interventions frail comparisons. base vector numeric values referring baseline   intervention multi-arm trials contain frail comparisons. obs_comp data-frame indicates many two-arm   multi-arm trials included pairwise comparison observed   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"improved_ume integrated run_ume   calls output data_preparation sorting   rows multi-arm trials appear bottom dataset.   multi-arm trials frail comparisons network,   improved_ume returns element obs_comp   (see, 'Value').","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/improved_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect the frail comparisons in multi-arm trials — improved_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot currently prepares table results    average silhouette width range clusters, visualises    results using profile plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"","code":"internal_measures_plot(   input,   optimal_link,   label_size = 4,   axis_title_size = 14,   axis_text_size = 14 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"input object 'dist' class. lower -diagonal matrix dissimilarities pairs comparisons. optimal_link character string values \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\" optimal linkage method, corresponding highest cophenetic correlation coefficient value. label_size positive integer font size labels  profile plot average silhouette width per candidate cluster.  label_size determines size argument found geom's  aesthetic properties R-package ggplot2. axis_title_size positive integer font size axis title profile plot average silhouette width per candidate cluster.  axis_title_size determines axis.title argument found  theme's properties R-package ggplot2. axis_text_size positive integer font size axis text profile plot average silhouette width per candidate cluster.  axis_text_size determines axis.text argument found  theme's properties R-package  ggplot2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot currently returns following list    elements: Table_internal_measures data-frame average silhouette width    range 2 P-1 clusters, P number trials Internal_measures_panel profile plot average silhouette    width range 2 P-1 clusters, P number    trials candidate optimal number clusters indicated    red point directly line.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"internal_measures_plot also calls function   comp_clustering define argument optimal_link   create silhouette plot selected number clusters. internal_measures_plot calls     silhouette function R-package    cluster obtain   results average silhouette candidate cluster. internal_measures_plot integrated function    comp_clustering.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"Handl J, Knowles J, Kell DB. Computational cluster validation post-genomic data analysis. Biometrics 2005;21(15):3201--120. doi: 10.1093/bioinformatics/bti517 Rousseeuw PJ. Silhouettes: graphical aid interpretation validation cluster analysis. J Comput Appl Math 1987;20:53--65.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/internal_measures_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Internal measures for cluster validation\n(Comparisons' comparability for transitivity evaluation) — internal_measures_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Creates panel interval plots summary effect sizes   consistency model unrelated mean effects model.   number interval plots equals number pairwise comparisons   observed network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"","code":"intervalplot_panel_ume(full, ume, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"full object S3 class run_model. See 'Value' run_model. ume object S3 class run_ume. See 'Value' run_ume. drug_names vector labels name interventions order appear argument data run_model. argument drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"panel interval plots posterior mean 95% credible   interval summary effect size consistency model   improved unrelated mean effects model (Spineli, 2021) pairwise   comparisons observed network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"intervalplot_panel_ume integrated   ume_plot function. consistency model unrelated   mean effects model abbreviated y-axis 'NMA model'   'UME model', respectively. intervals highlighted green,   corresponding summary effect sizes cross vertical line   difference, red otherwise. Grey panels refer frail comparisons   detected improved_ume function (see 'Details'   improved_ume). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, intervalplot_panel_ume   currently presents results odds ratio scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/intervalplot_panel_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A panel of interval plots for the unrelated mean effects model — intervalplot_panel_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Produces barplot Kullback-Leibler divergence measure   re-analysis primary analysis pairwise   comparison. Currently, kld_barplot used concerning impact   missing participant outcome data.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"","code":"kld_barplot(robust, compar, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"robust object S3 class robustness_index. See 'Value' robustness_index. compar character vector two elements indicates pairwise comparison interest. first element refers 'experimental' intervention second element refers 'control' intervention comparison. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"kld_barplot returns panel barplots   Kullback-Leibler divergence measure re-analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"kld_barplot uses scenarios inherited   robustness_index via run_sensitivity   function. scenarios missingness parameter (see 'Details'   run_sensitivity) compared interventions split   Extreme, Sceptical, Optimistic following   classification Spineli et al. (2021). class, bars green,   orange, red colour refer scenarios without distance, less distant,   distant primary analysis   (missing--random assumption). kld_barplot can used missing participant outcome   data extracted least one trial. Otherwise, execution   function stopped error message printed   R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/kld_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot for the Kullback-Leibler divergence measure — kld_barplot","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_taylor.rds',                     package = 'rnmamod'))  # Calculate the robustness index robust <- robustness_index(sens = res_sens,                            threshold = 0.17) #> The value 0.17 was assigned as 'threshold' for standardised mean difference.  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"inositol\")  # Create the barplot for the comparison 'inositol versus placebo' kld_barplot(robust = robust,             compar = c(\"inositol\", \"placebo\"),             drug_names = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"League heatmap for estimation — league_heatmap","title":"League heatmap for estimation — league_heatmap","text":"one outcome, creates heatmap estimated effect measure   possible comparisons interventions network.   two outcomes, heatmap illustrates two outcomes   effect measure upper lower -diagonals   possible comparisons interventions network.   function can also used illustrate results two different   models outcome effect measure.   league_heatmap can used random-effects fixed-effect   network meta-analysis, network meta-regression, series pairwise   meta-analyses.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League heatmap for estimation — league_heatmap","text":"","code":"league_heatmap(   full1,   full2 = NULL,   cov_value = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL,   show = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League heatmap for estimation — league_heatmap","text":"full1 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. full2 object S3 class run_model network meta-analysis, run_metareg network meta-regression, run_series_meta series pairwise meta-analyses. See 'Value' run_model, run_metareg, run_series_meta. cov_value list two elements following order: number covariate value interest character name covariate. See also 'Details'. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome model full1. name2 text title results refer outcome model full2. show vector least three character strings refer names interventions exactly defined drug_names1. , league table created interventions . show defined, league table present interventions defined drug_names1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League heatmap for estimation — league_heatmap","text":"heatmap league table showing posterior median 95%   credible interval comparisons -diagonals,   posterior mean SUCRA values diagonal.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League heatmap for estimation — league_heatmap","text":"heatmap_league offers following options display   one estimated effect measure () pairwise comparisons: one outcome, results lower triangle referring    comparisons opposite direction converting negative values    positive values (absolute logarithmic scale), vice versa.    Comparisons interventions read left right.    Therefore, cell refers corresponding row-defining intervention    column-defining intervention.    Results indicate strong evidence favour    row-defining intervention (.e. respective 95% credible interval    include null value) indicated bold. message printed    R console read heatmap; two outcomes model, namely, network meta-analysis (via    run_model) network meta-regression (via    run_metareg).    one outcomes includes interventions, argument    full1 considered outcome.    Comparisons interventions read follows: upper    diagonal, cell refers corresponding row-defining intervention    column-defining intervention, lower diagonal,    cell refers corresponding column-defining intervention    row-defining intervention. Results indicate strong evidence (.e.    respective 95% credible interval include null value)    indicated bold. message printed R console read    heatmap; two models outcome, namely, network meta-analysis    versus network meta-regression, network meta-analysis versus series    pairwise meta-analyses.    instructions read heatmap line previous point.    message printed R console read heatmap. beneficial outcome, red favours first intervention   comparison, blue favours second intervention. harmful   outcome, blue favours first intervention comparison, red   favours second intervention. larger treatment effect,   darker colour shade. function displays effect measure inherited argument   full1. binary outcome, can display odds ratio,   relative risk, risk difference. See 'Details'   run_model relative risk, risk difference.   continuous outcome, can display mean difference, standardised   mean difference, ratio means. Odds ratios, relative risk ratio   means reported original scale exponentiation   logarithmic scale. rows columns heatmap display names   interventions  sorted decreasing order best worst   based SUCRA value (Salanti et al., 2011) outcome model   argument full1. -diagonals contain posterior   median 95% credible interval effect measure (according   argument measure inherited argument full1)   corresponding comparisons. main diagonal contains posterior mean SUCRA corresponding   interventions arguments full1 refers   run_model function. arguments full1   refers run_metareg function, p-score   (Ruecker Schwarzer, 2015) calculated intervention   taking account covariate value argument cov_value.   P-score 'frequentist analogue SUCRA'   (Ruecker Schwarzer, 2015). case network meta-regression, covariate binary,   specify second element cov_value name level   heatmap created. league_heatmap can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League heatmap for estimation — league_heatmap","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League heatmap for estimation — league_heatmap","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"League heatmap for estimation — league_heatmap","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the league heatmap league_heatmap(full1 = res,                drug_names1 = interv_names) #> Tips to read the table: row versus column."},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":null,"dir":"Reference","previous_headings":"","what":"League heatmap for prediction — league_heatmap_pred","title":"League heatmap for prediction — league_heatmap_pred","text":"one outcome, creates heatmap predicted effect measure   possible comparisons interventions network.   two outcomes, heatmap illustrates two outcomes   effect measure upper lower -diagonals possible   comparisons interventions network.   league_heatmap_pred can used random-effects   network meta-analysis network meta-regression.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League heatmap for prediction — league_heatmap_pred","text":"","code":"league_heatmap_pred(   full1,   full2 = NULL,   cov_value = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL,   show = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League heatmap for prediction — league_heatmap_pred","text":"full1 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. full2 object S3 class run_model network meta-analysis, run_metareg network meta-regression. See 'Value' run_model run_metareg. cov_value list two elements following order: number covariate value interest character name covariate. See also 'Details'. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome model full1. name2 text title results refer outcome model full2. show vector least three character strings refer names interventions exactly defined drug_names1. , league table created interventions . show defined, league table present interventions defined drug_names1.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League heatmap for prediction — league_heatmap_pred","text":"league heatmap posterior median 95% prediction interval   effect measure (according argument measure defined  run_model) possible comparisons -diagonals,   posterior mean SUCRA values diagonal.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League heatmap for prediction — league_heatmap_pred","text":"heatmap_league offers following options display   one estimated effect measure () pairwise comparisons: one outcome, results lower triangle referring    comparisons opposite direction converting negative values    positive values (absolute logarithmic scale), vice versa.    Darker shades red green correspond larger treatment effects    upper lower triangle, respectively, beneficial outcome,    vice versa harmful outcome. Comparisons interventions    read left right. Therefore, cell refers    corresponding row-defining intervention column-defining    intervention. Results indicate strong evidence favour    row-defining intervention (.e. respective 95% prediction interval    include null value) indicated bold. message printed    R console read heatmap; two outcomes model, namely, network meta-analysis (via    run_model) network meta-regression (via    run_metareg).    one outcomes includes interventions, argument    full1 considered outcome.    Comparisons interventions read follows: upper    diagonal, cell refers corresponding row-defining intervention    column-defining intervention, lower diagonal,    cell refers corresponding column-defining intervention    row-defining intervention. Results indicate strong evidence (.e.    respective 95% prediction interval include null value)    indicated bold. message printed R console read    heatmap; two models outcome, namely, network meta-analysis    versus network meta-regression. instructions read heatmap    line previous point. message printed R console    read heatmap. function displays effect measure inherited argument   full1. binary outcome, can display odds ratio,   relative risk, risk difference. See 'Details'   run_model relative risk, risk difference.   continuous outcome, can display mean difference, standardised   mean difference, ratio means. Odds ratios, relative risk ratio   means reported original scale exponentiation   logarithmic scale. rows columns heatmap display names interventions   sorted decreasing order best worst based   SUCRA value (Salanti et al., 2011) outcome model   argument full1. -diagonals contain posterior median   95% prediction interval effect measure (according argument   measure inherited argument full1)   corresponding comparisons. main diagonal contains SUCRA values corresponding   interventions argument full1 refers   run_model function.   argument full1 refers run_metareg   function, p-score (Ruecker Schwarzer, 2015) calculated   intervention taking account covariate value   argument cov_value. P-score 'frequentist analogue   SUCRA' (Ruecker Schwarzer, 2015). case network meta-regression, covariate binary,   specify second element cov_value name level   heatmap created. league_heatmap_pred can used network interventions.   case two interventions, execution function   stopped error message printed R console. Similarly,   function executed fixed-effect network meta-analysis   network meta-regression.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League heatmap for prediction — league_heatmap_pred","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League heatmap for prediction — league_heatmap_pred","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_heatmap_pred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"League heatmap for prediction — league_heatmap_pred","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the league heatmap league_heatmap_pred(full1 = res,                     drug_names1 = interv_names) #> Tips to read the table: row versus column."},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":null,"dir":"Reference","previous_headings":"","what":"League table for relative and absolute effects — league_table_absolute","title":"League table for relative and absolute effects — league_table_absolute","text":"Provides league table estimated odds ratio, risk difference   per 1000 participants possible comparisons interventions   network. main diagonal table presents absolute risk   intervention network. league_table_absolute can used   random-effects fixed-effect network meta-analysis. function   used user access raw trial-level data   (one-trial-per-row format arm-level data).   league_table_absolute applied one binary outcome .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League table for relative and absolute effects — league_table_absolute","text":"","code":"league_table_absolute(full, drug_names, show = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League table for relative and absolute effects — league_table_absolute","text":"full object S3 class run_model. See 'Value' run_model. drug_names vector labels name interventions order appear argument data run_model. show vector least three character strings refer names interventions exactly defined drug_names. , league table created interventions . show defined, league table present interventions defined drug_names.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League table for relative and absolute effects — league_table_absolute","text":"league table showing posterior estimate 95% credible   interval odds ratio (upper -diagonals), risk difference per 1000   participants (lower -diagonals), absolute risks per 1000   participants (main diagonal).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League table for relative and absolute effects — league_table_absolute","text":"user must define argument measure = \"RD\"   run_model; otherwise, function stopped   error message printed R console. rows columns league table display names   interventions  sorted decreasing order best worst   based SUCRA value (Salanti et al., 2011) odds ratio.   upper -diagonals contain posterior median 95% credible interval   odds ratio, lower -diagonals contain posterior median   95% credible interval risk difference (per 1000 participants),   main diagonal comprises posterior median 95% credible interval   absolute risks (per 1000 participants)  corresponding   interventions. reference intervention network (  baseline risk selected ) indicated main diagonal   black, thick frame. Comparisons interventions read left right.   Results indicate strong evidence favor row-defining   intervention (.e. respective 95% credible interval include   null value) indicated bold. obtain unique absolute risks intervention, network   meta-analysis model extended incorporate transitive risks   framework, namely, intervention absolute risk regardless   comparator intervention(s) trial (Spineli et al., 2017).   absolute risks function odds ratio (base-case   effect measure binary outcome) selected baseline risk   reference intervention (Appendix Dias et al., 2013). See 'Arguments'   run_model. advocate using odds ratio effect   measure desired mathematical properties. , risk difference   can obtained function absolute risks corresponding   interventions comparison interest. league_table_absolute can used network   interventions. case two interventions, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League table for relative and absolute effects — league_table_absolute","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):1891.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League table for relative and absolute effects — league_table_absolute","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":null,"dir":"Reference","previous_headings":"","what":"League table for relative and absolute effects (user defined) — league_table_absolute_user","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"line league_table_absolute, provides league table   estimated odds ratio, risk difference per 1000 participants   possible comparisons interventions network.   main diagonal table presents absolute risk   intervention network. league_table_absolute_user requires   users input summary effect 95% credible confidence interval   basic parameters reported effect measure. function   used user access results published   systematic review rather raw trial-level data. latter case,   user consider function league_table_absolute.   league_table_absolute_user applied one binary outcome .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"","code":"league_table_absolute_user(   data,   measure,   base_risk,   drug_names,   show = NULL,   save_xls )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"data data-frame summary effects comparisons reference intervention network, known basic parameters. data-frame T rows (T number interventions network) four columns contain point estimate, lower upper bound 95% (confidence credible) interval corresponding basic parameters, ranking measure indicate order interventions hierarchy best worst possible choices non-zero positive integer rank, SUCRA value (Salanti et al., 2011) p-score value (Ruecker Schwarzer, 2015). first row data-frame refers selected reference intervention include (1) null value three times investigated effect measure (.e. 1 odds ratio relative risk, 0 risk difference), (2) value ranking measure. measure Character string indicating effect measure data. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. base_risk number interval (0, 1) indicates baseline risk selected reference intervention. drug_names vector labels name interventions order appear argument data. first intervention selected reference intervention. show vector least three character strings refer names interventions exactly defined drug_names. , league table created interventions . show defined, league table present interventions defined drug_names. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"league table showing estimate 95% confidence interval   odds ratio (upper -diagonals), risk difference per 1000   participants (lower -diagonals), absolute risks per 1000   participants (main diagonal).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"published results reported relative risk scale   (.e., measure = \"RR\"), function calculates odds ratios risk   differences (point estimate 95% confidence interval) possible   pairwise comparisons network based obtained absolute risks   selected baseline risk. Likewise, published results   odds ratio risk difference scale (.e., measure = \"\"   measure = \"RD\", respectively), function calculates risk   differences odds ratios (point estimate 95% confidence interval),   respectively, possible pairwise comparisons network based   obtained absolute risks selected baseline risk. rows columns league table display names   interventions  sorted decreasing order best worst   based ranking measure fourth column argument   data. upper -diagonals contain estimate 95%   confidence interval odds ratio, lower -diagonals contain   estimate 95% confidence interval risk difference (per 1000   participants), main diagonal comprises absolute risks   95% confidence interval (per 1000 participants) corresponding   non-reference interventions. reference intervention network   (baseline risk selected ) indicated main   diagonal black, thick frame. Comparisons interventions read left right.   Results indicate strong evidence favour row-defining   intervention (.e. respective 95% confidence interval include   null value) indicated bold. Furthermore, league_table_absolute_user exports   table_relative_absolute_effect, table relative   absolute effects basic parameters, 'xlsx' file (via   write_xlsx function) working   directory user. obtain unique absolute risks intervention, considered   transitive risks framework, namely, intervention   absolute risk regardless comparator intervention(s) trial   (Spineli et al., 2017). league_table_absolute_user can used network   interventions. case two interventions, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):1891.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/league_table_absolute_user.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"League table for relative and absolute effects (user defined) — league_table_absolute_user","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Leverage plot — leverage_plot","title":"Leverage plot — leverage_plot","text":"Plots leverage square root   posterior mean residual deviance trial-arms model   interest.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leverage plot — leverage_plot","text":"","code":"leverage_plot(net, drug_names, title)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leverage plot — leverage_plot","text":"net object S3 class run_metareg, run_model, run_ume. See 'Value' run_metareg, run_model, run_ume. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. title title indicate model (consistency model, network meta-regression unrelated mean effects model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leverage plot — leverage_plot","text":"scatterplot leverage square root   posterior mean residual deviance trial-arms model   interest. green, yellow, red curves correspond parabola  \\(x^2 + y = k\\) \\(k\\) = 1, 2, 3, respectively. data points   correspond trial-arms. Data points found outside yellow parabola   linked pair numbers. first number refers position   trial dataset, second number refers   corresponding trial-arm (see 'Arguments' 'Value'  data_preparation). trial-arms contribute   1 deviance information criterion , hence, model's poor fit.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leverage plot — leverage_plot","text":"leverage_plot integrated ume_plot   function create leverage plot consistency model   unrelated mean effects model. plots appear side--side output   ume_plot. Dias et al. (2010) used leverage plots   investigate fit consistency inconsistency models--  latter node-splitting approach.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Leverage plot — leverage_plot","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/leverage_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Leverage plot — leverage_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Evaluates whether convergence achieved   monitored parameters Bayesian models. Gelman-Rubin convergence   diagnostic, Markov Chain Monte Carl (MCMC) error relevant   diagnostic plots applied.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"","code":"mcmc_diagnostics(net, par = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"net object S3 class run_metareg, run_model, run_nodesplit, run_sensitivity, run_series_meta, run_ume. See 'Value' functions . par vector least one character string refers monitored parameters jagsfit object S3 class run_metareg, run_model, run_ume. selected parameters considered diagnostic plots (see 'Value'). argument ignored objects S3 class run_nodesplit, run_sensitivity, run_series_meta.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"mcmc_diagnostics considers following monitored parameters:  EM  estimated summary effect measure.  EM_pred  predicted summary effect measure.  delta  estimated trial-specific effect measure.  tau  -trial standard deviation.  direct  direct estimate split node (see 'Value'   run_nodesplit).  indirect  indirect estimate split node   (see 'Value' run_nodesplit).  diff  inconsistency factor split node (see 'Value'   run_nodesplit).  phi  informative missingness parameter.  beta  regression coefficient. monitored parameter mentioned , mcmc_diagnostics also   returns barplot ratio MCMC error posterior standard   deviation barplot Gelman-Rubin R diagnostic. Bars   correspond ratio less 5% indicated green (  corresponding parameters estimated accurately); otherwise,   bars indicated red (inaccurate estimation). Furthermore, bars   correspond R value less 1.10 indicated green (  corresponding parameters converged); otherwise, bars   indicated red (convergence achieved).  mcmc_diagnostics returns histograms barplots EM  run_sensitivity considered.  mcmc_diagnostics also uses  mcmcplot function R-package  mcmcplots create   HTML file panel diagnostic plots (trace, density,   autocorrelation) monitored parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"monitored parameter, mcmc_diagnostics considers   R-hat MCMC error compares thresholds 1.1 5%   posterior standard deviation (rule thumb), respectively.   Convergence achieved monitored parameter, R-hat   corresponding threshold. Visual inspection trace plots   posterior density monitored parameters also considered   drawing conclusions convergence.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/mcmc_diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Markov Chain Monte Carlo diagnostics — mcmc_diagnostics","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_nodesplit' (using the default arguments) res <- readRDS(system.file('extdata/node_baker.rds', package = 'rnmamod'))  # Check convergence based on R-hat mcmc_diagnostics(net = res,                  par = c(\"tau\", \"EM[2,1]\", \"EM.pred[2,1]\")) #> R-hat < 1.10 is an indication of convergence. Visual inspection of the trace plot and posterior density of the monitored parameters should *also* be considered when concluding about convergence. #> Note: The argument 'par' is ignored. It is used only with 'run_metareg', 'run_model', and 'run_ume'. #> $Between_trial_SD  #>  #> $Direct_estimates  #>  #> $Indirect_estimates  #>  #> $Inconsistency_factors  #>  #> $table_tau #>  #>  #> Table: The (common) between-trial standard deviation #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>  #> $table_phi #>  #>  #> Table: The common informative missingness parameter #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>  #> $table_beta #>  #>  #> Table: The common regression coefficient #>  #> |R.hat          |MCMC.rule      | #> |:--------------|:--------------| #> |Not applicable |Not applicable | #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for network meta-regression — metareg_plot","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Illustrates effect estimates, predictions regression   coefficients comparisons specified comparator intervention   selected covariate value also exports results Excel file.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for network meta-regression — metareg_plot","text":"","code":"metareg_plot(full, reg, compar, cov_value, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for network meta-regression — metareg_plot","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. compar character indicate comparator intervention. must name found drug_names. cov_value list two elements following order: number covariate value interest (see 'Arguments' run_metareg), character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for network meta-regression — metareg_plot","text":"metareg_plot prints R console message   parsimonious model () based DIC (red text). Furthermore,   function returns following list elements: table_estimates posterior median, 95% credible interval   summary effect measure (according argument measure   defined run_model) comparison selected   intervention network meta-analysis network meta-regression   based specified cov_value. table_predictions posterior median, 95% prediction   interval summary effect measure (according argument   measure defined run_model) comparison   selected intervention network meta-analysis network   meta-regression based specified cov_value. table_model_assessment DIC, total residual deviance,   number effective parameters, posterior median 95% credible   interval -trial standard deviation (tau) model   (Spiegelhalter et al., 2002). fixed-effect model   performed, metareg_plot return results tau.   binary outcome, results refer odds ratio scale. table_regression_coeffients posterior median 95%   credible interval regression coefficient(s) (according   argument covar_assumption defined run_metareg).   binary outcome, results refer odds ratio scale. interval_plot forest plot estimated predicted effect   sizes comparisons selected comparator intervention   network meta-analysis network meta-regression based specified   cov_value alongside forest plot corresponding SUCRA   values. See 'Details' 'Value' forestplot_metareg. sucra_scatterplot scatterplot SUCRA values   network meta-analysis SUCRA values network   meta-regression based specified cov_value. See 'Details'   'Value' scatterplot_sucra.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for network meta-regression — metareg_plot","text":"deviance information criterion (DIC) network   meta-analysis model compared DIC network meta-regression   model. difference DIC exceeds 5, network meta-regression   model preferred; difference DIC less -5, network   meta-analysis model preferred; otherwise, little choose   compared models. covariate binary, specify second element   cov_value name level output   created. Furthermore, metareg_plot exports tabulated results separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user. metareg_plot can used network interventions.   case two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--616. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for network meta-regression — metareg_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/metareg_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for network meta-regression — metareg_plot","text":"","code":"data(\"nma.baker2009\")  # \\donttest{ # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Read results from 'run_metareg' (exchangeable structure) reg <- readRDS(system.file('extdata/reg_baker.rds', package = 'rnmamod'))  # Publication year as the covariate pub_year <- c(1996, 1998, 1999, 2000, 2000, 2001, rep(2002, 5), 2003, 2003,               rep(2005, 4), 2006, 2006, 2007, 2007)  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Plot the results from both models for all comparisons with salmeterol and # publication year 2000 metareg_plot(full = res,              reg = reg,              compar = \"salmeterol\",              cov_value = list(2000, \"publication year\"),              drug_names = interv_names) #> There is little to choose between the two models #> module glm loaded #> module dic loaded #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 0 #>    Unobserved stochastic nodes: 7 #>    Total graph size: 287 #>  #> Initializing model #>  #> $table_estimates #>  #>  #> Table: Estimation for comparisons with salmeterol for 2000 #>  #> |versus salmeterol           | Median NMA |  95% CrI NMA  | Median NMR |  95% CrI NMR  | #> |:---------------------------|:----------:|:-------------:|:----------:|:-------------:| #> |budesonide                  |    0.57    | (0.25, 1.47)  |    0.56    | (0.17, 1.85)  | #> |budesonide plus formoterol  |    0.73    | (0.33, 1.75)  |    0.72    | (0.22, 2.39)  | #> |tiotropium                  |    0.95    | (0.66, 1.34)  |    1.01    | (0.63, 1.59)  | #> |fluticasone plus salmeterol |    1.01    |  (0.56, 1.9)  |    1.13    |  (0.5, 2.55)  | #> |fluticasone                 |    1.17    | (0.67, 2.19)  |    1.31    |  (0.6, 2.86)  | #> |formoterol                  |    1.44    | (0.83, 2.45)  |    1.21    | (0.57, 2.58)  | #> |placebo                     |    1.58    | (1.13, 2.27)* |    1.72    | (1.14, 2.61)* | #>  #> $table_predictions #>  #>  #> Table: Prediction for comparisons with salmeterol for 2000 #>  #> |versus salmeterol           | Median NMA | 95% CrI NMA  | Median NMR | 95% CrI NMR  | #> |:---------------------------|:----------:|:------------:|:----------:|:------------:| #> |budesonide                  |    0.57    | (0.24, 1.56) |    0.56    | (0.16, 1.94) | #> |budesonide plus formoterol  |    0.73    | (0.31, 1.88) |    0.73    | (0.21, 2.51) | #> |tiotropium                  |    0.96    | (0.56, 1.53) |    1.01    | (0.57, 1.78) | #> |fluticasone plus salmeterol |    1.01    | (0.52, 2.06) |    1.13    | (0.47, 2.72) | #> |fluticasone                 |    1.17    | (0.62, 2.41) |    1.31    | (0.56, 3.06) | #> |formoterol                  |    1.43    | (0.75, 2.71) |    1.21    | (0.53, 2.77) | #> |placebo                     |    1.57    |  (1, 2.68)   |    1.72    |  (1, 2.93)*  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment and between-trial standard deviation #>  #> |Analysis              |  DIC  |  pD   | Mean deviance | data points | Median tau | SD tau |95% CrI tau  | #> |:---------------------|:-----:|:-----:|:-------------:|:-----------:|:----------:|:------:|:------------| #> |Network meta-analysis | 89.16 | 34.97 |     54.19     |     50      |    0.14    |  0.09  |(0.01, 0.35) | #> |Meta-regression       | 90.83 | 36.95 |     53.88     |     50      |    0.13    |  0.09  |(0.01, 0.36) | #>  #> $table_regression_coeffients #>  #>  #> Table: Estimation of regression coefficient(s) #>  #> |versus salmeterol           | Median beta|95% CrI beta | #> |:---------------------------|-----------:|:------------| #> |budesonide                  |        1.00|(0.73, 1.36) | #> |budesonide plus formoterol  |        1.00|(0.73, 1.36) | #> |tiotropium                  |        0.98|(0.86, 1.07) | #> |fluticasone plus salmeterol |        0.97|(0.76, 1.1)  | #> |fluticasone                 |        1.01|(0.9, 1.2)   | #> |formoterol                  |        1.03|(0.91, 1.33) | #> |placebo                     |        0.96|(0.88, 1.05) | #>  #> $interval_plot  #>  #> $sucra_scatterplot  #>  # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"miss_characteristics hosts set visualisation tools assess   size pattern missing characteristics values dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"","code":"miss_characteristics(   input,   drug_names,   rename_char = NULL,   label_size = 4,   axis_title_size = 14,   axis_text_size = 14,   axis_x_text_angle = 0,   legend_text_size = 14,   legend_title_size = 14,   strip_text_size = 14,   strip_text_angle = 0 )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"input data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. first two columns refer trial name, pairwise comparison, respectively. remaining columns refer summary characteristics. See 'Details' specification columns. drug_names vector labels name interventions order appear argument input. rename_char list two elements: () numeric vector position characteristics input, (ii) character vector names characteristics, wished appear title plots. argument optional, case user wants control appearance titles. label_size positive integer font size labels plots. label_size determines size argument found geom's aesthetic properties R-package ggplot2). axis_title_size positive integer font size axis titles plots. axis_title_size determines axis.title argument found theme's properties R-package ggplot2). axis_text_size positive integer font size axis text plots. axis_text_size determines axis.text argument found theme's properties R-package ggplot2). axis_x_text_angle positive integer angle axis text plots related missing data. axis_text_angle determines axis.text.x argument found theme's properties R-package ggplot2). legend_text_size positive integer font size legend text plots. legend_text_size determines legend.text argument found theme's properties R-package ggplot2). legend_title_size positive integer font size legend title plots. legend_title_size determines legend.title argument found theme's properties R-package ggplot2). strip_text_size positive integer font size strip text plots. strip_text_size determines strip.text argument found theme's properties R-package ggplot2). strip_text_angle positive integer angle strip text plots. strip_text_angle determines strip.text argument found theme's properties R-package ggplot2).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"miss_characteristics returns following list elements: Barplot_missing_combined panel barplots percentage   missing observed cases comparison characteristic. Barplot_missing_characteristics barplot percentage   missing observed cases comparison. Tileplot_missing plot illustrates position missing   cases trial, comparison characteristic.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"correct type mode columns input must ensured use   function miss_characteristics. first two columns referring   trial name, pairwise comparison, respectively, must   character. remaining columns referring characteristics   must double integer depending whether   corresponding characteristic refers quantitative qualitative   variable. type mode column assessed   miss_characteristics using base function typeof. interventions sorted ascending order   identifier number within trials first treatment column   (second column input) control arm every pairwise   comparison. important ensure consistency order   interventions within comparisons obtained related   functions.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/miss_characteristics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualising missing data in characteristics\n(Comparisons' comparability for transitivity evaluation) — miss_characteristics","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Generates mean value normal distribution missingness   parameter proper format depending assumed structure   missingness parameter. run_model inherits   missingness_param_prior argument mean_misspar   (see 'Argument' run_model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"","code":"missingness_param_prior(assumption, mean_misspar)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. mean_misspar numeric value vector two numeric values mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption assumption = \"IDE-ARM\".","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"scalar numeric vector passed run_model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"run_model considers informative missingness odds   ratio logarithmic scale binary outcome data (Spineli, 2019a;   Turner et al., 2015; White et al., 2008), informative missingness   difference means measure \"MD\" \"SMD\",   informative missingness ratio means logarithmic scale   measure \"ROM\" (Spineli et al., 2021;   Mavridis et al., 2015). assumption trial-specific (.e., \"IDE-TRIAL\"   \"HIE-TRIAL\"), independent (.e., \"IND-CORR\"   \"IND-UNCORR\"), one numeric value can assigned   mean_misspar missingness scenario applied   trials trial-arms dataset, respectively. assumption   \"IDE-ARM\" \"HIE-ARM\", maximum two   different identical numeric values can assigned vector   mean_misspars: first value refers experimental arm,   second value refers control arm trial.   case network, first value considered   non-reference interventions second value considered   reference intervention network (see 'Argument' ref   run_model). necessary ensure transitivity   assumptions missingness parameter across comparisons   network (Spineli, 2019b). Currently, empirically-based prior distributions   informative missingness parameters. users may refer   Mavridis et al. (2015) Spineli (2019) determine mean_misspar   informative missingness parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019a;19(1):86. doi: 10.1186/s12874-019-0731-y Spineli LM. Modeling missing binary outcome data preserving transitivity assumption yielded credible network meta-analysis results. J Clin Epidemiol 2019b;105:19--26. doi: 10.1016/j.jclinepi.2018.09.002 Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/missingness_param_prior.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define the mean value of the normal distribution of the missingness parameter — missingness_param_prior","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Network plot — netplot","title":"Network plot — netplot","text":"Illustrates network plot one outcome.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network plot — netplot","text":"","code":"netplot(   data,   drug_names,   show_multi = FALSE,   multi_frame = -16,   alpha_multi_color = 0.1,   layout = igraph::layout_in_circle,   node_color = \"tomato\",   node_frame_color = \"black\",   node_frame_width = 1,   node_shape = \"circle\",   node_label_color = \"black\",   node_label_font = 1,   node_label_cex = 1,   node_label_dist = 0,   edge_color = \"grey50\",   edge_arrow_size = 0.5,   edge_lty = 1,   edge_label = NULL,   edge_label_color = \"black\",   edge_label_font = 1,   edge_label_cex = 2,   edge_curved = 0,   direction = FALSE,   ... )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network plot — netplot","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. drug_names vector labels name interventions (nodes) order appear argument data. show_multi Logical indicate whether colour closed-loops informed multi-arm trials. default show_multi = FALSE. multi_frame numeric scalar determine size border  around closed-loops formed multi-arm trials. default -16. multi_frame determines mark.expand argument found  plot.igraph function  R-package igraph). alpha_multi_color numerical scalar range 0 1 determine opacity multi_frame coloured using rainbow colour palette. default 0.1. layout layout specification. default layout = layout_in_circle plot nodes circular layout. information refer R-package igraph, node_color character vector characters (length equal number nodes) indicate colour nodes. default node_color = \"tomato\". node_color determines vertex.color argument found plot.igraph function R-package igraph). node_frame_color character indicate colour frame around nodes. default node_frame_color = \"black\". node_frame_color determines vertex.frame.color argument found plot.igraph function R-package igraph). node_frame_width numerical scalar indicate width frame around nodes. default 1. node_frame_width determines vertex.frame.width argument found plot.igraph function R-package igraph). node_shape character indicate shape nodes. default node_shape = \"circle\". node_shape determines vertex.shape argument found plot.igraph function R-package igraph). node_label_color character indicate color node labels. default node_label_color = \"black\". node_label_color determines vertex.label.color argument found plot.igraph function R-package igraph). node_label_font numerical scalar indicate font node labels. default 1. node_label_font determines vertex.label.font argument found plot.igraph function R-package igraph). node_label_cex numerical scalar indicate font size node labels. default 1. node_label_cex determines vertex.label.cex argument found plot.igraph function R-package igraph). node_label_dist numerical scale 0 1 indicate position node labels relative node center. default 0, label centered. node_label_dist determines vertex.label.dist argument found plot.igraph function R-package igraph). edge_color character vector characters (length equal number edges) indicate colour edges. default edge_color = \"grey50\". edge_color determines edge.color argument found plot.igraph function R-package igraph). edge_arrow_size numerical scalar 0 1 indicate arrow size. default 0.5. edge_arrow_size determines edge.arrow.size argument found plot.igraph function R-package igraph). argument work direction = FALSE. edge_lty numerical scalar, discrete values 0 6 indicate line type edges. default 1 (solid). edge_lty determines edge.lty argument found plot.igraph function R-package igraph). edge_label vector number characters length equal number edges present edge label. default edge_label = NULL refers number studies investigating corresponding comparisons. edge_label determines edge.label argument found plot.igraph function R-package igraph). edge_label_color character indicate color edge labels. default edge_label_color = \"black\". edge_label_color determines edge.label.color argument found plot.igraph function R-package igraph). edge_label_font numerical scalar indicate font edge labels. default 1. edge_label_font determines edge.label.font argument found plot.igraph function R-package igraph). edge_label_cex numerical scalar indicate font size edge labels. default 2. edge_label_cex determines edge.label.cex argument found plot.igraph function R-package igraph). edge_curved numerical scalar range 0 1 indicates edge curvature. default 0 (curvature). edge_curved determines edge.curved argument found plot.igraph function R-package igraph). direction Logical draw (TRUE) (FALSE) arrow edge according direction. default direction = FALSE. information refer R-package igraph). ... graphical arguments plot.igraph function R-package igraph","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network plot — netplot","text":"network plot coloured closed-loops informed multi-arm   trials. node indicates intervention edge observed   pairwise comparison.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Network plot — netplot","text":"edge thickness proportional number   trials investigating corresponding comparison. node size   weighted total sample size corresponding intervention. user can control many arguments found   plot.igraph function   R-package igraph),   colour nodes edges, node edge label size,   .","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Network plot — netplot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/netplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Network plot — netplot","text":"","code":"data(\"nma.bottomley2011\")  # Return the first six trials of the dataset head(nma.bottomley2011) #>             study t1 t2 t3 t4  r1  r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> 1   Buckley, 2008  1  6 NA NA  67  79 NA NA  2  1 NA NA 110 108 NA NA #> 2    Tyring, 2008  6  7 NA NA  74  12 NA NA  2  0 NA NA 135  42 NA NA #> 3 Kragballe, 2009  3  6 NA NA  19 114 NA NA  9  2 NA NA 105 207 NA NA #> 4     Luger, 2008  3  6 NA NA 101 196 NA NA 44  9 NA NA 431 419 NA NA #> 5    Klaber, 1994  2  3 NA NA 175 138 NA NA  2 11 NA NA 234 240 NA NA #> 6   Barrett, 2005  3  4 NA NA  79  79 NA NA 19 18 NA NA 225 236 NA NA  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"betamethasone dipropionate\", \"betamethasone valerate\",                   \"calcipotriol\", \"calcipotriol plus polytar\", \"capasal\",                   \"two-compound formulation gel\", \"placebo\")  # Create the network plot netplot(data = nma.bottomley2011,         drug_names = interv_names,         edge_label_cex = 1)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":null,"dir":"Reference","previous_headings":"","what":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"dataset 21 trials comparing seven pharmacologic   interventions placebo patients chronic   obstructive pulmonary disease (COPD). exacerbation COPD   analysed binary outcome.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"","code":"data(nma.baker2009)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"data-frame 21 rows arm-based data 17 columns (maximum    number 4 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"Baker WL, Baker EL, Coleman CI. Pharmacologic treatments chronic obstructive pulmonary disease: mixed-treatment comparison meta-analysis. Pharmacotherapy 2009;29(8):891--905. doi: 10.1592/phco.29.8.891","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.baker2009.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pharmacological interventions for chronic obstructive pulmonary disease — nma.baker2009","text":"interventions coded follows: 1, placebo; 2,   budesonide; 3, budesonide plus formoterol; 4, fluticasone; 5, fluticasone   plus salmeterol; 6, formoterol; 7, salmeterol; 8, tiotropium.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"dataset 9 trials comparing six pharmacologic interventions   placebo moderately severe scalp psoriasis.   analysed binary outcome investigator's global assessment   response 4 weeks.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"","code":"data(nma.bottomley2011)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"data frame 9 rows arm-based data 17 columns   (maximum number 4 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"Bottomley JM, Taylor RS, Ryttov J. effectiveness two-compound formulation calcipotriol betamethasone dipropionate gel treatment moderately severe scalp psoriasis: systematic review direct indirect evidence. Curr Med Res Opin 2011;27(1):251--68. doi: 10.1185/03007995.2010.541022","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.bottomley2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pharmacological interventions for moderately severe scalp psoriasis — nma.bottomley2011","text":"interventions coded follows: 1, betamethasone   dipropionate; 2, betamethasone valerate; 3, calcipotriol; 4, calcipotriol   plus polytar; 5, capasal; 6, two-compound formulation gel; 7, placebo.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":null,"dir":"Reference","previous_headings":"","what":"Oral antithrombotics for stroke episode — nma.dogliotti2014","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"dataset 16 trials comparing seven oral antithrombotics   placebo patients atrial fibrillation. analysed   binary outcome prevention stroke episode.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"","code":"data(nma.dogliotti2014)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"data frame 16 rows arm-based data 13 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"Dogliotti , Paolasso E, Giugliano RP. Current new oral antithrombotics non-valvular atrial fibrillation: network meta-analysis 79808 patients. Heart 2014;100(5):396--405. doi: 10.1136/heartjnl-2013-304347","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.dogliotti2014.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Oral antithrombotics for stroke episode — nma.dogliotti2014","text":"interventions coded follows: 1, placebo;   2, aspirin; 3, aspirin plus clopidogrel; 4, dabigatran 110 mg;   5, dabigatran 150 mg; 6, rivaroxaban; 7, vitamin K antagonist;   8, apixaban","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":null,"dir":"Reference","previous_headings":"","what":"Antidepressants in Parkinson's disease — nma.liu2013","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"dataset 11 trials comparing effectiveness five   antidepressants placebo Parkinson's disease. analysed binary   outcome number patients reduction least 50/   baseline score.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"","code":"data(nma.liu2013)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"data frame 11 rows arm-based data 13 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"Liu J, Dong J, Wang L, Yan P, Sun S. Comparative efficacy acceptability antidepressants Parkinson's disease: network meta-analysis. PLoS One 2013;8(10):e76651. doi: 10.1371/journal.pone.0076651","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.liu2013.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Antidepressants in Parkinson's disease — nma.liu2013","text":"interventions coded follows: 1, placebo;   2, pramipexole; 3, serotonin-norepinephrine reuptake inhibitor;   4, selective serotonin reuptake inhibitor; 5, tricyclic antidepressant;   6, pergolide.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":null,"dir":"Reference","previous_headings":"","what":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"dataset 14 trials comparing three different training   modalities (triangle network) patients type 2 diabetes.   analysed continuous outcome change baseline HbA1c levels.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"","code":"data(nma.schwingshackl2014)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"data frame 14 rows arm-based data 16 columns (maximum   number 3 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"Schwingshackl L, Missbach B, Dias S, et al. M Impact different training modalities glycaemic control blood lipids patients type 2 diabetes: systematic review network meta-analysis. Diabetologia 2014;57(9):1789--97. doi: 10.1007/s00125-014-3303-z","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.schwingshackl2014.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Training modalities for patients with type 2 diabetes — nma.schwingshackl2014","text":"interventions coded follows: 1, aerobic;   2, resistance; 3, combined training;","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":null,"dir":"Reference","previous_headings":"","what":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"dataset 29 trials comparing three antiparkinsonian   interventions placebo (star-shaped network) patients later   Parkinson's disease. analysed continuous outcome change   baseline patient -time reduction.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"","code":"data(nma.stowe2011)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"data frame 29 rows arm-based data 11 columns (maximum   number 2 arms).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"Stowe R, Ives N, Clarke CE, et al. Meta-analysis comparative efficacy safety adjuvant treatment levodopa later Parkinson's disease. Mov Disord 2011;26(4):587--98. doi: 10.1002/mds.23517","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nma.stowe2011.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Antiparkinsonian interventions for later Parkinson's disease — nma.stowe2011","text":"interventions coded follows: 1, placebo plus   levodopa (PBO+LD); 2, dopamine agonist plus levodopa (DA+LD);   3, catechol-O-methyl transferase inhibitors plus levodopa (COMBI+LD);   4, monoamine oxidase type B inhibitors plus levodopa (MAOBI+LD).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for the node-splitting approach — nodesplit_plot","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"nodesplit_plot hosts toolkit functions   facilitates comparison consistency model   (via run_model) node-splitting approach   (via run_nodesplit) regarding posterior summaries   direct indirect effects inconsistency factor split   nodes, -trial standard deviation model assessment   parameters (Spiegelhalter et al., 2002) split node   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"","code":"nodesplit_plot(full, node, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"full object S3 class run_model. See 'Value' run_model. node object S3 class run_nodesplit. See 'Value' run_nodesplit. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"nodesplit_plot returns following list elements: table_effect_size data-frame posterior median,   posterior standard deviation 95% credible interval direct   indirect effect inconsistency factor split node. table_model_assessment data-frame model assessment   parameters (DIC, posterior mean total residual deviance, number   effective parameters), posterior median, posterior standard deviation   95% credible interval tau consistency model   split node. See 'Details'. intervalplot_inconsistency_factor panel interval plots   direct indirect effect split nodes corresponding   inconsistency factor. See 'Details'. intervalplot_tau interval plot tau   split node. See 'Details'.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"intervalplot_inconsistency_factor includes many interval   plots number split nodes network. interval plot   illustrates posterior median 95% credible interval direct   indirect effect split nodes corresponding inconsistency   factor.   line corresponds inconsistency factor highlighted   green, cross vertical line difference (  direct indirect effect), red otherwise.   30 split nodes, function presents interval plots split nodes   conclusive inconsistency factor (green intervals)   opposite sign direct indirect effects. intervalplot_tau interval plot median 95% credible   interval tau split node. lines correspond   split nodes sorted ascending order deviance information   criterion (DIC) appears top line.   estimated median 95% credible intervals tau   consistency model appear interval plot solid two dotted   parallel blue lines, respectively. different levels heterogeneity   appear green, yellow, orange, red rectangulars indicate low,   reasonable, fairly high, fairly extreme heterogeneity, respectively,   following classification Spiegelhalter et al. (2004).   fixed-effect model performed, nodesplit_plot   return intervalplot_tau. table_model_assessment also includes column   DIC-based better fit indicates preferred model terms   parsimony split node. Therefore, DIC model   split node compared DIC consistency model   (Dias et al., 2010). difference DIC exceeds 5, consistency   model preferred; difference DIC less -5, model   split node preferred; otherwise, little choose   compared models. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, nodesplit_plot   currently presents results odds ratio scale. ,   odds ratio used 'best-case' effect measure   run_model. , relative risk, risk difference   obtained function odds ratio selected baseline risk   (See 'Details' run_model). split nodes automatically selected via   mtc.nodesplit.comparisons   function R-package   gemtc.   See 'Details' run_nodesplit. Furthermore, nodesplit_plot exports data-frames separate   'xlsx' files (via write_xlsx function   R-package   writexl) working   directory user. nodesplit_plot can used network interventions   least one split node. Otherwise, execution   function stopped error message printed R   console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Spiegelhalter DJ, Abrams KR, Myles JP. Bayesian approaches clinical trials health-care evaluation. John Wiley Sons, Chichester, 2004. Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--616. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/nodesplit_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for the node-splitting approach — nodesplit_plot","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Read results from 'run_nodesplit' (using the default arguments) node <- readRDS(system.file('extdata/node_baker.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"budesonide\", \"budesonide plus formoterol\",                   \"fluticasone\", \"fluticasone plus salmeterol\",                   \"formoterol\", \"salmeterol\", \"tiotropium\")  # Plot the results from both models nodesplit_plot(full = res,                node = node,                drug_names = interv_names) #> $table_effect_size #>  #>  #> Table: Estimates for the split nodes #>  #> |Node                                       | Median direct | SD direct | 95% CrI direct  | Median indirect | SD indirect | 95% CrI indirect | Median IF | SD IF |  95% CrI IF   | #> |:------------------------------------------|:-------------:|:---------:|:---------------:|:---------------:|:-----------:|:----------------:|:---------:|:-----:|:-------------:| #> |formoterol vs placebo                      |     -0.43     |   0.29    |  (-0.99, 0.14)  |      1.06       |    0.87     |   (-0.6, 2.87)   |   -1.48   | 0.87  | (-3.33, 0.14) | #> |tiotropium vs formoterol                   |     -1.59     |   0.85    | (-3.37, -0.05)* |      -0.09      |    0.22     |  (-0.55, 0.32)   |   -1.50   | 0.87  | (-3.29, 0.1)  | #> |tiotropium vs placebo                      |     -0.49     |   0.24    |  (-1, -0.07)*   |      -1.24      |    0.57     |  (-2.43, -0.2)*  |   0.75    | 0.54  | (-0.22, 1.91) | #> |salmeterol vs fluticasone                  |     -0.59     |   0.23    | (-1.03, -0.14)* |      -0.21      |    0.22     |  (-0.66, 0.23)   |   -0.38   | 0.30  | (-0.98, 0.21) | #> |salmeterol vs placebo                      |     -0.51     |   0.25    | (-0.98, -0.03)* |      -0.17      |    0.68     |  (-1.49, 1.26)   |   -0.34   | 0.64  | (-1.71, 0.91) | #> |fluticasone plus salmeterol vs fluticasone |     -0.23     |   0.23    |  (-0.68, 0.21)  |      -0.72      |    0.44     |   (-1.6, 0.15)   |   0.49    | 0.48  | (-0.45, 1.43) | #> |salmeterol vs fluticasone plus salmeterol  |     -0.42     |   0.24    |  (-0.88, 0.05)  |      -0.24      |    0.30     |  (-0.87, 0.33)   |   -0.18   | 0.44  | (-1.01, 0.72) | #> |tiotropium vs salmeterol                   |     -0.85     |   0.38    | (-1.61, -0.1)*  |      -0.06      |    0.21     |  (-0.49, 0.34)   |   -0.80   | 0.47  | (-1.7, 0.16)  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment parameters (50 unconstrained data points) #>  #> |Approach                                   | Residual deviance |  DIC  |  pD   |DIC-based better fit | Median tau | SD tau | 95% CrI tau  | #> |:------------------------------------------|:-----------------:|:-----:|:-----:|:--------------------|:----------:|:------:|:------------:| #> |NMA                                        |       54.19       | 89.16 | 34.97 |-                    |    0.14    |  0.09  | (0.01, 0.35) | #> |formoterol vs placebo                      |       89.61       | 53.35 | 36.26 |After split node     |    0.12    |  0.09  | (0.01, 0.34) | #> |tiotropium vs formoterol                   |       89.79       | 53.28 | 36.51 |After split node     |    0.13    |  0.09  | (0.01, 0.34) | #> |tiotropium vs placebo                      |       89.82       | 53.41 | 36.41 |After split node     |    0.13    |  0.09  | (0.01, 0.35) | #> |salmeterol vs fluticasone                  |       90.63       | 53.17 | 37.46 |After split node     |    0.11    |  0.09  | (0.01, 0.32) | #> |salmeterol vs placebo                      |       90.99       | 54.28 | 36.71 |After split node     |    0.13    |  0.09  | (0.01, 0.36) | #> |fluticasone plus salmeterol vs fluticasone |       91.84       | 53.91 | 37.93 |After split node     |    0.11    |  0.09  |  (0, 0.34)   | #> |salmeterol vs fluticasone plus salmeterol  |       92.11       | 53.64 | 38.47 |After split node     |    0.13    |  0.10  | (0.01, 0.38) | #> |tiotropium vs salmeterol                   |       92.63       | 54.13 | 38.50 |After split node     |    0.16    |  0.11  | (0.01, 0.42) | #>  #> $intervalplot_inconsistency_factor  #>  #> $intervalplot_tau  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":null,"dir":"Reference","previous_headings":"","what":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"pairwise meta-analysis 4 trials comparing paroxetine   placebo depressive disorders children adolescents.   analysed binary outcome remission response defined   trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"","code":"data(pma.hetrick2012)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"data frame 4 rows arm-based data 9 columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"Hetrick SE, McKenzie JE, Cox GR, Simmons MB, Merry SN. Newer generation antidepressants depressive disorders children adolescents. Cochrane Database Syst Rev 2012;11(11):CD004851. doi: 10.1002/14651858.CD004851.pub3","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.hetrick2012.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paroxetine versus placebo for depressive disorders — pma.hetrick2012","text":"interventions coded follows:   1, placebo; 2, paroxetine.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":null,"dir":"Reference","previous_headings":"","what":"Inositol versus glucose for depressive episode — pma.taylor2004","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"pairwise meta-analysis 4 trials comparing inositol   glucose (placebo) depressive episode. analysed continuous outcome   resolution depressive episode using Hamilton Depression   Rating Scale.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"","code":"data(pma.taylor2004)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"data frame 4 rows arm-based data 11 columns.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"Taylor MJ, Wilder H, Bhagwagar Z, Geddes J. Inositol depressive disorders. Cochrane Database Syst Rev 2004;2004(2):CD004049. doi: 10.1002/14651858.CD004049.pub2","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/pma.taylor2004.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inositol versus glucose for depressive episode — pma.taylor2004","text":"interventions coded follows:   1, placebo; 2, inositol.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"WinBUGS code, written Dias et al. (2013) run one-stage   Bayesian network meta-analysis, extended incorporate pattern-mixture   model binary continuous missing participant outcome data (Spineli   et al., 2021; Spineli, 2019). model also extended   incorporate trial-level covariate apply meta-regression   (Cooper et al., 2009). case two interventions, code boils   one-stage Bayesian pairwise meta-analysis pattern-mixture   model (Turner et al., 2015; Spineli et al, 2021).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"","code":"prepare_model(measure, model, covar_assumption, assumption)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". covar_assumption Character string indicating structure intervention--covariate interaction, described Cooper et al., (2009). Set covar_assumption equal one following, meta-regression performed: \"exchangeable\", \"independent\", \"common\". Assign \"\" perform pairwise network meta-analysis. assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"R character vector object passed run_model run_metareg  textConnection function argument  object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"prepare_model creates model JAGS dialect   BUGS language. output function constitutes argument   model.file jags function (  R-package R2jags) via   textConnection function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013;33(5):607--17. doi: 10.1177/0272989X12458724 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for Bayesian pairwise or network meta-analysis and\nmeta-regression — prepare_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for the node-splitting approach — prepare_nodesplit","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"WinBUGS code, written Dias et al. (2010) run   one-stage Bayesian node-splitting model, extended incorporate   pattern-mixture model binary continuous missing participant outcome   data (Spineli et al., 2021; Spineli, 2019).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"","code":"prepare_nodesplit(measure, model, assumption)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"R character vector object passed  run_nodesplit  textConnection function argument  object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"functions creates model JAGS dialect BUGS   language. output function constitutes argument   model.file jags (R-package   R2jags) via   textConnection function. prepare_nodesplit inherits measure, model,   assumption run_model function. binary   outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, prepare_nodesplit   currently considers WinBUGS code odds ratio. split nodes automatically selected via   mtc.nodesplit.comparisons   function R-package   gemtc.   See 'Details' run_nodesplit.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_nodesplit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for the node-splitting approach — prepare_nodesplit","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"WinBUGS code for the unrelated mean effects model — prepare_ume","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"WinBUGS code, proposed Dias et al. (2013) run   one-stage Bayesian unrelated mean effects model, refined (Spineli, 2021),   extended incorporate pattern-mixture model binary   continuous missing participant outcome data (Spineli et al., 2021; Spineli,   2019).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"","code":"prepare_ume(measure, model, assumption, connected)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"measure Character string indicating effect measure values \"\", \"MD\", \"SMD\", \"ROM\" odds ratio, mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. connected integer equal one larger indicates number subnetworks.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"R character vector object passed run_ume textConnection function   argument object.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"functions creates model JAGS dialect BUGS   language. output function constitutes argument   model.file jags (R-package   R2jags) via   textConnection function. prepare_ume inherits measure, model,   assumption run_model function. binary   outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, prepare_ume   currently considers WinBUGS code odds ratio.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/prepare_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WinBUGS code for the unrelated mean effects model — prepare_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Rankograms and SUCRA curves — rankosucra_plot","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"returns panel rankograms integrated SUCRA curves   intervention network. function can illustrate   results single two outcomes simultaneously.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"","code":"rankosucra_plot(   full1,   full2 = NULL,   drug_names1,   drug_names2 = NULL,   name1 = NULL,   name2 = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"full1 object S3 class run_model network meta-analysis. See 'Value' run_model. full2 object S3 class run_model network meta-analysis second outcome. See 'Value' run_model. drug_names1 vector labels name interventions order appear argument data run_model full1. drug_names2 vector labels name interventions order appear argument data run_model full2. elements must subset drug_names1. name1 text title results refer outcome full1. name2 text title results refer outcome full2.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"panel rankograms (yellowish bars) integrated reddish SUCRA   curves intervention network (Salanti et al., 2011).   x-axis panel refers ranking, y-axis refers   ranking probability expressed percentage.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Interventions sorted descending order SUCRA   value. SUCRA value expressed percentage appears top left   corner panel. case two outcomes, SUCRA values   outcome argument full1 considered sort   interventions best worst. second outcome also considered, different colours used   draw corresponding SUCRA curves rankograms: green   outcome full1, red outcome full2. rankosucra_plot can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"Loukia M. Spineli, Chrysostomos Kalyvas,   Katerina Papadimitropoulou","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rankosucra_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rankograms and SUCRA curves — rankosucra_plot","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\",                   \"serotonin-norepinephrine reuptake inhibitor\",                   \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Create the integrated rankograms and SUCRA curves rankosucra_plot(full1 = res,                 drug_names1 = interv_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"R package performing Bayesian network meta-analysis handling   missing participant outcome data properly.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"R-package rnmamod built upon WinBUGS program code found   series tutorial papers evidence synthesis methods decision   making (Dias et al., 2013a; Dias et al., 2013b; Dias et al., 2013c)   Dias et al. (2010) introduces node-splitting approach.   models comprise Bayesian hierarchical models one-stage network   meta-analysis implemented JAGS R-package   R2jags. rnmamod comprises suite core models implemented   systematic review multiple interventions: fixed-effect random-effects network meta-analysis    (run_model) based Dias et al. (2013c); fixed-effect random-effects network meta-regression    (run_metareg) based Cooper et al. (2009), Dias et    al. (2013b); fixed-effect random-effects separate pairwise meta-analyses    comparisons least two trials (run_series_meta); local evaluation consistency assumption using    fixed-effect random-effects node-splitting approach    (run_nodesplit) based Dias et al. (2010),    van Valkenhoef et al. (2016); global evaluation consistency assumption using    fixed-effect random-effects unrelated mean effects model    (run_ume) based Dias et al. (2013a) Spineli (2021); comprehensive sensitivity analysis impact aggregate    binary continuous missing participant outcome data    (run_sensitivity) based Spineli et al. (2021a); hierarchical baseline model selected reference intervention    (baseline_model) based Dias et al. (2013d). rnmamod also includes rich suite visualisation tools aid   interpretation results preparation manuscript   submission: network plot description evidence base    (netplot describe_network, respectively)    following  PRISMA statement systematic reviews network    meta-analysis (Hutton et al., 2015); illustration R-hat (Gelman Rubin, 1992) MCMC error    monitored nodes creation HTML file panel    diagnostic plots monitored parameter    (mcmc_diagnostics); heatmap proportion missing participants across network    (heatmap_missing_network) across intervention arms    trial dataset (heatmap_missing_dataset); league heatmap estimated predicted summary effects    possible pairwise comparisons network integrated SUCRA    P-scores (league_heatmap    league_heatmap_pred, respectively) performing network    meta-analysis network meta-regression (Salanti et al., 2011; Ruecker    Schwarzer, 2015); league table relative absolute effects pairwise    comparisons interventions conducting network meta-analysis anew    via package (league_table_absolute) using results    published systematic review network meta-analysis    (league_table_absolute_user); forest plot trial-specific summary absolute risks    employing hierarchical baseline model selected reference    intervention (baseline_model) described    Dias et al. (2013d); rankograms integrated SUCRA values intervention    network (rankosucra_plot) performing network    meta-analysis (Salanti et al., 2011); forest plot estimated predicted summary effects    comparisons selected intervention (forestplot)    obtained network meta-analysis model (Salanti et al., 2011); tabulation estimated regression coefficient(s), estimated    predicted summary effects, measures model fit estimated    -trial standard deviation adjusting    trial-specific covariate (metareg_plot), visualisation    summary effects SUCRA values models    (forestplot_metareg, scatterplot_sucra,    respectively--found metareg_plot); tabulation estimated direct indirect effects split    nodes corresponding inconsistency factors, measures model fit    estimated -trial standard deviation split node,    visualisation results (nodesplit_plot); tabulation estimated summary effects comparisons    observed network, measures model fit estimated -trial    standard deviation unrelated mean effects model network    meta-analysis, well visualisation summary effects    models (intervalplot_panel_ume) goodness fit    model using series complementary plots    (scatterplots_dev (Dias et al., 2013a),    bland_altman_plot (Bland Altman, 1999),    leverage_plot (Dias et al., 2010)--found    ume_plot); tabulation estimated summary effects corresponding    -trial standard deviation comparisons least two trials    pairwise network meta-analysis, well visualisation    results (series_meta_plot); calculation visualisation robustness index    possible comparisons network (robustness_index,    robustness_index_user heatmap_robustness)    (Spineli et al., 2021a); enhanced balloon plot summary effects -trial    standard deviation selected pairwise comparison several    scenarios missingness parameter (balloon_plot)    (Spineli et al., 2021a); barplot Kullback-Leibler divergence measure    informative scenario missing--random assumption    missingness parameter selected pairwise comparison    (kld_barplot) (Spineli et al., 2021a). rnmamod assists researcher gauging quality   systematic review (ongoing published) low, unclear, high   regarding quality transitivity evaluation   (trans_quality). Missing participant outcome data addressed models package   extending code incorporate pattern-mixture model   (Spineli et al., 2021b; Spineli, 2019). Type citation(\"rnmamod\") cite rnmamod. report possible bugs errors, send email Loukia Spineli   (Spineli.Loukia@mh-hannove.de). development version rnmamod available   GitHub   GPL-3.0 License.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"Bland JM, Altman DG. Measuring agreement method comparison studies. Stat Methods Med Res 1999;8(2):135--60. doi: 10.1177/096228029900800204 Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013a;33(5):641--56. doi: 10.1177/0272989X12455847 Dias S, Sutton AJ, Welton NJ, Ades AE. Evidence synthesis decision making 3: heterogeneity--subgroups, meta-regression, bias, bias-adjustment. Med Decis Making 2013b;33(5):618--40. doi: 10.1177/0272989X13485157 Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013c;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013d;33(5):657--70. doi: 10.1177/0272989X13485155 Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Hutton B, Salanti G, Caldwell DM, Chaimani , Schmid CH, Cameron C, et al. PRISMA extension statement reporting systematic reviews incorporating network meta-analyses health care interventions: checklist explanations. Ann Intern Med 2015;162(11):777--84. doi: 10.7326/M14-2385 Ruecker G, Schwarzer G. Ranking treatments frequentist network meta-analysis works without resampling methods. BMC Med Res Methodol 2015;15:58. doi: 10.1186/s12874-015-0060-8 Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016 Spineli LM. revised framework evaluate consistency assumption globally network interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021a;12(4):475--90. doi: 10.1002/jrsm.1478 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021b;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y van Valkenhoef G, Dias S, Ades AE, Welton NJ. Automated generation node-splitting models assessment inconsistency network meta-analysis. Res Synth Methods 2016;7(1):80--93. doi: 10.1002/jrsm.1167","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/rnmamod-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rnmamod: Bayesian Network Meta-analysis with Missing Participants — rnmamod-package","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Robustness index — robustness_index","title":"Robustness index — robustness_index","text":"Calculates robustness index, novel index quantifies overall   divergence sensitivity analysis results primary analysis   results. robustness index considers objective decision rules infer   presence lack robustness primary analysis results   conducting sensitivity analysis (Spineli et al., 2021).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robustness index — robustness_index","text":"","code":"robustness_index(sens, threshold)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robustness index — robustness_index","text":"sens object S3 class run_sensitivity sensitivity analysis refers different scenarios average missingness parameter. See 'Value' run_sensitivity. general sensitivity analysis, insert list least two objects S3 class run_model indicating different re-analyses: first object (class run_model) list refer primary analysis. threshold number indicating threshold robustness, , minimally allowed deviation primary analysis re-analysis results. See 'Details' .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robustness index — robustness_index","text":"robustness_index prints R console message green   text threshold robustness determined user.   , function returns following list elements: robust_index numeric scalar vector robustness   index values. case pairwise meta-analysis,   robust_index scalar one summary effect size obtained.   case network meta-analysis, robust_index vector   length equal number possible pairwise comparisons;   one robustness index per possible comparison. robust character character vector (length   robust_index) whether primary analysis results   robust frail different re-analyses. kld vector matrix Kullback-Leibler divergence   (KLD) measure summary effect size subsequent re-analysis   primary analysis. case pairwise meta-analysis, kld   vector length equal number total analyses (one KLD   value obtained per analysis). number total analyses equals   square number scenarios indicated argument   mean_scenarios run_sensitivity, case   missing participant outcome data; otherwise, length character   vector argument sens.   case network meta-analysis, robust_index matrix   number rows equal number total analyses number columns   equal number  possible pairwise comparisons; one KLD value per   analysis possible comparison. threshold threshold used inherited   heatmap_robustness function. scenarios scenarios considered inherited   kld_barplot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robustness index — robustness_index","text":"Thresholds robustness proposed odds ratio   standardised mean difference (Spineli et al., 2021).   user may consider values 0.28 0.17 argument   threshold odds ratio standardised mean difference effect   measures (default values), respectively, consider plausible   values. argument threshold defined,   robustness_index considers default values 0.28 0.17   threshold robustness binary continuous outcome, respectively,   regardless effect measure (default thresholds may proper   choices effect measures; hence, use threshold great   caution case). Spineli et al. (2021) offers discussion   specifying threshold robustness. case binary outcome, robustness_index considers   results odds ratio scale calculate robustness index.   , odds ratio used 'best-case' effect measure   run_model. , relative risk, risk difference   functions odds ratio selected baseline risk (See 'Details'   run_model). case missing participant outcome data, primary analysis   considered middle numbers argument   mean_scenarios run_sensitivity (see 'Arguments'   'Details' run_sensitivity). robust, value \"robust\" appears   robust_index less threshold; otherwise, value   \"frail\" appears. case missing participant outcome data, robustness_index   can used missing participant outcome data   extracted least one trial. Otherwise, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robustness index — robustness_index","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Robustness index — robustness_index","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robustness index — robustness_index","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_sensitivity' (using the default arguments) res_sens <- readRDS(system.file('extdata/res_sens_baker.rds',                     package = 'rnmamod'))  # Calculate the robustness index robustness_index(sens = res_sens,                  threshold = 0.28) #> The value 0.28 was assigned as 'threshold' for odds ratio. #> $robust_index #>  [1] 0.45825757 0.40000000 0.45387223 0.51478151 0.48062459 0.31780497 #>  [7] 0.34785054 0.08366600 0.11401754 0.08366600 0.10488088 0.24698178 #> [13] 0.26457513 0.07745967 0.06324555 0.07745967 0.18973666 0.20000000 #> [19] 0.12247449 0.06324555 0.18165902 0.20000000 0.04472136 0.18973666 #> [25] 0.21213203 0.11832160 0.16124515 0.05477226 #>  #> $robust #>  [1] \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"frail\"  \"robust\" #>  [9] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [17] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [25] \"robust\" \"robust\" \"robust\" \"robust\" #>  #> $kld #>             [,1]       [,2]        [,3]        [,4]        [,5]        [,6] #>  [1,] 0.03143496 0.02796963 0.055058416 0.125452928 0.196018804 0.013912157 #>  [2,] 0.02543702 0.01920250 0.043161377 0.091735629 0.146776953 0.019573044 #>  [3,] 0.03405799 0.03059699 0.056604557 0.116167819 0.170723488 0.016309098 #>  [4,] 0.02951539 0.04548642 0.093447495 0.146961033 0.214858236 0.009077864 #>  [5,] 0.01113434 0.03216688 0.109525620 0.166811784 0.247708559 0.003877332 #>  [6,] 0.01951722 0.01086042 0.020786834 0.091750311 0.165670683 0.029723758 #>  [7,] 0.04998651 0.02082673 0.021052758 0.076821621 0.147532529 0.046796072 #>  [8,] 0.04989347 0.03309033 0.019555306 0.027614613 0.033629565 0.005643233 #>  [9,] 0.04486888 0.03923226 0.033844111 0.041112954 0.052304306 0.014171171 #> [10,] 0.02902816 0.02737892 0.021368567 0.029429527 0.035216212 0.014288434 #> [11,] 0.01450164 0.01118354 0.010032892 0.014450268 0.019383796 0.004623395 #> [12,] 0.02734489 0.02961612 0.033151278 0.061701609 0.086408868 0.008612444 #> [13,] 0.03628689 0.03747297 0.047533123 0.080519739 0.109411182 0.012209439 #> [14,] 0.03472138 0.02893725 0.019598727 0.024299059 0.027933502 0.015519021 #> [15,] 0.03039907 0.03019554 0.018994336 0.015199623 0.018396590 0.019615407 #> [16,] 0.01750883 0.01454469 0.010723813 0.008458197 0.005050863 0.009345788 #> [17,] 0.01921020 0.02019464 0.024987792 0.037464730 0.051152380 0.011409928 #> [18,] 0.02358055 0.02438248 0.031703395 0.052986855 0.067429896 0.012530294 #> [19,] 0.05688734 0.06522904 0.046346822 0.040560882 0.037222429 0.027758787 #> [20,] 0.01958700 0.02872948 0.021625476 0.013624033 0.011923788 0.006174286 #> [21,] 0.04855291 0.04361876 0.030655428 0.035677143 0.031113092 0.019055721 #> [22,] 0.05115298 0.04878439 0.041096263 0.053712343 0.048622138 0.022627111 #> [23,] 0.01142135 0.01065841 0.008975878 0.004187517 0.003444494 0.005165492 #> [24,] 0.03599252 0.04075226 0.048066877 0.042427435 0.048430174 0.016616661 #> [25,] 0.05016524 0.06033360 0.062757451 0.061811728 0.070595835 0.022314447 #> [26,] 0.02050571 0.02854462 0.053504773 0.045924247 0.056261386 0.006777018 #> [27,] 0.03272550 0.04509633 0.069504861 0.071161202 0.084445355 0.006854829 #> [28,] 0.02820476 0.02854098 0.013259454 0.011535247 0.011121530 0.008623787 #>              [,7]         [,8]        [,9]       [,10]        [,11] #>  [1,] 0.012635907 0.0345111366 0.076040440 0.110159742 0.0325710603 #>  [2,] 0.007552997 0.0235592374 0.057539137 0.105413277 0.0422239720 #>  [3,] 0.008545467 0.0381733605 0.084574047 0.118771536 0.0324497037 #>  [4,] 0.015190431 0.0246016818 0.091345984 0.136589695 0.0265719807 #>  [5,] 0.002163974 0.0308755774 0.100226627 0.150372515 0.0351852594 #>  [6,] 0.010629545 0.0094664492 0.057500734 0.105562756 0.0454659057 #>  [7,] 0.018758751 0.0088146221 0.060973183 0.119920601 0.0582538415 #>  [8,] 0.009707479 0.0070248754 0.009284702 0.006343006 0.0007590439 #>  [9,] 0.013152956 0.0199737870 0.015926428 0.021112447 0.0045872158 #> [10,] 0.012995884 0.0095565514 0.008615908 0.010552018 0.0046558621 #> [11,] 0.004736495 0.0063616130 0.006540508 0.008273813 0.0052234803 #> [12,] 0.013727905 0.0237629411 0.035964385 0.044094640 0.0106219700 #> [13,] 0.017485710 0.0289618004 0.040229347 0.048606665 0.0110262681 #> [14,] 0.015270182 0.0136434794 0.009343775 0.014808220 0.0072103373 #> [15,] 0.015447861 0.0052643668 0.006463093 0.007423185 0.0062578747 #> [16,] 0.004769091 0.0031395312 0.002539431 0.004803469 0.0073926899 #> [17,] 0.008054395 0.0152864520 0.023148034 0.037971823 0.0151285300 #> [18,] 0.008808176 0.0171088792 0.026238435 0.041346593 0.0156539829 #> [19,] 0.022516904 0.0136286036 0.011412669 0.013909778 0.0002166782 #> [20,] 0.004164008 0.0061287770 0.002216074 0.002699664 0.0002625998 #> [21,] 0.015660875 0.0253835007 0.022765288 0.022595283 0.0025400748 #> [22,] 0.016338439 0.0296181091 0.026026844 0.024768890 0.0032085867 #> [23,] 0.004946949 0.0009981894 0.003028267 0.001084037 0.0002915975 #> [24,] 0.016824835 0.0111546755 0.026618707 0.027447035 0.0017907530 #> [25,] 0.025559022 0.0150603987 0.030131129 0.032665880 0.0019734863 #> [26,] 0.006912700 0.0118231997 0.025919989 0.031108128 0.0024523076 #> [27,] 0.008316147 0.0163663580 0.031320234 0.036711683 0.0029309439 #> [28,] 0.010398057 0.0062078390 0.006016504 0.002358181 0.0009362008 #>              [,12] [,13]        [,14]        [,15]       [,16]       [,17] #>  [1,] 1.040630e-02     0 1.164902e-02 4.204829e-02 0.134543244 0.095648309 #>  [2,] 1.276933e-02     0 1.089570e-02 3.910933e-02 0.122007318 0.089693065 #>  [3,] 6.267439e-03     0 1.678665e-02 5.603486e-02 0.121278648 0.075088547 #>  [4,] 7.006353e-03     0 1.125546e-02 2.877036e-02 0.124126947 0.101362316 #>  [5,] 1.093077e-02     0 1.200075e-02 6.427553e-02 0.130560278 0.073951720 #>  [6,] 2.032658e-02     0 1.877611e-02 7.476512e-02 0.094322149 0.044053262 #>  [7,] 2.190801e-02     0 1.982677e-02 8.307096e-02 0.107225101 0.052422580 #>  [8,] 1.623253e-04     0 4.557987e-04 1.463448e-03 0.007773402 0.006289221 #>  [9,] 3.362800e-03     0 6.533559e-04 2.881607e-03 0.020817558 0.017962139 #> [10,] 1.957335e-03     0 1.572967e-03 7.566119e-03 0.018121486 0.010187176 #> [11,] 1.383241e-03     0 2.215096e-03 3.495025e-03 0.029169640 0.025878108 #> [12,] 2.114031e-03     0 3.472683e-03 1.057402e-02 0.066073893 0.056075063 #> [13,] 3.254108e-03     0 3.538819e-03 1.091195e-02 0.066468155 0.055432680 #> [14,] 3.137903e-03     0 3.219365e-04 1.612032e-03 0.012596538 0.012370418 #> [15,] 2.377907e-03     0 8.200578e-04 5.435890e-03 0.009833125 0.006057058 #> [16,] 2.136754e-03     0 1.448610e-03 1.783064e-03 0.018598750 0.018648103 #> [17,] 2.873479e-03     0 2.586324e-03 8.376764e-03 0.052360163 0.047794559 #> [18,] 3.855192e-03     0 2.686450e-03 8.568660e-03 0.053571928 0.047993208 #> [19,] 2.045975e-03     0 5.051936e-04 2.105341e-03 0.002608169 0.004347026 #> [20,] 9.613066e-04     0 5.980695e-04 9.195487e-07 0.001499387 0.001222761 #> [21,] 1.130349e-03     0 2.172512e-03 4.312372e-03 0.027366544 0.022231718 #> [22,] 5.214653e-04     0 2.357629e-03 4.947864e-03 0.030091849 0.023513960 #> [23,] 2.024377e-04     0 8.139796e-05 2.278073e-03 0.001665226 0.005451690 #> [24,] 3.433409e-05     0 8.920290e-04 1.486432e-03 0.030988707 0.039076011 #> [25,] 2.852599e-04     0 9.069232e-04 1.174206e-03 0.031875678 0.038731295 #> [26,] 9.183757e-05     0 3.955442e-04 5.175883e-03 0.021081630 0.015812170 #> [27,] 2.845253e-04     0 5.291961e-04 6.232539e-03 0.023977626 0.017356998 #> [28,] 1.267331e-04     0 5.834451e-06 7.911580e-04 0.003982528 0.003640608 #>             [,18]        [,19]        [,20]       [,21]       [,22]       [,23] #>  [1,] 0.042487843 0.0106463822 0.0049171837 0.223608521 0.192673633 0.100042059 #>  [2,] 0.038347943 0.0074420702 0.0031213380 0.221013974 0.164464609 0.080496336 #>  [3,] 0.042181108 0.0135991614 0.0060590213 0.237049354 0.176502923 0.119589142 #>  [4,] 0.049122862 0.0131807149 0.0046040366 0.264519469 0.199087503 0.118089411 #>  [5,] 0.029089442 0.0008059454 0.0070371123 0.205479242 0.143685400 0.050963673 #>  [6,] 0.010629566 0.0074674204 0.0249425848 0.143297831 0.080884399 0.027226127 #>  [7,] 0.015764281 0.0047428870 0.0243847732 0.176391820 0.099628581 0.031745531 #>  [8,] 0.008251357 0.0096907986 0.0077012507 0.010866329 0.013563288 0.011593977 #>  [9,] 0.007597600 0.0047053070 0.0036050973 0.024580727 0.027938245 0.012242492 #> [10,] 0.005336946 0.0044078932 0.0041772919 0.023145986 0.022593803 0.010828709 #> [11,] 0.012927402 0.0065187566 0.0043482660 0.053823714 0.054666538 0.038184489 #> [12,] 0.031573307 0.0157961102 0.0092958150 0.113079651 0.112847393 0.070583758 #> [13,] 0.029059236 0.0136730496 0.0078265796 0.109946905 0.111954549 0.069502717 #> [14,] 0.004377798 0.0058657778 0.0040183263 0.017991351 0.013758014 0.007134809 #> [15,] 0.003161499 0.0028137835 0.0031520756 0.014848275 0.008329188 0.004264062 #> [16,] 0.008723452 0.0037461567 0.0019333675 0.042459716 0.032061684 0.022740165 #> [17,] 0.026484981 0.0118861841 0.0054696232 0.101617982 0.084003351 0.051573564 #> [18,] 0.024655143 0.0109142310 0.0050677870 0.099074801 0.083634871 0.051537082 #> [19,] 0.002561615 0.0044773479 0.0033483441 0.006285256 0.006035002 0.003384348 #> [20,] 0.002674612 0.0049587453 0.0071346665 0.013073903 0.010624032 0.019157476 #> [21,] 0.023491309 0.0197374824 0.0134362025 0.074739245 0.065050674 0.064800681 #> [22,] 0.021975735 0.0203392339 0.0161521210 0.076337861 0.066970903 0.067684648 #> [23,] 0.003669885 0.0060804031 0.0083579692 0.010711292 0.010860714 0.015395395 #> [24,] 0.026903746 0.0223632534 0.0186015010 0.076165711 0.074754399 0.060983392 #> [25,] 0.023884413 0.0194777145 0.0163754149 0.072920624 0.072687844 0.061373953 #> [26,] 0.011260031 0.0045273984 0.0011704912 0.032311489 0.030611620 0.013912927 #> [27,] 0.010123069 0.0035442703 0.0009974872 0.031341715 0.031484138 0.015100289 #> [28,] 0.005745668 0.0073554835 0.0053779593 0.012360609 0.011709647 0.013174067 #>             [,24]       [,25] #>  [1,] 0.046230251 0.020476941 #>  [2,] 0.034039561 0.016574904 #>  [3,] 0.063417681 0.046690905 #>  [4,] 0.053360895 0.034057050 #>  [5,] 0.008449433 0.001574758 #>  [6,] 0.009511592 0.018432498 #>  [7,] 0.011516544 0.019748169 #>  [8,] 0.011697306 0.010519283 #>  [9,] 0.011427620 0.006319430 #> [10,] 0.006878600 0.005632575 #> [11,] 0.026566803 0.018438287 #> [12,] 0.044682077 0.031917902 #> [13,] 0.042379734 0.028876100 #> [14,] 0.008525952 0.008171267 #> [15,] 0.003196416 0.005644399 #> [16,] 0.016278182 0.013737923 #> [17,] 0.031811625 0.026189122 #> [18,] 0.030723705 0.024288117 #> [19,] 0.005552698 0.003038684 #> [20,] 0.021835370 0.031279222 #> [21,] 0.054745546 0.064624548 #> [22,] 0.055360457 0.064022863 #> [23,] 0.016557831 0.024647105 #> [24,] 0.046004530 0.055025719 #> [25,] 0.044052337 0.051021511 #> [26,] 0.005440407 0.003660743 #> [27,] 0.005066223 0.003251848 #> [28,] 0.010746082 0.012487789 #>  #> $measure #> [1] \"OR\" #>  #> $threshold #> [1] 0.28 #>  #> $scenarios #> [1] -1.098612289 -0.693147181 -0.000100005  0.693147181  1.098612289 #>  #> attr(,\"class\") #> [1] \"robustness_index\""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Calculates robustness index sensitivity analysis   (Spineli et al., 2021) performed using R-package   netmeta   metafor.   user defines input function returns robustness index.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"","code":"robustness_index_user(sens, pkg, attribute, threshold)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"sens list R objects class netmeta, netmetabin (see netmeta) rma, rma.glmm, rma.mh, rma.mv, rma.peto, rma.uni (see metafor). number elements equals number analyses using dataset R-package. first element refer primary analysis. Hence, list include least two elements (see 'Details'). pkg Character string indicating R-package values \"netmeta\", \"metafor\". attribute relevant (see netmeta). vector least two characters values \"TE.common\" \"TE.random\". See 'Values' netmeta netmetabin. threshold number indicating threshold robustness, , minimally allowed deviation primary analysis (first element sens) re-analysis results. See 'Details' .","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"robustness_index_user prints R console message   green text threshold robustness determined user.   , function returns following list elements: robust_index numeric scalar vector robustness   index values. case pairwise meta-analysis,   robust_index scalar one summary effect size obtained.   case network meta-analysis, robust_index vector   length equal number possible pairwise comparisons;   one robustness index per possible comparison. robust character character vector (length   robust_index) whether primary analysis results   robust frail different re-analyses. kld vector matrix Kullback-Leibler divergence   (KLD) measure summary effect size subsequent re-analysis   primary analysis. case pairwise meta-analysis, kld   vector length equal number total analyses (one KLD   value obtained per analysis). number total analyses equals   length  sens.   case network meta-analysis, robust_index matrix   number rows equal number total analyses number columns   equal number  possible pairwise comparisons; one KLD   value per analysis possible comparison. attribute attributes considered. threshold threshold used inherited   heatmap_robustness function. See 'Details'.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Thresholds robustness proposed odds ratio   standardised mean difference (Spineli et al., 2021).   user may consider values 0.28 0.17 argument   threshold odds ratio standardised mean difference effect   measures (default values), respectively, consider plausible   values. argument threshold defined,   robustness_index considers default values 0.28 0.17   threshold robustness binary continuous outcome, respectively,   regardless effect measure (default thresholds may proper   choices effect measures; hence, use threshold great   caution case). Spineli et al. (2021) offers discussion   specifying threshold robustness. effect measure used (odds ratio standardised   mean difference) elements sens refer different effect   measures, execution function stopped error   message printed R console. robust, value \"robust\" appears calculated   robust_index less threshold; otherwise, value   \"frail\" appears.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Kullback S, Leibler RA. information sufficiency. Ann Math Stat 1951;22(1):79--86. doi: 10.1214/aoms/1177729694 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/robustness_index_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robustness index when 'metafor' or 'netmeta' are used — robustness_index_user","text":"","code":"library(netmeta) #> Loading required package: meta #> Loading required package: metadat #> Loading 'meta' package (version 7.0-0). #> Type 'help(meta)' for a brief overview. #> Readers of 'Meta-Analysis with R (Use R!)' should install #> older version of 'meta' package: https://tinyurl.com/dt4y5drs #> Loading 'netmeta' package (version 2.9-0). #> Type 'help(\"netmeta-package\")' for a brief overview. #> Readers of 'Meta-Analysis with R (Use R!)' should install #> older version of 'netmeta' package: https://tinyurl.com/kyz6wjbb  # Load data from 'netmeta' data(Baker2009)  # \\donttest{ # Transform from arm-based to contrast-based format p1 <- pairwise(treatment, exac, total, studlab = paste(study, year), data = Baker2009, sm = \"OR\")  # Conduct standard network meta-analysis net1 <- netmeta(p1, ref = \"Placebo\") #> Warning: Comparisons with missing TE / seTE or zero seTE not considered in network meta-analysis. #> Comparisons not considered in network meta-analysis: #>             studlab                 treat1     treat2 TE seTE #>  DalNegro 2003 2008 Fluticasone+Salmeterol    Placebo NA   NA #>  DalNegro 2003 2008 Fluticasone+Salmeterol Salmeterol NA   NA #>  DalNegro 2003 2008             Salmeterol    Placebo NA   NA #>   # Calculate the robustness index (random-effects versus fixed-effect) robustness_index_user(sens = list(net1, net1),                       pkg = \"netmeta\",                       attribute = c(\"TE.random\", \"TE.common\"),                       threshold = 0.28) #> The value 0.28 was assigned as 'threshold' for odds ratio. #> $robust_index #>  [1] 0.028 0.033 0.027 0.028 0.026 0.023 0.019 0.027 0.029 0.016 0.017 0.056 #> [13] 0.037 0.178 0.032 0.132 0.331 0.158 0.036 0.153 0.279 0.135 0.016 0.080 #> [25] 0.049 0.404 0.187 0.083 #>  #> $robust #>  [1] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #>  [9] \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [17] \"frail\"  \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" \"robust\" #> [25] \"robust\" \"frail\"  \"robust\" \"robust\" #>  #> $kld #>       [,1]       [,2] #>  [1,]    0 0.02836495 #>  [2,]    0 0.03257980 #>  [3,]    0 0.02722202 #>  [4,]    0 0.02849910 #>  [5,]    0 0.02626853 #>  [6,]    0 0.02302402 #>  [7,]    0 0.01880818 #>  [8,]    0 0.02724407 #>  [9,]    0 0.02940723 #> [10,]    0 0.01554727 #> [11,]    0 0.01713124 #> [12,]    0 0.05576999 #> [13,]    0 0.03728486 #> [14,]    0 0.17785482 #> [15,]    0 0.03248015 #> [16,]    0 0.13215434 #> [17,]    0 0.33101210 #> [18,]    0 0.15773058 #> [19,]    0 0.03610592 #> [20,]    0 0.15342988 #> [21,]    0 0.27935230 #> [22,]    0 0.13504143 #> [23,]    0 0.01568048 #> [24,]    0 0.07998601 #> [25,]    0 0.04886111 #> [26,]    0 0.40400424 #> [27,]    0 0.18677630 #> [28,]    0 0.08329875 #>  #> $measure #> [1] \"OR\" #>  #> $threshold #> [1] 0.28 #>  #> $attribute #> [1] \"TE.random\" \"TE.common\" #>  #> attr(,\"class\") #> [1] \"robustness_index_user\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian pairwise or network meta-regression — run_metareg","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Performs one-stage pairwise network meta-regression addressing   aggregate binary continuous missing participant outcome data via   pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"","code":"run_metareg(   full,   covariate,   covar_assumption,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"full object S3 class run_model. See 'Value' run_model. covariate numeric vector matrix trial-specific covariate potential effect modifier. See 'Details'. covar_assumption Character string indicating structure intervention--covariate interaction, described Cooper et al. (2009). Set covar_assumption equal \"exchangeable\", \"independent\", \"common\". n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"list R2jags outputs summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   fixed-effect pairwise meta-analysis: EM estimated summary effect measure (according argument   measure defined run_model). beta_all estimated regression coefficient possible   pairwise comparisons according argument covar_assumption. dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. phi informative missingness parameter. fixed-effect network meta-analysis, output additionally   includes: SUCRA surface cumulative ranking (SUCRA) curve   intervention. effectiveneness ranking probability intervention   every rank. random-effects pairwise meta-analysis, output additionally   includes following elements: EM_pred predicted summary effect measure (according   argument measure defined run_model). delta estimated trial-specific effect measure (according   argument measure defined run_model).   multi-arm trial, estimate T-1 effects, T   number interventions trial. tau -trial standard deviation. network meta-analysis, EM EM_pred refer   possible pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network.   multi-arm trial, estimate total T-1 delta   comparisons baseline intervention trial (found first   column element t), T number   interventions trial. Furthermore, output includes following elements: abs_risk adjusted absolute risks intervention.   appears measure = \"\", measure = \"RR\",   measure = \"RD\". leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. run_metareg function also returns arguments data,  measure, model, assumption, covariate,  covar_assumption, n_chains, n_iter, n_burnin,   n_thin inherited relevant functions   package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"run_metareg inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, D, ref,   indic, base_risk run_model   (now contained argument full). prevents specifying   different Bayesian model considered run_model.   Therefore, user needs first apply run_model,   use run_metareg (see 'Examples'). model runs JAGS progress simulation appears   R console. output run_metareg used S3 object   functions package processed provide   end-user-ready output. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. models described Spineli et al. (2021), Spineli (2019)   extended incorporate one study-level covariate variable   following assumptions Cooper et al. (2009) structure   intervention--covariate interaction. covariate can either   numeric vector matrix columns equal maximum number arms   dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_metareg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Bayesian pairwise or network meta-regression — run_metareg","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # Publication year pub_year <- c(1996, 1998, 1999, 2000, 2000, 2001, rep(2002, 5), 2003, 2003,               rep(2005, 4), 2006, 2006, 2007, 2007)  # \\donttest{ # Perform a random-effects network meta-regression (exchangeable structure) # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_metareg(full = res,             covariate = pub_year,             covar_assumption = \"exchangeable\",             n_chains = 3,             n_iter = 1000,             n_burnin = 100,             n_thin = 1) #> **Fixed baseline risk assigned** #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 100 #>    Unobserved stochastic nodes: 157 #>    Total graph size: 2808 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>                mean        sd        2.5%         25%         50%         75% #> EM[2,1] -1.07762575 0.4914379 -1.87410236 -1.46772665 -1.11074388 -0.73742959 #> EM[3,1] -0.82883141 0.4362771 -1.54850333 -1.16575653 -0.86851606 -0.50875229 #> EM[4,1] -0.13699089 0.3315240 -0.74587342 -0.36373804 -0.13837034  0.04536648 #> EM[5,1] -0.40347290 0.4013539 -1.07105129 -0.72412998 -0.41758514 -0.09451077 #> EM[6,1] -0.15722763 0.2745780 -0.75526208 -0.32485436 -0.13831092  0.01134601 #> EM[7,1] -0.46598009 0.1957360 -0.80945692 -0.60161569 -0.47095079 -0.33908797 #> EM[8,1] -0.53545468 0.1549490 -0.81188571 -0.65097644 -0.54490507 -0.42525455 #> EM[3,2]  0.24879435 0.4868863 -0.76481730 -0.06643937  0.28618951  0.57845587 #> EM[4,2]  0.94063487 0.5234885 -0.05708657  0.60368353  0.91492980  1.33676858 #> EM[5,2]  0.67415286 0.4886213 -0.31633975  0.35539349  0.67926573  0.99089861 #> EM[6,2]  0.92039812 0.5301892 -0.19415025  0.53762026  0.93708531  1.32488363 #> EM[7,2]  0.61164567 0.4494251 -0.32580070  0.30665599  0.63501674  0.95562470 #> EM[8,2]  0.54217108 0.4572221 -0.41963266  0.23608033  0.56417084  0.88646390 #> EM[4,3]  0.69184052 0.5124262 -0.25528959  0.30967666  0.71523056  1.08770343 #> EM[5,3]  0.42535851 0.4394189 -0.48498123  0.15786263  0.43524939  0.69293299 #> EM[6,3]  0.67160377 0.4809429 -0.35386261  0.33977894  0.69088395  1.01802676 #> EM[7,3]  0.36285132 0.3919011 -0.47765889  0.11207924  0.40001980  0.62731873 #> EM[8,3]  0.29337673 0.3876433 -0.50760389  0.04088110  0.32417453  0.57221425 #> EM[5,4] -0.26648201 0.4621410 -1.06911991 -0.62887675 -0.25259247  0.03592457 #> EM[6,4] -0.02023674 0.3866254 -0.91665836 -0.24578129  0.03577384  0.25876508 #> EM[7,4] -0.32898920 0.3350488 -1.03346369 -0.56528930 -0.33916264 -0.07034810 #> EM[8,4] -0.39846379 0.3316891 -1.08656448 -0.60067319 -0.41008197 -0.17579767 #> EM[6,5]  0.24624527 0.4624983 -0.73147980 -0.09024363  0.26881798  0.59654447 #> EM[7,5] -0.06250719 0.3415066 -0.70762530 -0.33240408 -0.03508885  0.20317192 #> EM[8,5] -0.13198178 0.3539951 -0.81795290 -0.39069061 -0.11705425  0.14037322 #> EM[7,6] -0.30875245 0.2868191 -0.81579032 -0.50361531 -0.32969631 -0.12676933 #> EM[8,6] -0.37822705 0.2736710 -0.83589579 -0.58103920 -0.40078770 -0.20639313 #> EM[8,7] -0.06947459 0.1725647 -0.45671965 -0.16986166 -0.06610301  0.04775332 #>               97.5%     Rhat n.eff #> EM[2,1] -0.07047538 1.040369    95 #> EM[3,1] -0.00184136 1.011435   210 #> EM[4,1]  0.60949436 1.150518    20 #> EM[5,1]  0.44890379 1.051604    52 #> EM[6,1]  0.36175936 1.049734    51 #> EM[7,1] -0.08513451 1.101082    31 #> EM[8,1] -0.23626088 1.021266   120 #> EM[3,2]  1.12963466 1.010394   540 #> EM[4,2]  1.88689875 1.006014   360 #> EM[5,2]  1.66801423 1.017701  2100 #> EM[6,2]  1.82015955 1.077599    36 #> EM[7,2]  1.39005944 1.042520   130 #> EM[8,2]  1.31767052 1.026403   120 #> EM[4,3]  1.62269539 1.018915   120 #> EM[5,3]  1.32737694 1.020925   270 #> EM[6,3]  1.50732936 1.046854    50 #> EM[7,3]  1.04992605 1.014215   230 #> EM[8,3]  0.96083417 1.009398   320 #> EM[5,4]  0.66331107 1.016845   540 #> EM[6,4]  0.59427297 1.275873    12 #> EM[7,4]  0.26890977 1.062625    39 #> EM[8,4]  0.22745550 1.098564    26 #> EM[6,5]  1.03440742 1.112671    25 #> EM[7,5]  0.54055665 1.027050    85 #> EM[8,5]  0.50638740 1.037190    60 #> EM[7,6]  0.34384188 1.156003    18 #> EM[8,6]  0.24197506 1.087264    30 #> EM[8,7]  0.25209027 1.045969    63 #>  #> $EM_pred #>                     mean        sd        2.5%         25%         50% #> EM.pred[2,1] -1.07721862 0.5085658 -1.91522228 -1.47475711 -1.10611291 #> EM.pred[3,1] -0.82763078 0.4603255 -1.58276978 -1.18506762 -0.86966139 #> EM.pred[4,1] -0.13664222 0.3635711 -0.81316888 -0.37994537 -0.13264792 #> EM.pred[5,1] -0.40653161 0.4230541 -1.13293983 -0.74262944 -0.41228713 #> EM.pred[6,1] -0.15783222 0.3129088 -0.84826071 -0.34136639 -0.14432474 #> EM.pred[7,1] -0.46515994 0.2401881 -0.92966321 -0.62631367 -0.45869233 #> EM.pred[8,1] -0.53590133 0.2165445 -0.95797019 -0.66716104 -0.53397874 #> EM.pred[3,2]  0.25076266 0.5083925 -0.80379112 -0.07501427  0.28770313 #> EM.pred[4,2]  0.93928407 0.5475872 -0.09384336  0.57883766  0.91599307 #> EM.pred[5,2]  0.67336614 0.5085908 -0.39018919  0.34199766  0.67918749 #> EM.pred[6,2]  0.91695913 0.5502745 -0.20970698  0.52500672  0.93450040 #> EM.pred[7,2]  0.61669665 0.4783069 -0.36553137  0.29024179  0.64311791 #> EM.pred[8,2]  0.54255666 0.4814223 -0.46734751  0.21895084  0.56633440 #> EM.pred[4,3]  0.68952811 0.5355972 -0.31635881  0.30512756  0.71538393 #> EM.pred[5,3]  0.42319017 0.4600350 -0.54101850  0.15087333  0.44543915 #> EM.pred[6,3]  0.67033479 0.5019299 -0.42736854  0.32844593  0.68331359 #> EM.pred[7,3]  0.35965612 0.4135604 -0.54866603  0.10420464  0.38957329 #> EM.pred[8,3]  0.29921515 0.4122955 -0.53915794  0.02592669  0.33251866 #> EM.pred[5,4] -0.26522558 0.4891671 -1.14913930 -0.64727485 -0.25433277 #> EM.pred[6,4] -0.01524370 0.4093725 -0.92154371 -0.26599056  0.03425576 #> EM.pred[7,4] -0.33428516 0.3706092 -1.08954029 -0.58512092 -0.35107339 #> EM.pred[8,4] -0.40425646 0.3656927 -1.14442864 -0.62619192 -0.41190014 #> EM.pred[6,5]  0.24820190 0.4805783 -0.74204506 -0.10520164  0.26064474 #> EM.pred[7,5] -0.06222555 0.3667904 -0.75952443 -0.34613729 -0.04607481 #> EM.pred[8,5] -0.13218208 0.3848303 -0.86759662 -0.41338910 -0.12056202 #> EM.pred[7,6] -0.30967571 0.3231685 -0.90809769 -0.53403578 -0.32367813 #> EM.pred[8,6] -0.37980691 0.3091731 -0.92968048 -0.59629488 -0.40068565 #> EM.pred[8,7] -0.07464886 0.2256737 -0.56033401 -0.19797975 -0.07038665 #>                      75%        97.5%     Rhat n.eff #> EM.pred[2,1] -0.73449092 -0.019015158 1.031790   120 #> EM.pred[3,1] -0.50219334  0.093240772 1.008990   290 #> EM.pred[4,1]  0.06496601  0.663077848 1.120055    24 #> EM.pred[5,1] -0.08895739  0.466563754 1.042747    62 #> EM.pred[6,1]  0.03245474  0.436709615 1.033481    73 #> EM.pred[7,1] -0.31433045 -0.001195404 1.054366    52 #> EM.pred[8,1] -0.40745934 -0.103705075 1.014586   170 #> EM.pred[3,2]  0.58668910  1.208763679 1.011644   450 #> EM.pred[4,2]  1.35257725  1.943621806 1.006832   320 #> EM.pred[5,2]  1.00685776  1.701173876 1.012976  2400 #> EM.pred[6,2]  1.33211711  1.855438330 1.066721    41 #> EM.pred[7,2]  0.97768616  1.479890814 1.032760   150 #> EM.pred[8,2]  0.89576480  1.365826987 1.025259   110 #> EM.pred[4,3]  1.09274870  1.624251555 1.017566   120 #> EM.pred[5,3]  0.69974220  1.336650348 1.018471   330 #> EM.pred[6,3]  1.03797746  1.552800780 1.041055    56 #> EM.pred[7,3]  0.62952664  1.114063502 1.009733   330 #> EM.pred[8,3]  0.58951432  1.041889563 1.006661   440 #> EM.pred[5,4]  0.05370864  0.677303578 1.014426   810 #> EM.pred[6,4]  0.26735673  0.684060154 1.236612    14 #> EM.pred[7,4] -0.05799456  0.325399298 1.044486    51 #> EM.pred[8,4] -0.15200760  0.269475010 1.078915    31 #> EM.pred[6,5]  0.61692886  1.079516054 1.098796    27 #> EM.pred[7,5]  0.21093218  0.617716965 1.025697    88 #> EM.pred[8,5]  0.16001005  0.566508070 1.033734    65 #> EM.pred[7,6] -0.10191164  0.386375117 1.128949    21 #> EM.pred[8,6] -0.18126888  0.298532757 1.059767    41 #> EM.pred[8,7]  0.06611467  0.360132429 1.021600   110 #>  #> $tau #>         mean           sd         2.5%          25%          50%          75%  #>   0.12239889   0.07968874   0.01678783   0.05423985   0.11376035   0.17000020  #>        97.5%         Rhat        n.eff  #>   0.31081717   1.01628053 360.00000000  #>  #> $delta #>                    mean        sd       2.5%        25%         50% #> delta[1,2]  -0.16420949 0.3596847 -0.8512723 -0.4268156 -0.15040647 #> delta[2,2]  -0.13346472 0.3371803 -0.7584803 -0.3527246 -0.13703096 #> delta[3,2]  -0.49386240 0.2220149 -0.9002180 -0.6541289 -0.49090686 #> delta[4,2]  -0.50571175 0.1663867 -0.8087166 -0.6273832 -0.51078464 #> delta[5,2]  -0.47650530 0.2240994 -0.9151998 -0.6282371 -0.46948200 #> delta[6,2]  -0.41265611 0.2245274 -0.8039884 -0.5606228 -0.41917986 #> delta[7,2]  -0.50842153 0.1645960 -0.7904786 -0.6326388 -0.51576176 #> delta[8,2]  -0.45518677 0.2063810 -0.8154878 -0.5985635 -0.45936646 #> delta[9,2]  -0.48248858 0.2078212 -0.8787736 -0.6262299 -0.47691514 #> delta[10,2] -0.09448344 0.3640797 -0.7432694 -0.3334062 -0.11135288 #> delta[11,2] -0.17037994 0.2680936 -0.7586930 -0.3336820 -0.15278445 #> delta[12,2] -0.13977034 0.3281893 -0.7506572 -0.3593651 -0.13548822 #> delta[13,2] -1.10633885 0.4791095 -1.8605181 -1.4888865 -1.13778255 #> delta[14,2] -0.09265426 0.1908606 -0.5012380 -0.2035071 -0.08487327 #> delta[15,2] -0.13654575 0.2798515 -0.7424386 -0.3121628 -0.12601043 #> delta[16,2] -0.42502247 0.1690307 -0.7059770 -0.5534815 -0.43459906 #> delta[17,2] -0.42705080 0.3016612 -0.9832788 -0.6308547 -0.44056184 #> delta[18,2] -0.44998364 0.4163737 -1.1479434 -0.7793594 -0.47069605 #> delta[19,2] -0.42919957 0.4237117 -1.1559397 -0.7645891 -0.44692412 #> delta[20,2] -0.46340154 0.2302481 -0.8768181 -0.6240195 -0.46441903 #> delta[21,2] -0.58175572 0.2009666 -1.0050926 -0.7087079 -0.58531705 #> delta[9,3]  -0.57351566 0.1769499 -0.9419178 -0.6887639 -0.57851502 #> delta[10,3] -0.41756629 0.4119905 -1.1130878 -0.7483472 -0.43181588 #> delta[12,3] -0.34062056 0.4094381 -1.0221989 -0.6717692 -0.34096126 #> delta[13,3] -0.85508016 0.4157890 -1.5238747 -1.1840248 -0.90380515 #> delta[19,3] -0.50488869 0.2393637 -0.9667609 -0.6685913 -0.49220886 #> delta[10,4] -0.49817333 0.2441961 -0.9897614 -0.6650643 -0.49219652 #> delta[12,4] -0.41539301 0.2385455 -0.8280472 -0.5749402 -0.42290994 #> delta[13,4] -0.21763601 0.3034099 -0.8990100 -0.3828626 -0.19711199 #>                      75%        97.5%     Rhat n.eff #> delta[1,2]   0.042597471  0.625898845 1.126902    23 #> delta[2,2]   0.049181404  0.618718813 1.154988    19 #> delta[3,2]  -0.346467382 -0.079560030 1.092002    34 #> delta[4,2]  -0.397963543 -0.164921303 1.013645   200 #> delta[5,2]  -0.336534743 -0.052888345 1.076411    40 #> delta[6,2]  -0.265066197  0.059324582 1.053379    54 #> delta[7,2]  -0.401868596 -0.166619549 1.009521   220 #> delta[8,2]  -0.319734781 -0.055564477 1.061736    45 #> delta[9,2]  -0.345253246 -0.091779352 1.091968    32 #> delta[10,2]  0.110079759  0.745036497 1.110743    26 #> delta[11,2] -0.005874223  0.341755353 1.046108    55 #> delta[12,2]  0.042758399  0.569870244 1.142544    21 #> delta[13,2] -0.762820819 -0.131187187 1.046151    85 #> delta[14,2]  0.037554103  0.260094579 1.023645   120 #> delta[15,2]  0.021931704  0.394366942 1.063647    40 #> delta[16,2] -0.315327475 -0.068102527 1.013470   450 #> delta[17,2] -0.241167735  0.239544577 1.076488    34 #> delta[18,2] -0.134397727  0.440124104 1.052885    49 #> delta[19,2] -0.110747072  0.472761394 1.044859    58 #> delta[20,2] -0.319695410  0.003332099 1.067250    45 #> delta[21,2] -0.441369183 -0.210304492 1.017007   160 #> delta[9,3]  -0.446947487 -0.249705279 1.028750    91 #> delta[10,3] -0.098665310  0.435536800 1.047689    54 #> delta[12,3] -0.045834041  0.495122700 1.051056    57 #> delta[13,3] -0.530429334 -0.092157331 1.012392   180 #> delta[19,3] -0.354416298 -0.069110273 1.079893    43 #> delta[10,4] -0.337598221 -0.049669418 1.087847    33 #> delta[12,4] -0.270331273  0.105168878 1.058629    42 #> delta[13,4] -0.034463650  0.355521630 1.033006    81 #>  #> $beta_all #>                       mean         sd        2.5%          25%           50% #> beta.all[2,1]  0.038648761 0.12798564 -0.22718503 -0.004256992  0.0361196777 #> beta.all[3,1]  0.037116510 0.12656803 -0.24701857 -0.005957774  0.0350787530 #> beta.all[4,1]  0.061261982 0.06021728 -0.03883874  0.019463654  0.0554777314 #> beta.all[5,1] -0.001990032 0.08423375 -0.19903116 -0.042504456  0.0116158970 #> beta.all[6,1]  0.087665999 0.08213600 -0.03395210  0.028182334  0.0706616529 #> beta.all[7,1]  0.041116111 0.04123818 -0.04131701  0.015368953  0.0398735955 #> beta.all[8,1]  0.014064418 0.04304645 -0.08061340 -0.011717376  0.0166887789 #> beta.all[3,2] -0.001532251 0.15483705 -0.35670474 -0.046148237 -0.0009389087 #> beta.all[4,2]  0.022613221 0.13483290 -0.23431277 -0.025754129  0.0056002572 #> beta.all[5,2] -0.040638792 0.13777411 -0.36865750 -0.090135610 -0.0163978814 #> beta.all[6,2]  0.049017238 0.14533081 -0.18539678 -0.014752288  0.0174356382 #> beta.all[7,2]  0.002467350 0.12688679 -0.25849238 -0.040869982 -0.0001217319 #> beta.all[8,2] -0.024584343 0.12862792 -0.32873948 -0.067416015 -0.0117770120 #> beta.all[4,3]  0.024145472 0.13229462 -0.22370528 -0.027149278  0.0069759876 #> beta.all[5,3] -0.039106542 0.13898632 -0.37146642 -0.088772676 -0.0143044692 #> beta.all[6,3]  0.050549488 0.14134682 -0.16863709 -0.014867860  0.0169659375 #> beta.all[7,3]  0.003999601 0.12490289 -0.24768596 -0.038913078  0.0007575494 #> beta.all[8,3] -0.023052093 0.12604817 -0.29767643 -0.065049509 -0.0103476914 #> beta.all[5,4] -0.063252013 0.10742672 -0.34758982 -0.112909012 -0.0295109918 #> beta.all[6,4]  0.026404017 0.08721758 -0.12404603 -0.018478634  0.0105843189 #> beta.all[7,4] -0.020145871 0.06277519 -0.16731067 -0.052770922 -0.0089950368 #> beta.all[8,4] -0.047197564 0.07366125 -0.22408713 -0.087678867 -0.0306869641 #> beta.all[6,5]  0.089656030 0.12026902 -0.06118066  0.002663544  0.0499704767 #> beta.all[7,5]  0.043106143 0.08958300 -0.09994129 -0.005906767  0.0217994478 #> beta.all[8,5]  0.016054449 0.08020363 -0.13887457 -0.024077906  0.0049721415 #> beta.all[7,6] -0.046549887 0.08178576 -0.23912620 -0.090255821 -0.0247251295 #> beta.all[8,6] -0.073601581 0.09140657 -0.29369408 -0.128222500 -0.0473654943 #> beta.all[8,7] -0.027051694 0.04913995 -0.14303631 -0.055603333 -0.0187434553 #>                        75%      97.5%     Rhat n.eff #> beta.all[2,1]  0.087590536 0.31217614 1.037711  3000 #> beta.all[3,1]  0.087981004 0.29154549 1.024978  3000 #> beta.all[4,1]  0.095594876 0.19853179 1.169982    18 #> beta.all[5,1]  0.051059757 0.14155183 1.065302    67 #> beta.all[6,1]  0.134016235 0.27626818 1.098244    27 #> beta.all[7,1]  0.067881052 0.12392571 1.023027    99 #> beta.all[8,1]  0.042677947 0.09360291 1.009003   600 #> beta.all[3,2]  0.045081785 0.32285627 1.055588  3000 #> beta.all[4,2]  0.060653286 0.32901348 1.077352    85 #> beta.all[5,2]  0.013951486 0.22004482 1.025138   180 #> beta.all[6,2]  0.091164820 0.40845145 1.077131    84 #> beta.all[7,2]  0.039678095 0.27835192 1.051157   990 #> beta.all[8,2]  0.019175310 0.23257786 1.040209  3000 #> beta.all[4,3]  0.064939844 0.34648612 1.055041   110 #> beta.all[5,3]  0.014978187 0.22325075 1.034346   130 #> beta.all[6,3]  0.090526308 0.41439568 1.047852   100 #> beta.all[7,3]  0.042660864 0.28514027 1.031202  2200 #> beta.all[8,3]  0.019760511 0.23558474 1.029497  1300 #> beta.all[5,4]  0.002104372 0.08918805 1.198681    19 #> beta.all[6,4]  0.062756527 0.23072342 1.025398   400 #> beta.all[7,4]  0.015031222 0.09537367 1.099267    30 #> beta.all[8,4]  0.001535174 0.06552691 1.153057    21 #> beta.all[6,5]  0.156075700 0.40124242 1.142671    22 #> beta.all[7,5]  0.085012877 0.26053104 1.081316    42 #> beta.all[8,5]  0.051154385 0.20397403 1.051496    86 #> beta.all[7,6]  0.005935916 0.07638617 1.058948    46 #> beta.all[8,6] -0.004979967 0.04908537 1.098817    28 #> beta.all[8,7]  0.004430499 0.05565386 1.033711    83 #>  #> $dev_o #>                  mean        sd         2.5%        25%       50%       75% #> dev.o[1,1]  2.1411210 2.3548088 0.0067700571 0.44809606 1.3806174 3.0555876 #> dev.o[2,1]  0.8848765 1.2480830 0.0007185390 0.08809338 0.3909268 1.1601519 #> dev.o[3,1]  0.9392289 1.3540223 0.0009241960 0.09326509 0.4154029 1.2393362 #> dev.o[4,1]  0.8905803 1.2381965 0.0009102691 0.08564322 0.4170793 1.1349046 #> dev.o[5,1]  0.6097114 0.8282950 0.0007463452 0.06017248 0.2731411 0.8324936 #> dev.o[6,1]  1.1969589 1.5205554 0.0010831993 0.14851739 0.6134705 1.7179884 #> dev.o[7,1]  0.8099472 1.1339442 0.0007446222 0.09010533 0.3744122 1.0758391 #> dev.o[8,1]  0.8044873 1.0694905 0.0010373130 0.09399720 0.3809181 1.0866118 #> dev.o[9,1]  0.6873047 0.9330100 0.0004391323 0.07678187 0.3260387 0.9210931 #> dev.o[10,1] 0.5928317 0.8716858 0.0006489790 0.06045920 0.2654945 0.7602371 #> dev.o[11,1] 0.8596998 1.2302458 0.0007331970 0.08672842 0.3999956 1.1168239 #> dev.o[12,1] 1.0547083 1.3149376 0.0014674942 0.14183900 0.5779899 1.4589523 #> dev.o[13,1] 1.2221779 1.5552811 0.0010066437 0.15062010 0.6332892 1.6812948 #> dev.o[14,1] 0.8152409 1.1551204 0.0009229384 0.08413049 0.3654664 1.1041529 #> dev.o[15,1] 0.8253299 1.1454946 0.0008363860 0.08389763 0.3824676 1.1239195 #> dev.o[16,1] 1.4359757 1.9336538 0.0015659257 0.16372568 0.7135264 1.9023825 #> dev.o[17,1] 1.7966499 2.0669045 0.0034390779 0.31129139 1.0761905 2.6214063 #> dev.o[18,1] 1.2061948 1.5663452 0.0013058228 0.13645481 0.6161836 1.6583315 #> dev.o[19,1] 1.8575797 1.8692728 0.0052853845 0.43973692 1.3224366 2.6424560 #> dev.o[20,1] 0.7350947 1.0655120 0.0007570773 0.07012035 0.3257887 0.9525253 #> dev.o[21,1] 1.4099782 1.8453913 0.0018805961 0.17093879 0.7033639 1.9769809 #> dev.o[1,2]  2.9076852 1.8719612 0.5164470753 1.59314353 2.4925093 3.7756481 #> dev.o[2,2]  0.8835847 1.2411925 0.0008690776 0.08227467 0.4243642 1.1802022 #> dev.o[3,2]  0.9022906 1.3117215 0.0010710854 0.08511257 0.4205231 1.1571956 #> dev.o[4,2]  0.9834267 1.3257016 0.0011028937 0.10257724 0.4649349 1.3577743 #> dev.o[5,2]  0.5597556 0.7956074 0.0005638293 0.05255431 0.2447796 0.7456503 #> dev.o[6,2]  1.2309666 1.5086224 0.0013883695 0.15874500 0.6696875 1.7364811 #> dev.o[7,2]  0.8674249 1.2548129 0.0008728048 0.08537512 0.4113286 1.1463377 #> dev.o[8,2]  0.7446117 1.0231857 0.0009243284 0.08060497 0.3371361 1.0193004 #> dev.o[9,2]  0.6615363 0.9882124 0.0005922880 0.06208354 0.2988539 0.8493019 #> dev.o[10,2] 1.6743968 1.8819683 0.0025796545 0.29267655 1.0607723 2.4189548 #> dev.o[11,2] 0.9652528 1.3456931 0.0011294908 0.10305417 0.4455286 1.2652003 #> dev.o[12,2] 1.2061774 1.5807291 0.0010167199 0.13106601 0.5708265 1.6904265 #> dev.o[13,2] 1.0278948 1.4178205 0.0005842756 0.10663478 0.4908223 1.4132890 #> dev.o[14,2] 0.7390568 1.0114164 0.0005036492 0.07481715 0.3298365 0.9830721 #> dev.o[15,2] 0.9194590 1.3090427 0.0010376903 0.10076287 0.4331042 1.2479972 #> dev.o[16,2] 1.4510086 1.8634677 0.0009341432 0.15665534 0.7142226 2.0669939 #> dev.o[17,2] 1.9615563 1.9474142 0.0068929825 0.53837016 1.4160159 2.7580640 #> dev.o[18,2] 1.2070750 1.6039469 0.0007810077 0.13004241 0.5993764 1.6526343 #> dev.o[19,2] 0.4462474 0.6490049 0.0004644181 0.04272708 0.1942383 0.5880640 #> dev.o[20,2] 0.7157791 1.0095415 0.0010074874 0.07271537 0.3220759 0.9524567 #> dev.o[21,2] 1.2753171 1.5575136 0.0028202610 0.17867619 0.6956857 1.8579413 #> dev.o[9,3]  0.7956368 1.0647349 0.0008517910 0.08342403 0.3852706 1.0792918 #> dev.o[10,3] 0.8385611 1.1723001 0.0009455454 0.08171584 0.3956378 1.0862022 #> dev.o[12,3] 1.2969400 1.6306421 0.0010793561 0.15856101 0.6744291 1.8326082 #> dev.o[13,3] 0.9486651 1.2995419 0.0008765232 0.09870215 0.4381462 1.2720545 #> dev.o[19,3] 1.5892407 1.2752412 0.0279972369 0.63476363 1.2987054 2.2620801 #> dev.o[10,4] 1.1537526 1.3912796 0.0015044772 0.13870718 0.6379147 1.6713949 #> dev.o[12,4] 0.9022063 1.2530628 0.0006464072 0.09955011 0.4201682 1.1841890 #> dev.o[13,4] 1.2914648 1.7142358 0.0015111272 0.14016070 0.6565057 1.7922388 #>                97.5%     Rhat n.eff #> dev.o[1,1]  8.519929 1.003597   910 #> dev.o[2,1]  4.770930 1.003433  3000 #> dev.o[3,1]  4.786881 1.001435  3000 #> dev.o[4,1]  4.420958 1.001347  2400 #> dev.o[5,1]  2.997184 1.000640  3000 #> dev.o[6,1]  5.593159 1.000723  3000 #> dev.o[7,1]  4.009195 1.001297  3000 #> dev.o[8,1]  3.943873 1.003218  1200 #> dev.o[9,1]  3.376619 1.002238  1200 #> dev.o[10,1] 3.089871 1.000847  3000 #> dev.o[11,1] 4.346415 1.004334  1100 #> dev.o[12,1] 4.438762 1.006672   330 #> dev.o[13,1] 5.363397 1.000624  3000 #> dev.o[14,1] 4.119128 1.004887   500 #> dev.o[15,1] 4.112948 1.000923  3000 #> dev.o[16,1] 6.960521 1.014250   300 #> dev.o[17,1] 7.432977 1.006846   620 #> dev.o[18,1] 5.552826 1.004301  1000 #> dev.o[19,1] 6.926971 1.009475   340 #> dev.o[20,1] 3.767973 1.000872  3000 #> dev.o[21,1] 6.288198 1.002126  3000 #> dev.o[1,2]  7.611604 1.004211   820 #> dev.o[2,2]  4.305104 1.002842   880 #> dev.o[3,2]  4.851229 1.000970  3000 #> dev.o[4,2]  4.996874 1.003567   680 #> dev.o[5,2]  2.886992 1.000958  3000 #> dev.o[6,2]  5.292338 1.002317  1100 #> dev.o[7,2]  4.422919 1.001780  1600 #> dev.o[8,2]  3.567978 1.003730   620 #> dev.o[9,2]  3.349648 1.002899   840 #> dev.o[10,2] 6.774353 1.004144   730 #> dev.o[11,2] 4.926815 1.003277   720 #> dev.o[12,2] 5.474897 1.014466   150 #> dev.o[13,2] 4.972536 1.005374   590 #> dev.o[14,2] 3.536121 1.001327  2400 #> dev.o[15,2] 4.713583 1.002404  2900 #> dev.o[16,2] 6.543741 1.001269  2600 #> dev.o[17,2] 6.955373 1.001997  1600 #> dev.o[18,2] 5.797443 1.004650   600 #> dev.o[19,2] 2.223274 1.003165  1500 #> dev.o[20,2] 3.571539 1.000617  3000 #> dev.o[21,2] 5.548117 1.001269  2600 #> dev.o[9,3]  3.868955 1.002140  1200 #> dev.o[10,3] 4.266842 1.003371   700 #> dev.o[12,3] 5.768131 1.001858  1500 #> dev.o[13,3] 4.483262 1.000600  3000 #> dev.o[19,3] 4.790194 1.025513   180 #> dev.o[10,4] 4.923047 1.002166  1900 #> dev.o[12,4] 4.429061 1.001825  1800 #> dev.o[13,4] 6.025099 1.001281  3000 #>  #> $hat_par #>                     mean         sd        2.5%        25%        50% #> hat.par[1,1]    1.690303  0.8323659   0.3696520   1.065386   1.600958 #> hat.par[2,1]   50.826776  4.9221151  40.9147378  47.615748  50.732116 #> hat.par[3,1]   44.871106  4.6027333  35.7962086  41.701175  44.909925 #> hat.par[4,1]   42.948506  5.0449151  33.0038599  39.576670  42.808127 #> hat.par[5,1]   17.530762  2.4193472  12.9433696  15.862659  17.474332 #> hat.par[6,1]   44.683730  4.1807507  36.7258352  41.793179  44.654869 #> hat.par[7,1]  157.551342  7.5207628 142.5936728 152.242829 157.666789 #> hat.par[8,1]   69.164960  5.7221026  58.0927066  65.195215  69.183404 #> hat.par[9,1]   89.946142  4.8626020  80.6937557  86.723101  89.724565 #> hat.par[10,1]  78.223352  3.6680924  70.9698122  75.848828  78.276072 #> hat.par[11,1]  74.345191  5.8055014  63.4399083  70.367265  74.296761 #> hat.par[12,1]  76.664811  4.2156847  68.0641995  73.844471  76.819266 #> hat.par[13,1]  49.291308  4.4936557  40.9009734  46.280234  49.200559 #> hat.par[14,1]  34.706273  4.7282042  26.0025485  31.489634  34.460213 #> hat.par[15,1]  35.357939  4.6850389  26.4804845  32.142544  35.244295 #> hat.par[16,1] 305.810205 13.3202527 279.8409511 296.971265 305.739204 #> hat.par[17,1]  11.031849  2.6047609   6.5017361   9.154512  10.824942 #> hat.par[18,1]  21.771389  3.4965683  15.4051758  19.305548  21.612291 #> hat.par[19,1]   3.838560  1.3018263   1.6880932   2.925415   3.684373 #> hat.par[20,1]  23.775560  3.6618337  16.9797712  21.256868  23.608852 #> hat.par[21,1]  31.208411  4.4160501  23.1398892  28.159877  31.042543 #> hat.par[1,2]    1.286045  0.7273502   0.2541006   0.758198   1.154033 #> hat.par[2,2]   45.154415  5.0026381  35.6658803  41.645946  45.035324 #> hat.par[3,2]   30.101110  4.1119503  22.7221983  27.259551  29.952703 #> hat.par[4,2]   42.916965  5.4678492  32.8419341  38.998702  42.724190 #> hat.par[5,2]   11.549412  2.0779678   7.6448154  10.155319  11.483079 #> hat.par[6,2]   34.480810  3.9983290  27.1943155  31.724338  34.350206 #> hat.par[7,2]  196.805096  9.9747908 176.8679423 189.969176 196.634558 #> hat.par[8,2]   50.886133  5.0514625  41.3553425  47.494346  50.679122 #> hat.par[9,2]   81.318486  5.5183103  70.6980722  77.480844  81.300120 #> hat.par[10,2]  72.619049  3.8217087  65.0026221  70.071593  72.580188 #> hat.par[11,2] 117.679951  8.5295574 100.6929753 111.759802 117.859684 #> hat.par[12,2]  82.422290  5.0776979  72.4610909  78.909507  82.497614 #> hat.par[13,2]  25.993977  4.6336162  17.7354998  22.663886  25.800989 #> hat.par[14,2]  31.475710  4.3746812  23.0514398  28.483629  31.297215 #> hat.par[15,2]  33.688559  4.7846572  25.2167241  30.439651  33.365464 #> hat.par[16,2] 245.898662 12.8983032 221.8335616 236.702436 245.438273 #> hat.par[17,2]   6.913026  1.9322258   3.7035599   5.560810   6.730319 #> hat.par[18,2]  13.357358  2.7384944   8.4981384  11.414008  13.147194 #> hat.par[19,2]   2.545495  0.9822034   1.0485772   1.822950   2.403081 #> hat.par[20,2]  20.301954  3.4708343  14.0944530  17.844991  20.084486 #> hat.par[21,2]  22.523957  3.7202880  15.6671516  20.009206  22.383435 #> hat.par[9,3]   79.837381  5.4903948  68.9534898  76.111714  79.929557 #> hat.par[10,3]  69.310760  4.5089352  60.3492131  66.333763  69.280062 #> hat.par[12,3]  66.867678  4.8166766  57.5943230  63.635378  66.882793 #> hat.par[13,3]  34.919735  5.0156058  25.7772112  31.432375  34.672727 #> hat.par[19,3]   2.682571  0.9522022   1.1211324   2.003190   2.571926 #> hat.par[10,4]  66.780190  4.1987285  58.2042407  63.941865  66.868581 #> hat.par[12,4]  62.151899  4.3385055  53.5640716  59.301924  62.085529 #> hat.par[13,4]  41.744992  4.9201928  32.2638467  38.391892  41.659059 #>                      75%      97.5%     Rhat n.eff #> hat.par[1,1]    2.189912   3.551012 1.003883  3000 #> hat.par[2,1]   54.216982  60.453454 1.006505   340 #> hat.par[3,1]   48.054815  53.370932 1.003258   730 #> hat.par[4,1]   46.254992  53.117714 1.001479  2900 #> hat.par[5,1]   19.132241  22.472507 1.001048  3000 #> hat.par[6,1]   47.579112  53.122807 1.000533  3000 #> hat.par[7,1]  162.764372 172.037140 1.002219  1200 #> hat.par[8,1]   72.974654  80.363355 1.009406   230 #> hat.par[9,1]   93.114502  99.890040 1.025125    93 #> hat.par[10,1]  80.744471  85.160311 1.005563   400 #> hat.par[11,1]  78.212389  86.421609 1.056241    41 #> hat.par[12,1]  79.492487  84.341408 1.016507   150 #> hat.par[13,1]  52.305940  58.426921 1.001554  3000 #> hat.par[14,1]  37.773988  44.447206 1.020551   110 #> hat.par[15,1]  38.356915  44.881976 1.000996  3000 #> hat.par[16,1] 314.398139 332.588654 1.004181   550 #> hat.par[17,1]  12.635956  16.758359 1.004127   550 #> hat.par[18,1]  24.153820  28.772140 1.004272   530 #> hat.par[19,1]   4.603229   6.768982 1.005061   560 #> hat.par[20,1]  26.148536  31.244046 1.007816   280 #> hat.par[21,1]  34.094130  40.061330 1.001684  1700 #> hat.par[1,2]    1.681616   3.028526 1.004605   800 #> hat.par[2,2]   48.580108  54.931404 1.003905  1400 #> hat.par[3,2]   32.726874  38.868237 1.007708   610 #> hat.par[4,2]   46.574798  53.885975 1.004285   530 #> hat.par[5,2]   12.885814  15.848227 1.000897  3000 #> hat.par[6,2]   37.161035  42.421118 1.001024  3000 #> hat.par[7,2]  203.456400 216.174359 1.001072  3000 #> hat.par[8,2]   54.289545  61.094645 1.005677   430 #> hat.par[9,2]   84.954411  92.468935 1.010427   220 #> hat.par[10,2]  75.244431  80.037585 1.003826   600 #> hat.par[11,2] 123.380300 134.302925 1.018770   140 #> hat.par[12,2]  85.959173  91.857005 1.043320    52 #> hat.par[13,2]  29.056970  35.637368 1.002743   990 #> hat.par[14,2]  34.349024  40.134662 1.002486  1000 #> hat.par[15,2]  36.754566  43.480246 1.002916   830 #> hat.par[16,2] 254.690457 272.694601 1.001341  3000 #> hat.par[17,2]   8.040989  11.154666 1.001612  1800 #> hat.par[18,2]  15.074163  19.253331 1.003318  2000 #> hat.par[19,2]   3.112678   4.772042 1.001231  2700 #> hat.par[20,2]  22.533080  27.689327 1.014374   150 #> hat.par[21,2]  25.052146  30.144447 1.000992  3000 #> hat.par[9,3]   83.506884  90.496155 1.001897  1400 #> hat.par[10,3]  72.504074  77.939561 1.007687   290 #> hat.par[12,3]  70.113218  76.269974 1.002531   990 #> hat.par[13,3]  38.279047  45.239455 1.003334   710 #> hat.par[19,3]   3.269174   4.836008 1.012485   190 #> hat.par[10,4]  69.726574  74.562176 1.001177  2900 #> hat.par[12,4]  65.078117  70.581109 1.004295   530 #> hat.par[13,4]  45.083799  51.620086 1.003406   690 #>  #> $leverage_o #>  [1] 0.9648171 0.8837958 0.7788813 0.7717627 0.5882056 0.6675586 0.7770500 #>  [8] 0.7724418 0.5832621 0.5671497 0.8489887 0.6109236 0.7365043 0.7608781 #> [15] 0.7596101 0.9259261 0.9039631 0.8786161 0.7346920 0.7324047 0.8559325 #> [22] 0.2242582 0.8827500 0.7063908 0.8644971 0.5226531 0.7168192 0.8552062 #> [29] 0.7108430 0.6516733 0.6736151 0.9591715 0.8398565 1.0278931 0.6606368 #> [36] 0.8576571 0.9778426 0.3778232 0.6444362 0.3147151 0.7103334 0.6154409 #> [43] 0.6265505 0.7746774 0.7457086 0.9484243 0.1469834 0.6467197 0.6310582 #> [50] 0.7996304 #>  #> $sign_dev_o #>  [1]  1  1  1 -1  1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1  1  1  1  1 -1 -1 -1  1 #> [26] -1  1  1  1  1  1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1 -1 -1  1  1 -1 -1  1 -1 #>  #> $phi #>               mean        sd      2.5%        25%         50%        75% #> phi[1] -0.10951369 0.6077232 -1.420972 -0.4970852 -0.02833638  0.3304557 #> phi[2] -0.03658710 0.9620960 -1.808559 -0.6958426 -0.04291775  0.5703612 #> phi[3] -0.05824812 0.9315733 -1.869308 -0.6949924 -0.04663923  0.6080582 #> phi[4] -0.73849411 0.8864863 -2.395972 -1.3719643 -0.74733224 -0.1625672 #> phi[5] -0.25742549 1.1059143 -2.295475 -1.0552795 -0.33196910  0.4872811 #> phi[6]  0.92761217 0.9146524 -0.949885  0.3182572  1.01581160  1.5833099 #> phi[7] -0.21950355 0.6949310 -1.508279 -0.6856608 -0.23780977  0.2289474 #> phi[8] -0.21374021 0.9079350 -2.042547 -0.8142143 -0.22821673  0.3946540 #>            97.5%     Rhat n.eff #> phi[1] 0.9085839 1.043773    63 #> phi[2] 1.8862082 1.009220   680 #> phi[3] 1.7555717 1.002922  2600 #> phi[4] 1.0616446 1.026389    83 #> phi[5] 2.0182381 1.013778   180 #> phi[6] 2.4987154 1.090221    31 #> phi[7] 1.2032419 1.050801    53 #> phi[8] 1.6082009 1.021512   100 #>  #> $model_assessment #>        DIC       pD      dev #> 1 91.14028 36.21763 54.92265 #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $covariate #>  [1] 1996 1998 1999 2000 2000 2001 2002 2002 2002 2002 2002 2003 2003 2005 2005 #> [16] 2005 2005 2006 2006 2007 2007 #>  #> $covar_assumption #> [1] \"exchangeable\" #>  #> $jagsfit #> Inference for Bugs model at \"4\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>                    mu.vect sd.vect    2.5%     25%     50%     75%   97.5% #> EM[2,1]             -1.078   0.491  -1.874  -1.468  -1.111  -0.737  -0.070 #> EM[3,1]             -0.829   0.436  -1.549  -1.166  -0.869  -0.509  -0.002 #> EM[4,1]             -0.137   0.332  -0.746  -0.364  -0.138   0.045   0.609 #> EM[5,1]             -0.403   0.401  -1.071  -0.724  -0.418  -0.095   0.449 #> EM[6,1]             -0.157   0.275  -0.755  -0.325  -0.138   0.011   0.362 #> EM[7,1]             -0.466   0.196  -0.809  -0.602  -0.471  -0.339  -0.085 #> EM[8,1]             -0.535   0.155  -0.812  -0.651  -0.545  -0.425  -0.236 #> EM[3,2]              0.249   0.487  -0.765  -0.066   0.286   0.578   1.130 #> EM[4,2]              0.941   0.523  -0.057   0.604   0.915   1.337   1.887 #> EM[5,2]              0.674   0.489  -0.316   0.355   0.679   0.991   1.668 #> EM[6,2]              0.920   0.530  -0.194   0.538   0.937   1.325   1.820 #> EM[7,2]              0.612   0.449  -0.326   0.307   0.635   0.956   1.390 #> EM[8,2]              0.542   0.457  -0.420   0.236   0.564   0.886   1.318 #> EM[4,3]              0.692   0.512  -0.255   0.310   0.715   1.088   1.623 #> EM[5,3]              0.425   0.439  -0.485   0.158   0.435   0.693   1.327 #> EM[6,3]              0.672   0.481  -0.354   0.340   0.691   1.018   1.507 #> EM[7,3]              0.363   0.392  -0.478   0.112   0.400   0.627   1.050 #> EM[8,3]              0.293   0.388  -0.508   0.041   0.324   0.572   0.961 #> EM[5,4]             -0.266   0.462  -1.069  -0.629  -0.253   0.036   0.663 #> EM[6,4]             -0.020   0.387  -0.917  -0.246   0.036   0.259   0.594 #> EM[7,4]             -0.329   0.335  -1.033  -0.565  -0.339  -0.070   0.269 #> EM[8,4]             -0.398   0.332  -1.087  -0.601  -0.410  -0.176   0.227 #> EM[6,5]              0.246   0.462  -0.731  -0.090   0.269   0.597   1.034 #> EM[7,5]             -0.063   0.342  -0.708  -0.332  -0.035   0.203   0.541 #> EM[8,5]             -0.132   0.354  -0.818  -0.391  -0.117   0.140   0.506 #> EM[7,6]             -0.309   0.287  -0.816  -0.504  -0.330  -0.127   0.344 #> EM[8,6]             -0.378   0.274  -0.836  -0.581  -0.401  -0.206   0.242 #> EM[8,7]             -0.069   0.173  -0.457  -0.170  -0.066   0.048   0.252 #> EM.pred[2,1]        -1.077   0.509  -1.915  -1.475  -1.106  -0.734  -0.019 #> EM.pred[3,1]        -0.828   0.460  -1.583  -1.185  -0.870  -0.502   0.093 #> EM.pred[4,1]        -0.137   0.364  -0.813  -0.380  -0.133   0.065   0.663 #> EM.pred[5,1]        -0.407   0.423  -1.133  -0.743  -0.412  -0.089   0.467 #> EM.pred[6,1]        -0.158   0.313  -0.848  -0.341  -0.144   0.032   0.437 #> EM.pred[7,1]        -0.465   0.240  -0.930  -0.626  -0.459  -0.314  -0.001 #> EM.pred[8,1]        -0.536   0.217  -0.958  -0.667  -0.534  -0.407  -0.104 #> EM.pred[3,2]         0.251   0.508  -0.804  -0.075   0.288   0.587   1.209 #> EM.pred[4,2]         0.939   0.548  -0.094   0.579   0.916   1.353   1.944 #> EM.pred[5,2]         0.673   0.509  -0.390   0.342   0.679   1.007   1.701 #> EM.pred[6,2]         0.917   0.550  -0.210   0.525   0.935   1.332   1.855 #> EM.pred[7,2]         0.617   0.478  -0.366   0.290   0.643   0.978   1.480 #> EM.pred[8,2]         0.543   0.481  -0.467   0.219   0.566   0.896   1.366 #> EM.pred[4,3]         0.690   0.536  -0.316   0.305   0.715   1.093   1.624 #> EM.pred[5,3]         0.423   0.460  -0.541   0.151   0.445   0.700   1.337 #> EM.pred[6,3]         0.670   0.502  -0.427   0.328   0.683   1.038   1.553 #> EM.pred[7,3]         0.360   0.414  -0.549   0.104   0.390   0.630   1.114 #> EM.pred[8,3]         0.299   0.412  -0.539   0.026   0.333   0.590   1.042 #> EM.pred[5,4]        -0.265   0.489  -1.149  -0.647  -0.254   0.054   0.677 #> EM.pred[6,4]        -0.015   0.409  -0.922  -0.266   0.034   0.267   0.684 #> EM.pred[7,4]        -0.334   0.371  -1.090  -0.585  -0.351  -0.058   0.325 #> EM.pred[8,4]        -0.404   0.366  -1.144  -0.626  -0.412  -0.152   0.269 #> EM.pred[6,5]         0.248   0.481  -0.742  -0.105   0.261   0.617   1.080 #> EM.pred[7,5]        -0.062   0.367  -0.760  -0.346  -0.046   0.211   0.618 #> EM.pred[8,5]        -0.132   0.385  -0.868  -0.413  -0.121   0.160   0.567 #> EM.pred[7,6]        -0.310   0.323  -0.908  -0.534  -0.324  -0.102   0.386 #> EM.pred[8,6]        -0.380   0.309  -0.930  -0.596  -0.401  -0.181   0.299 #> EM.pred[8,7]        -0.075   0.226  -0.560  -0.198  -0.070   0.066   0.360 #> SUCRA[1]             0.110   0.121   0.000   0.000   0.143   0.143   0.429 #> SUCRA[2]             0.902   0.192   0.286   0.857   1.000   1.000   1.000 #> SUCRA[3]             0.794   0.221   0.143   0.714   0.857   1.000   1.000 #> SUCRA[4]             0.284   0.240   0.000   0.143   0.286   0.429   0.857 #> SUCRA[5]             0.477   0.280   0.000   0.286   0.571   0.714   0.857 #> SUCRA[6]             0.264   0.212   0.000   0.143   0.286   0.429   0.857 #> SUCRA[7]             0.543   0.165   0.286   0.429   0.571   0.571   0.857 #> SUCRA[8]             0.626   0.164   0.286   0.571   0.571   0.714   0.857 #> abs_risk[1]          0.390   0.000   0.390   0.390   0.390   0.390   0.390 #> abs_risk[2]          0.190   0.077   0.089   0.128   0.174   0.234   0.373 #> abs_risk[3]          0.227   0.078   0.120   0.166   0.212   0.278   0.390 #> abs_risk[4]          0.361   0.076   0.233   0.308   0.358   0.401   0.540 #> abs_risk[5]          0.306   0.084   0.180   0.237   0.296   0.368   0.500 #> abs_risk[6]          0.356   0.061   0.231   0.316   0.358   0.393   0.479 #> abs_risk[7]          0.288   0.040   0.222   0.259   0.285   0.313   0.370 #> abs_risk[8]          0.273   0.031   0.221   0.250   0.270   0.295   0.335 #> beta[1]              0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> beta[2]              0.039   0.128  -0.227  -0.004   0.036   0.088   0.312 #> beta[3]              0.037   0.127  -0.247  -0.006   0.035   0.088   0.292 #> beta[4]              0.061   0.060  -0.039   0.019   0.055   0.096   0.199 #> beta[5]             -0.002   0.084  -0.199  -0.043   0.012   0.051   0.142 #> beta[6]              0.088   0.082  -0.034   0.028   0.071   0.134   0.276 #> beta[7]              0.041   0.041  -0.041   0.015   0.040   0.068   0.124 #> beta[8]              0.014   0.043  -0.081  -0.012   0.017   0.043   0.094 #> beta.all[2,1]        0.039   0.128  -0.227  -0.004   0.036   0.088   0.312 #> beta.all[3,1]        0.037   0.127  -0.247  -0.006   0.035   0.088   0.292 #> beta.all[4,1]        0.061   0.060  -0.039   0.019   0.055   0.096   0.199 #> beta.all[5,1]       -0.002   0.084  -0.199  -0.043   0.012   0.051   0.142 #> beta.all[6,1]        0.088   0.082  -0.034   0.028   0.071   0.134   0.276 #> beta.all[7,1]        0.041   0.041  -0.041   0.015   0.040   0.068   0.124 #> beta.all[8,1]        0.014   0.043  -0.081  -0.012   0.017   0.043   0.094 #> beta.all[3,2]       -0.002   0.155  -0.357  -0.046  -0.001   0.045   0.323 #> beta.all[4,2]        0.023   0.135  -0.234  -0.026   0.006   0.061   0.329 #> beta.all[5,2]       -0.041   0.138  -0.369  -0.090  -0.016   0.014   0.220 #> beta.all[6,2]        0.049   0.145  -0.185  -0.015   0.017   0.091   0.408 #> beta.all[7,2]        0.002   0.127  -0.258  -0.041   0.000   0.040   0.278 #> beta.all[8,2]       -0.025   0.129  -0.329  -0.067  -0.012   0.019   0.233 #> beta.all[4,3]        0.024   0.132  -0.224  -0.027   0.007   0.065   0.346 #> beta.all[5,3]       -0.039   0.139  -0.371  -0.089  -0.014   0.015   0.223 #> beta.all[6,3]        0.051   0.141  -0.169  -0.015   0.017   0.091   0.414 #> beta.all[7,3]        0.004   0.125  -0.248  -0.039   0.001   0.043   0.285 #> beta.all[8,3]       -0.023   0.126  -0.298  -0.065  -0.010   0.020   0.236 #> beta.all[5,4]       -0.063   0.107  -0.348  -0.113  -0.030   0.002   0.089 #> beta.all[6,4]        0.026   0.087  -0.124  -0.018   0.011   0.063   0.231 #> beta.all[7,4]       -0.020   0.063  -0.167  -0.053  -0.009   0.015   0.095 #> beta.all[8,4]       -0.047   0.074  -0.224  -0.088  -0.031   0.002   0.066 #> beta.all[6,5]        0.090   0.120  -0.061   0.003   0.050   0.156   0.401 #> beta.all[7,5]        0.043   0.090  -0.100  -0.006   0.022   0.085   0.261 #> beta.all[8,5]        0.016   0.080  -0.139  -0.024   0.005   0.051   0.204 #> beta.all[7,6]       -0.047   0.082  -0.239  -0.090  -0.025   0.006   0.076 #> beta.all[8,6]       -0.074   0.091  -0.294  -0.128  -0.047  -0.005   0.049 #> beta.all[8,7]       -0.027   0.049  -0.143  -0.056  -0.019   0.004   0.056 #> delta[1,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[2,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[3,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[4,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[5,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[6,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[7,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[8,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[9,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[10,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[11,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[12,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[13,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[14,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[15,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[16,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[17,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[18,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[19,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[20,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[21,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[1,2]          -0.164   0.360  -0.851  -0.427  -0.150   0.043   0.626 #> delta[2,2]          -0.133   0.337  -0.758  -0.353  -0.137   0.049   0.619 #> delta[3,2]          -0.494   0.222  -0.900  -0.654  -0.491  -0.346  -0.080 #> delta[4,2]          -0.506   0.166  -0.809  -0.627  -0.511  -0.398  -0.165 #> delta[5,2]          -0.477   0.224  -0.915  -0.628  -0.469  -0.337  -0.053 #> delta[6,2]          -0.413   0.225  -0.804  -0.561  -0.419  -0.265   0.059 #> delta[7,2]          -0.508   0.165  -0.790  -0.633  -0.516  -0.402  -0.167 #> delta[8,2]          -0.455   0.206  -0.815  -0.599  -0.459  -0.320  -0.056 #> delta[9,2]          -0.482   0.208  -0.879  -0.626  -0.477  -0.345  -0.092 #> delta[10,2]         -0.094   0.364  -0.743  -0.333  -0.111   0.110   0.745 #> delta[11,2]         -0.170   0.268  -0.759  -0.334  -0.153  -0.006   0.342 #> delta[12,2]         -0.140   0.328  -0.751  -0.359  -0.135   0.043   0.570 #> delta[13,2]         -1.106   0.479  -1.861  -1.489  -1.138  -0.763  -0.131 #> delta[14,2]         -0.093   0.191  -0.501  -0.204  -0.085   0.038   0.260 #> delta[15,2]         -0.137   0.280  -0.742  -0.312  -0.126   0.022   0.394 #> delta[16,2]         -0.425   0.169  -0.706  -0.553  -0.435  -0.315  -0.068 #> delta[17,2]         -0.427   0.302  -0.983  -0.631  -0.441  -0.241   0.240 #> delta[18,2]         -0.450   0.416  -1.148  -0.779  -0.471  -0.134   0.440 #> delta[19,2]         -0.429   0.424  -1.156  -0.765  -0.447  -0.111   0.473 #> delta[20,2]         -0.463   0.230  -0.877  -0.624  -0.464  -0.320   0.003 #> delta[21,2]         -0.582   0.201  -1.005  -0.709  -0.585  -0.441  -0.210 #> delta[9,3]          -0.574   0.177  -0.942  -0.689  -0.579  -0.447  -0.250 #> delta[10,3]         -0.418   0.412  -1.113  -0.748  -0.432  -0.099   0.436 #> delta[12,3]         -0.341   0.409  -1.022  -0.672  -0.341  -0.046   0.495 #> delta[13,3]         -0.855   0.416  -1.524  -1.184  -0.904  -0.530  -0.092 #> delta[19,3]         -0.505   0.239  -0.967  -0.669  -0.492  -0.354  -0.069 #> delta[10,4]         -0.498   0.244  -0.990  -0.665  -0.492  -0.338  -0.050 #> delta[12,4]         -0.415   0.239  -0.828  -0.575  -0.423  -0.270   0.105 #> delta[13,4]         -0.218   0.303  -0.899  -0.383  -0.197  -0.034   0.356 #> dev.o[1,1]           2.141   2.355   0.007   0.448   1.381   3.056   8.520 #> dev.o[2,1]           0.885   1.248   0.001   0.088   0.391   1.160   4.771 #> dev.o[3,1]           0.939   1.354   0.001   0.093   0.415   1.239   4.787 #> dev.o[4,1]           0.891   1.238   0.001   0.086   0.417   1.135   4.421 #> dev.o[5,1]           0.610   0.828   0.001   0.060   0.273   0.832   2.997 #> dev.o[6,1]           1.197   1.521   0.001   0.149   0.613   1.718   5.593 #> dev.o[7,1]           0.810   1.134   0.001   0.090   0.374   1.076   4.009 #> dev.o[8,1]           0.804   1.069   0.001   0.094   0.381   1.087   3.944 #> dev.o[9,1]           0.687   0.933   0.000   0.077   0.326   0.921   3.377 #> dev.o[10,1]          0.593   0.872   0.001   0.060   0.265   0.760   3.090 #> dev.o[11,1]          0.860   1.230   0.001   0.087   0.400   1.117   4.346 #> dev.o[12,1]          1.055   1.315   0.001   0.142   0.578   1.459   4.439 #> dev.o[13,1]          1.222   1.555   0.001   0.151   0.633   1.681   5.363 #> dev.o[14,1]          0.815   1.155   0.001   0.084   0.365   1.104   4.119 #> dev.o[15,1]          0.825   1.145   0.001   0.084   0.382   1.124   4.113 #> dev.o[16,1]          1.436   1.934   0.002   0.164   0.714   1.902   6.961 #> dev.o[17,1]          1.797   2.067   0.003   0.311   1.076   2.621   7.433 #> dev.o[18,1]          1.206   1.566   0.001   0.136   0.616   1.658   5.553 #> dev.o[19,1]          1.858   1.869   0.005   0.440   1.322   2.642   6.927 #> dev.o[20,1]          0.735   1.066   0.001   0.070   0.326   0.953   3.768 #> dev.o[21,1]          1.410   1.845   0.002   0.171   0.703   1.977   6.288 #> dev.o[1,2]           2.908   1.872   0.516   1.593   2.493   3.776   7.612 #> dev.o[2,2]           0.884   1.241   0.001   0.082   0.424   1.180   4.305 #> dev.o[3,2]           0.902   1.312   0.001   0.085   0.421   1.157   4.851 #> dev.o[4,2]           0.983   1.326   0.001   0.103   0.465   1.358   4.997 #> dev.o[5,2]           0.560   0.796   0.001   0.053   0.245   0.746   2.887 #> dev.o[6,2]           1.231   1.509   0.001   0.159   0.670   1.736   5.292 #> dev.o[7,2]           0.867   1.255   0.001   0.085   0.411   1.146   4.423 #> dev.o[8,2]           0.745   1.023   0.001   0.081   0.337   1.019   3.568 #> dev.o[9,2]           0.662   0.988   0.001   0.062   0.299   0.849   3.350 #> dev.o[10,2]          1.674   1.882   0.003   0.293   1.061   2.419   6.774 #> dev.o[11,2]          0.965   1.346   0.001   0.103   0.446   1.265   4.927 #> dev.o[12,2]          1.206   1.581   0.001   0.131   0.571   1.690   5.475 #> dev.o[13,2]          1.028   1.418   0.001   0.107   0.491   1.413   4.973 #> dev.o[14,2]          0.739   1.011   0.001   0.075   0.330   0.983   3.536 #> dev.o[15,2]          0.919   1.309   0.001   0.101   0.433   1.248   4.714 #> dev.o[16,2]          1.451   1.863   0.001   0.157   0.714   2.067   6.544 #> dev.o[17,2]          1.962   1.947   0.007   0.538   1.416   2.758   6.955 #> dev.o[18,2]          1.207   1.604   0.001   0.130   0.599   1.653   5.797 #> dev.o[19,2]          0.446   0.649   0.000   0.043   0.194   0.588   2.223 #> dev.o[20,2]          0.716   1.010   0.001   0.073   0.322   0.952   3.572 #> dev.o[21,2]          1.275   1.558   0.003   0.179   0.696   1.858   5.548 #> dev.o[9,3]           0.796   1.065   0.001   0.083   0.385   1.079   3.869 #> dev.o[10,3]          0.839   1.172   0.001   0.082   0.396   1.086   4.267 #> dev.o[12,3]          1.297   1.631   0.001   0.159   0.674   1.833   5.768 #> dev.o[13,3]          0.949   1.300   0.001   0.099   0.438   1.272   4.483 #> dev.o[19,3]          1.589   1.275   0.028   0.635   1.299   2.262   4.790 #> dev.o[10,4]          1.154   1.391   0.002   0.139   0.638   1.671   4.923 #> dev.o[12,4]          0.902   1.253   0.001   0.100   0.420   1.184   4.429 #> dev.o[13,4]          1.291   1.714   0.002   0.140   0.657   1.792   6.025 #> effectiveness[1,1]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,1]   0.672   0.470   0.000   0.000   1.000   1.000   1.000 #> effectiveness[3,1]   0.264   0.441   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,1]   0.002   0.041   0.000   0.000   0.000   0.000   0.000 #> effectiveness[5,1]   0.018   0.133   0.000   0.000   0.000   0.000   0.000 #> effectiveness[6,1]   0.008   0.091   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,1]   0.012   0.110   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,1]   0.024   0.153   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,2]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,2]   0.189   0.391   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,2]   0.441   0.497   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,2]   0.041   0.198   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,2]   0.107   0.309   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,2]   0.018   0.134   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,2]   0.067   0.251   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,2]   0.138   0.345   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,3]   0.000   0.018   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,3]   0.043   0.202   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,3]   0.115   0.319   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,3]   0.070   0.255   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,3]   0.244   0.430   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,3]   0.044   0.206   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,3]   0.167   0.373   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,3]   0.316   0.465   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,4]   0.006   0.075   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,4]   0.038   0.192   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,4]   0.064   0.244   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,4]   0.069   0.253   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,4]   0.132   0.339   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,4]   0.058   0.234   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,4]   0.345   0.476   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,4]   0.288   0.453   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,5]   0.024   0.153   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,5]   0.027   0.163   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,5]   0.054   0.227   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,5]   0.120   0.325   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,5]   0.168   0.374   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,5]   0.123   0.328   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,5]   0.291   0.454   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,5]   0.192   0.394   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,6]   0.158   0.365   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,6]   0.009   0.096   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,6]   0.028   0.166   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,6]   0.283   0.450   0.000   0.000   0.000   1.000   1.000 #> effectiveness[5,6]   0.110   0.313   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,6]   0.271   0.445   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,6]   0.103   0.304   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,6]   0.037   0.190   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,7]   0.354   0.478   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,7]   0.012   0.110   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,7]   0.019   0.137   0.000   0.000   0.000   0.000   0.000 #> effectiveness[4,7]   0.183   0.387   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,7]   0.101   0.301   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,7]   0.313   0.464   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,7]   0.013   0.113   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,7]   0.005   0.068   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,8]   0.458   0.498   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,8]   0.009   0.096   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,8]   0.015   0.122   0.000   0.000   0.000   0.000   0.000 #> effectiveness[4,8]   0.234   0.423   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,8]   0.121   0.326   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,8]   0.164   0.370   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> hat.par[1,1]         1.690   0.832   0.370   1.065   1.601   2.190   3.551 #> hat.par[2,1]        50.827   4.922  40.915  47.616  50.732  54.217  60.453 #> hat.par[3,1]        44.871   4.603  35.796  41.701  44.910  48.055  53.371 #> hat.par[4,1]        42.949   5.045  33.004  39.577  42.808  46.255  53.118 #> hat.par[5,1]        17.531   2.419  12.943  15.863  17.474  19.132  22.473 #> hat.par[6,1]        44.684   4.181  36.726  41.793  44.655  47.579  53.123 #> hat.par[7,1]       157.551   7.521 142.594 152.243 157.667 162.764 172.037 #> hat.par[8,1]        69.165   5.722  58.093  65.195  69.183  72.975  80.363 #> hat.par[9,1]        89.946   4.863  80.694  86.723  89.725  93.115  99.890 #> hat.par[10,1]       78.223   3.668  70.970  75.849  78.276  80.744  85.160 #> hat.par[11,1]       74.345   5.806  63.440  70.367  74.297  78.212  86.422 #> hat.par[12,1]       76.665   4.216  68.064  73.844  76.819  79.492  84.341 #> hat.par[13,1]       49.291   4.494  40.901  46.280  49.201  52.306  58.427 #> hat.par[14,1]       34.706   4.728  26.003  31.490  34.460  37.774  44.447 #> hat.par[15,1]       35.358   4.685  26.480  32.143  35.244  38.357  44.882 #> hat.par[16,1]      305.810  13.320 279.841 296.971 305.739 314.398 332.589 #> hat.par[17,1]       11.032   2.605   6.502   9.155  10.825  12.636  16.758 #> hat.par[18,1]       21.771   3.497  15.405  19.306  21.612  24.154  28.772 #> hat.par[19,1]        3.839   1.302   1.688   2.925   3.684   4.603   6.769 #> hat.par[20,1]       23.776   3.662  16.980  21.257  23.609  26.149  31.244 #> hat.par[21,1]       31.208   4.416  23.140  28.160  31.043  34.094  40.061 #> hat.par[1,2]         1.286   0.727   0.254   0.758   1.154   1.682   3.029 #> hat.par[2,2]        45.154   5.003  35.666  41.646  45.035  48.580  54.931 #> hat.par[3,2]        30.101   4.112  22.722  27.260  29.953  32.727  38.868 #> hat.par[4,2]        42.917   5.468  32.842  38.999  42.724  46.575  53.886 #> hat.par[5,2]        11.549   2.078   7.645  10.155  11.483  12.886  15.848 #> hat.par[6,2]        34.481   3.998  27.194  31.724  34.350  37.161  42.421 #> hat.par[7,2]       196.805   9.975 176.868 189.969 196.635 203.456 216.174 #> hat.par[8,2]        50.886   5.051  41.355  47.494  50.679  54.290  61.095 #> hat.par[9,2]        81.318   5.518  70.698  77.481  81.300  84.954  92.469 #> hat.par[10,2]       72.619   3.822  65.003  70.072  72.580  75.244  80.038 #> hat.par[11,2]      117.680   8.530 100.693 111.760 117.860 123.380 134.303 #> hat.par[12,2]       82.422   5.078  72.461  78.910  82.498  85.959  91.857 #> hat.par[13,2]       25.994   4.634  17.735  22.664  25.801  29.057  35.637 #> hat.par[14,2]       31.476   4.375  23.051  28.484  31.297  34.349  40.135 #> hat.par[15,2]       33.689   4.785  25.217  30.440  33.365  36.755  43.480 #> hat.par[16,2]      245.899  12.898 221.834 236.702 245.438 254.690 272.695 #> hat.par[17,2]        6.913   1.932   3.704   5.561   6.730   8.041  11.155 #> hat.par[18,2]       13.357   2.738   8.498  11.414  13.147  15.074  19.253 #> hat.par[19,2]        2.545   0.982   1.049   1.823   2.403   3.113   4.772 #> hat.par[20,2]       20.302   3.471  14.094  17.845  20.084  22.533  27.689 #> hat.par[21,2]       22.524   3.720  15.667  20.009  22.383  25.052  30.144 #> hat.par[9,3]        79.837   5.490  68.953  76.112  79.930  83.507  90.496 #> hat.par[10,3]       69.311   4.509  60.349  66.334  69.280  72.504  77.940 #> hat.par[12,3]       66.868   4.817  57.594  63.635  66.883  70.113  76.270 #> hat.par[13,3]       34.920   5.016  25.777  31.432  34.673  38.279  45.239 #> hat.par[19,3]        2.683   0.952   1.121   2.003   2.572   3.269   4.836 #> hat.par[10,4]       66.780   4.199  58.204  63.942  66.869  69.727  74.562 #> hat.par[12,4]       62.152   4.339  53.564  59.302  62.086  65.078  70.581 #> hat.par[13,4]       41.745   4.920  32.264  38.392  41.659  45.084  51.620 #> phi[1]              -0.110   0.608  -1.421  -0.497  -0.028   0.330   0.909 #> phi[2]              -0.037   0.962  -1.809  -0.696  -0.043   0.570   1.886 #> phi[3]              -0.058   0.932  -1.869  -0.695  -0.047   0.608   1.756 #> phi[4]              -0.738   0.886  -2.396  -1.372  -0.747  -0.163   1.062 #> phi[5]              -0.257   1.106  -2.295  -1.055  -0.332   0.487   2.018 #> phi[6]               0.928   0.915  -0.950   0.318   1.016   1.583   2.499 #> phi[7]              -0.220   0.695  -1.508  -0.686  -0.238   0.229   1.203 #> phi[8]              -0.214   0.908  -2.043  -0.814  -0.228   0.395   1.608 #> tau                  0.122   0.080   0.017   0.054   0.114   0.170   0.311 #> totresdev.o         54.923   8.988  38.638  48.499  54.433  60.828  73.422 #> deviance           582.210  13.545 556.038 572.894 581.911 591.362 609.437 #>                     Rhat n.eff #> EM[2,1]            1.040    95 #> EM[3,1]            1.011   210 #> EM[4,1]            1.151    20 #> EM[5,1]            1.052    52 #> EM[6,1]            1.050    51 #> EM[7,1]            1.101    31 #> EM[8,1]            1.021   120 #> EM[3,2]            1.010   540 #> EM[4,2]            1.006   360 #> EM[5,2]            1.018  2100 #> EM[6,2]            1.078    36 #> EM[7,2]            1.043   130 #> EM[8,2]            1.026   120 #> EM[4,3]            1.019   120 #> EM[5,3]            1.021   270 #> EM[6,3]            1.047    50 #> EM[7,3]            1.014   230 #> EM[8,3]            1.009   320 #> EM[5,4]            1.017   540 #> EM[6,4]            1.276    12 #> EM[7,4]            1.063    39 #> EM[8,4]            1.099    26 #> EM[6,5]            1.113    25 #> EM[7,5]            1.027    85 #> EM[8,5]            1.037    60 #> EM[7,6]            1.156    18 #> EM[8,6]            1.087    30 #> EM[8,7]            1.046    63 #> EM.pred[2,1]       1.032   120 #> EM.pred[3,1]       1.009   290 #> EM.pred[4,1]       1.120    24 #> EM.pred[5,1]       1.043    62 #> EM.pred[6,1]       1.033    73 #> EM.pred[7,1]       1.054    52 #> EM.pred[8,1]       1.015   170 #> EM.pred[3,2]       1.012   450 #> EM.pred[4,2]       1.007   320 #> EM.pred[5,2]       1.013  2400 #> EM.pred[6,2]       1.067    41 #> EM.pred[7,2]       1.033   150 #> EM.pred[8,2]       1.025   110 #> EM.pred[4,3]       1.018   120 #> EM.pred[5,3]       1.018   330 #> EM.pred[6,3]       1.041    56 #> EM.pred[7,3]       1.010   330 #> EM.pred[8,3]       1.007   440 #> EM.pred[5,4]       1.014   810 #> EM.pred[6,4]       1.237    14 #> EM.pred[7,4]       1.044    51 #> EM.pred[8,4]       1.079    31 #> EM.pred[6,5]       1.099    27 #> EM.pred[7,5]       1.026    88 #> EM.pred[8,5]       1.034    65 #> EM.pred[7,6]       1.129    21 #> EM.pred[8,6]       1.060    41 #> EM.pred[8,7]       1.022   110 #> SUCRA[1]           1.072    39 #> SUCRA[2]           1.042   100 #> SUCRA[3]           1.024   800 #> SUCRA[4]           1.109    25 #> SUCRA[5]           1.014   150 #> SUCRA[6]           1.199    17 #> SUCRA[7]           1.032    89 #> SUCRA[8]           1.034    89 #> abs_risk[1]        1.000     1 #> abs_risk[2]        1.034   110 #> abs_risk[3]        1.010   220 #> abs_risk[4]        1.133    21 #> abs_risk[5]        1.051    48 #> abs_risk[6]        1.055    51 #> abs_risk[7]        1.111    29 #> abs_risk[8]        1.022   120 #> beta[1]            1.000     1 #> beta[2]            1.038  3000 #> beta[3]            1.025  3000 #> beta[4]            1.170    18 #> beta[5]            1.065    67 #> beta[6]            1.098    27 #> beta[7]            1.023    99 #> beta[8]            1.009   600 #> beta.all[2,1]      1.038  3000 #> beta.all[3,1]      1.025  3000 #> beta.all[4,1]      1.170    18 #> beta.all[5,1]      1.065    67 #> beta.all[6,1]      1.098    27 #> beta.all[7,1]      1.023    99 #> beta.all[8,1]      1.009   600 #> beta.all[3,2]      1.056  3000 #> beta.all[4,2]      1.077    85 #> beta.all[5,2]      1.025   180 #> beta.all[6,2]      1.077    84 #> beta.all[7,2]      1.051   990 #> beta.all[8,2]      1.040  3000 #> beta.all[4,3]      1.055   110 #> beta.all[5,3]      1.034   130 #> beta.all[6,3]      1.048   100 #> beta.all[7,3]      1.031  2200 #> beta.all[8,3]      1.029  1300 #> beta.all[5,4]      1.199    19 #> beta.all[6,4]      1.025   400 #> beta.all[7,4]      1.099    30 #> beta.all[8,4]      1.153    21 #> beta.all[6,5]      1.143    22 #> beta.all[7,5]      1.081    42 #> beta.all[8,5]      1.051    86 #> beta.all[7,6]      1.059    46 #> beta.all[8,6]      1.099    28 #> beta.all[8,7]      1.034    83 #> delta[1,1]         1.000     1 #> delta[2,1]         1.000     1 #> delta[3,1]         1.000     1 #> delta[4,1]         1.000     1 #> delta[5,1]         1.000     1 #> delta[6,1]         1.000     1 #> delta[7,1]         1.000     1 #> delta[8,1]         1.000     1 #> delta[9,1]         1.000     1 #> delta[10,1]        1.000     1 #> delta[11,1]        1.000     1 #> delta[12,1]        1.000     1 #> delta[13,1]        1.000     1 #> delta[14,1]        1.000     1 #> delta[15,1]        1.000     1 #> delta[16,1]        1.000     1 #> delta[17,1]        1.000     1 #> delta[18,1]        1.000     1 #> delta[19,1]        1.000     1 #> delta[20,1]        1.000     1 #> delta[21,1]        1.000     1 #> delta[1,2]         1.127    23 #> delta[2,2]         1.155    19 #> delta[3,2]         1.092    34 #> delta[4,2]         1.014   200 #> delta[5,2]         1.076    40 #> delta[6,2]         1.053    54 #> delta[7,2]         1.010   220 #> delta[8,2]         1.062    45 #> delta[9,2]         1.092    32 #> delta[10,2]        1.111    26 #> delta[11,2]        1.046    55 #> delta[12,2]        1.143    21 #> delta[13,2]        1.046    85 #> delta[14,2]        1.024   120 #> delta[15,2]        1.064    40 #> delta[16,2]        1.013   450 #> delta[17,2]        1.076    34 #> delta[18,2]        1.053    49 #> delta[19,2]        1.045    58 #> delta[20,2]        1.067    45 #> delta[21,2]        1.017   160 #> delta[9,3]         1.029    91 #> delta[10,3]        1.048    54 #> delta[12,3]        1.051    57 #> delta[13,3]        1.012   180 #> delta[19,3]        1.080    43 #> delta[10,4]        1.088    33 #> delta[12,4]        1.059    42 #> delta[13,4]        1.033    81 #> dev.o[1,1]         1.004   910 #> dev.o[2,1]         1.003  3000 #> dev.o[3,1]         1.001  3000 #> dev.o[4,1]         1.001  2400 #> dev.o[5,1]         1.001  3000 #> dev.o[6,1]         1.001  3000 #> dev.o[7,1]         1.001  3000 #> dev.o[8,1]         1.003  1200 #> dev.o[9,1]         1.002  1200 #> dev.o[10,1]        1.001  3000 #> dev.o[11,1]        1.004  1100 #> dev.o[12,1]        1.007   330 #> dev.o[13,1]        1.001  3000 #> dev.o[14,1]        1.005   500 #> dev.o[15,1]        1.001  3000 #> dev.o[16,1]        1.014   300 #> dev.o[17,1]        1.007   620 #> dev.o[18,1]        1.004  1000 #> dev.o[19,1]        1.009   340 #> dev.o[20,1]        1.001  3000 #> dev.o[21,1]        1.002  3000 #> dev.o[1,2]         1.004   820 #> dev.o[2,2]         1.003   880 #> dev.o[3,2]         1.001  3000 #> dev.o[4,2]         1.004   680 #> dev.o[5,2]         1.001  3000 #> dev.o[6,2]         1.002  1100 #> dev.o[7,2]         1.002  1600 #> dev.o[8,2]         1.004   620 #> dev.o[9,2]         1.003   840 #> dev.o[10,2]        1.004   730 #> dev.o[11,2]        1.003   720 #> dev.o[12,2]        1.014   150 #> dev.o[13,2]        1.005   590 #> dev.o[14,2]        1.001  2400 #> dev.o[15,2]        1.002  2900 #> dev.o[16,2]        1.001  2600 #> dev.o[17,2]        1.002  1600 #> dev.o[18,2]        1.005   600 #> dev.o[19,2]        1.003  1500 #> dev.o[20,2]        1.001  3000 #> dev.o[21,2]        1.001  2600 #> dev.o[9,3]         1.002  1200 #> dev.o[10,3]        1.003   700 #> dev.o[12,3]        1.002  1500 #> dev.o[13,3]        1.001  3000 #> dev.o[19,3]        1.026   180 #> dev.o[10,4]        1.002  1900 #> dev.o[12,4]        1.002  1800 #> dev.o[13,4]        1.001  3000 #> effectiveness[1,1] 1.000     1 #> effectiveness[2,1] 1.028    84 #> effectiveness[3,1] 1.023   110 #> effectiveness[4,1] 1.116  2100 #> effectiveness[5,1] 1.001  3000 #> effectiveness[6,1] 1.282   140 #> effectiveness[7,1] 1.082   440 #> effectiveness[8,1] 1.060   320 #> effectiveness[1,2] 1.000     1 #> effectiveness[2,2] 1.014   220 #> effectiveness[3,2] 1.018   110 #> effectiveness[4,2] 1.208    50 #> effectiveness[5,2] 1.003  1700 #> effectiveness[6,2] 1.159   140 #> effectiveness[7,2] 1.027   280 #> effectiveness[8,2] 1.035   120 #> effectiveness[1,3] 1.291  3000 #> effectiveness[2,3] 1.006  1800 #> effectiveness[3,3] 1.028   170 #> effectiveness[4,3] 1.007  1000 #> effectiveness[5,3] 1.017   160 #> effectiveness[6,3] 1.190    52 #> effectiveness[7,3] 1.027   130 #> effectiveness[8,3] 1.009   240 #> effectiveness[1,4] 1.204   310 #> effectiveness[2,4] 1.025   520 #> effectiveness[3,4] 1.015   540 #> effectiveness[4,4] 1.014   520 #> effectiveness[5,4] 1.010   400 #> effectiveness[6,4] 1.055   160 #> effectiveness[7,4] 1.019   120 #> effectiveness[8,4] 1.009   260 #> effectiveness[1,5] 1.165   110 #> effectiveness[2,5] 1.055   310 #> effectiveness[3,5] 1.016   570 #> effectiveness[4,5] 1.048    95 #> effectiveness[5,5] 1.009   370 #> effectiveness[6,5] 1.032   150 #> effectiveness[7,5] 1.008   280 #> effectiveness[8,5] 1.052    62 #> effectiveness[1,6] 1.016   230 #> effectiveness[2,6] 1.012  3000 #> effectiveness[3,6] 1.037   470 #> effectiveness[4,6] 1.036    71 #> effectiveness[5,6] 1.013   370 #> effectiveness[6,6] 1.017   150 #> effectiveness[7,6] 1.022   230 #> effectiveness[8,6] 1.018   740 #> effectiveness[1,7] 1.009   240 #> effectiveness[2,7] 1.152   220 #> effectiveness[3,7] 1.073   330 #> effectiveness[4,7] 1.002  1900 #> effectiveness[5,7] 1.058    92 #> effectiveness[6,7] 1.048    52 #> effectiveness[7,7] 1.111   300 #> effectiveness[8,7] 1.184   430 #> effectiveness[1,8] 1.043    51 #> effectiveness[2,8] 1.089   530 #> effectiveness[3,8] 1.055   560 #> effectiveness[4,8] 1.204    17 #> effectiveness[5,8] 1.008   570 #> effectiveness[6,8] 1.047    77 #> effectiveness[7,8] 1.000     1 #> effectiveness[8,8] 1.000     1 #> hat.par[1,1]       1.004  3000 #> hat.par[2,1]       1.007   340 #> hat.par[3,1]       1.003   730 #> hat.par[4,1]       1.001  2900 #> hat.par[5,1]       1.001  3000 #> hat.par[6,1]       1.001  3000 #> hat.par[7,1]       1.002  1200 #> hat.par[8,1]       1.009   230 #> hat.par[9,1]       1.025    93 #> hat.par[10,1]      1.006   400 #> hat.par[11,1]      1.056    41 #> hat.par[12,1]      1.017   150 #> hat.par[13,1]      1.002  3000 #> hat.par[14,1]      1.021   110 #> hat.par[15,1]      1.001  3000 #> hat.par[16,1]      1.004   550 #> hat.par[17,1]      1.004   550 #> hat.par[18,1]      1.004   530 #> hat.par[19,1]      1.005   560 #> hat.par[20,1]      1.008   280 #> hat.par[21,1]      1.002  1700 #> hat.par[1,2]       1.005   800 #> hat.par[2,2]       1.004  1400 #> hat.par[3,2]       1.008   610 #> hat.par[4,2]       1.004   530 #> hat.par[5,2]       1.001  3000 #> hat.par[6,2]       1.001  3000 #> hat.par[7,2]       1.001  3000 #> hat.par[8,2]       1.006   430 #> hat.par[9,2]       1.010   220 #> hat.par[10,2]      1.004   600 #> hat.par[11,2]      1.019   140 #> hat.par[12,2]      1.043    52 #> hat.par[13,2]      1.003   990 #> hat.par[14,2]      1.002  1000 #> hat.par[15,2]      1.003   830 #> hat.par[16,2]      1.001  3000 #> hat.par[17,2]      1.002  1800 #> hat.par[18,2]      1.003  2000 #> hat.par[19,2]      1.001  2700 #> hat.par[20,2]      1.014   150 #> hat.par[21,2]      1.001  3000 #> hat.par[9,3]       1.002  1400 #> hat.par[10,3]      1.008   290 #> hat.par[12,3]      1.003   990 #> hat.par[13,3]      1.003   710 #> hat.par[19,3]      1.012   190 #> hat.par[10,4]      1.001  2900 #> hat.par[12,4]      1.004   530 #> hat.par[13,4]      1.003   690 #> phi[1]             1.044    63 #> phi[2]             1.009   680 #> phi[3]             1.003  2600 #> phi[4]             1.026    83 #> phi[5]             1.014   180 #> phi[6]             1.090    31 #> phi[7]             1.051    53 #> phi[8]             1.022   100 #> tau                1.016   360 #> totresdev.o        1.002  1800 #> deviance           1.001  3000 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 91.7 and DIC = 674.0 #> DIC is an estimate of expected predictive error (lower deviance is better). #>  #> $data #>                    study t1 t2 t3 t4  r1  r2 r3 r4  m1 m2 m3 m4  n1  n2  n3  n4 #> 1  Llewellyn-Jones, 1996  1  4 NA NA   3   0 NA NA   1  0 NA NA   8   8  NA  NA #> 2         Paggiaro, 1998  1  4 NA NA  51  45 NA NA  27 19 NA NA 139 142  NA  NA #> 3           Mahler, 1999  1  7 NA NA  47  28 NA NA  23  9 NA NA 143 135  NA  NA #> 4         Casaburi, 2000  1  8 NA NA  41  45 NA NA  18 12 NA NA 191 279  NA  NA #> 5        van Noord, 2000  1  7 NA NA  18  11 NA NA   8  7 NA NA  50  47  NA  NA #> 6          Rennard, 2001  1  7 NA NA  41  38 NA NA  29 22 NA NA 135 132  NA  NA #> 7         Casaburi, 2002  1  8 NA NA 156 198 NA NA  77 66 NA NA 371 550  NA  NA #> 8          Chapman, 2002  1  7 NA NA  68  52 NA NA  28 20 NA NA 207 201  NA  NA #> 9          Donohue, 2002  1  7  8 NA  92  82 77 NA  37 20 10 NA 201 213 209  NA #> 10          Mahler, 2002  1  4  7  5  79  77 63 68  69 68 45 52 181 168 160 165 #> 11           Rossi, 2002  1  6 NA NA  75 117 NA NA  59 92 NA NA 220 425  NA  NA #> 12         Hanania, 2003  1  4  7  5  73  79 65 71  59 49 57 53 185 183 177 178 #> 13      Szafranski, 2003  1  2  6  3  53  26 38 35  90 62 64 59 205 198 201 208 #> 14          Briggs, 2005  8  7 NA NA  30  36 NA NA  29 41 NA NA 328 325  NA  NA #> 15        Campbell, 2005  1  6 NA NA  34  35 NA NA  39 30 NA NA 217 215  NA  NA #> 16      Niewoehner, 2005  1  8 NA NA 296 255 NA NA 111 75 NA NA 915 914  NA  NA #> 17       van Noord, 2005  8  6 NA NA   4  14 NA NA   1  1 NA NA  70  69  NA  NA #> 18          Barnes, 2006  1  5 NA NA  24  11 NA NA   4  8 NA NA  73  67  NA  NA #> 19       O Donnell, 2006  1  7  5 NA   6   1  2 NA   5  1  3 NA  64  59  62  NA #> 20     Baumgartner, 2007  1  7 NA NA  24  20 NA NA  32 26 NA NA 143 144  NA  NA #> 21         Freeman, 2007  1  8 NA NA  35  19 NA NA  33 18 NA NA 195 200  NA  NA #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $abs_risk #>                  mean         sd       2.5%       25%       50%       75% #> abs_risk[1] 0.3900000 0.00000000 0.39000000 0.3900000 0.3900000 0.3900000 #> abs_risk[2] 0.1897380 0.07671875 0.08936488 0.1284158 0.1739258 0.2342007 #> abs_risk[3] 0.2268102 0.07786256 0.11964296 0.1661630 0.2115132 0.2776668 #> abs_risk[4] 0.3611946 0.07569847 0.23268967 0.3076667 0.3576261 0.4008449 #> abs_risk[5] 0.3056056 0.08431599 0.17970263 0.2365944 0.2963172 0.3677636 #> abs_risk[6] 0.3558100 0.06139428 0.23101758 0.3160106 0.3576397 0.3927026 #> abs_risk[7] 0.2879712 0.04007150 0.22153057 0.2594310 0.2853120 0.3129421 #> abs_risk[8] 0.2734143 0.03081111 0.22111199 0.2500607 0.2704743 0.2947205 #>                 97.5%     Rhat n.eff #> abs_risk[1] 0.3900000 1.000000     1 #> abs_risk[2] 0.3733697 1.033931   110 #> abs_risk[3] 0.3895620 1.010198   220 #> abs_risk[4] 0.5404569 1.133458    21 #> abs_risk[5] 0.5003979 1.051029    48 #> abs_risk[6] 0.4786248 1.054525    51 #> abs_risk[7] 0.3699464 1.110548    29 #> abs_risk[8] 0.3354643 1.021817   120 #>  #> $SUCRA #>               mean        sd      2.5%       25%       50%       75%     97.5% #> SUCRA[1] 0.1095714 0.1207360 0.0000000 0.0000000 0.1428571 0.1428571 0.4285714 #> SUCRA[2] 0.9022381 0.1921216 0.2857143 0.8571429 1.0000000 1.0000000 1.0000000 #> SUCRA[3] 0.7942381 0.2212168 0.1428571 0.7142857 0.8571429 1.0000000 1.0000000 #> SUCRA[4] 0.2838571 0.2404266 0.0000000 0.1428571 0.2857143 0.4285714 0.8571429 #> SUCRA[5] 0.4770952 0.2799990 0.0000000 0.2857143 0.5714286 0.7142857 0.8571429 #> SUCRA[6] 0.2638095 0.2119824 0.0000000 0.1428571 0.2857143 0.4285714 0.8571429 #> SUCRA[7] 0.5431429 0.1647864 0.2857143 0.4285714 0.5714286 0.5714286 0.8571429 #> SUCRA[8] 0.6260476 0.1641673 0.2857143 0.5714286 0.5714286 0.7142857 0.8571429 #>              Rhat n.eff #> SUCRA[1] 1.071502    39 #> SUCRA[2] 1.042411   100 #> SUCRA[3] 1.023878   800 #> SUCRA[4] 1.108766    25 #> SUCRA[5] 1.014128   150 #> SUCRA[6] 1.198742    17 #> SUCRA[7] 1.032167    89 #> SUCRA[8] 1.034228    89 #>  #> $effectiveness #>                            mean         sd 2.5% 25% 50% 75% 97.5%     Rhat #> effectiveness[1,1] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[2,1] 0.6720000000 0.46956309    0   0   1   1     1 1.028203 #> effectiveness[3,1] 0.2636666667 0.44069410    0   0   0   1     1 1.022550 #> effectiveness[4,1] 0.0016666667 0.04079759    0   0   0   0     0 1.116024 #> effectiveness[5,1] 0.0180000000 0.13297328    0   0   0   0     0 1.000536 #> effectiveness[6,1] 0.0083333333 0.09092109    0   0   0   0     0 1.281796 #> effectiveness[7,1] 0.0123333333 0.11038697    0   0   0   0     0 1.081657 #> effectiveness[8,1] 0.0240000000 0.15307453    0   0   0   0     0 1.060009 #> effectiveness[1,2] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[2,2] 0.1886666667 0.39130882    0   0   0   0     1 1.014312 #> effectiveness[3,2] 0.4406666667 0.49654984    0   0   0   1     1 1.018257 #> effectiveness[4,2] 0.0406666667 0.19754973    0   0   0   0     1 1.208261 #> effectiveness[5,2] 0.1066666667 0.30874045    0   0   0   0     1 1.002617 #> effectiveness[6,2] 0.0183333333 0.13417609    0   0   0   0     0 1.158642 #> effectiveness[7,2] 0.0673333333 0.25064017    0   0   0   0     1 1.027401 #> effectiveness[8,2] 0.1376666667 0.34460723    0   0   0   0     1 1.034650 #> effectiveness[1,3] 0.0003333333 0.01825742    0   0   0   0     0 1.290904 #> effectiveness[2,3] 0.0426666667 0.20213818    0   0   0   0     1 1.006092 #> effectiveness[3,3] 0.1153333333 0.31947704    0   0   0   0     1 1.028408 #> effectiveness[4,3] 0.0696666667 0.25462685    0   0   0   0     1 1.006828 #> effectiveness[5,3] 0.2443333333 0.42976287    0   0   0   0     1 1.016787 #> effectiveness[6,3] 0.0443333333 0.20586893    0   0   0   0     1 1.189755 #> effectiveness[7,3] 0.1673333333 0.37333544    0   0   0   0     1 1.026945 #> effectiveness[8,3] 0.3160000000 0.46499040    0   0   0   1     1 1.009235 #> effectiveness[1,4] 0.0056666667 0.07507619    0   0   0   0     0 1.204015 #> effectiveness[2,4] 0.0383333333 0.19203172    0   0   0   0     1 1.025053 #> effectiveness[3,4] 0.0636666667 0.24419889    0   0   0   0     1 1.014836 #> effectiveness[4,4] 0.0686666667 0.25292861    0   0   0   0     1 1.014296 #> effectiveness[5,4] 0.1320000000 0.33854720    0   0   0   0     1 1.010444 #> effectiveness[6,4] 0.0583333333 0.23441176    0   0   0   0     1 1.054545 #> effectiveness[7,4] 0.3453333333 0.47555610    0   0   0   1     1 1.019113 #> effectiveness[8,4] 0.2880000000 0.45290659    0   0   0   1     1 1.009007 #> effectiveness[1,5] 0.0240000000 0.15307453    0   0   0   0     0 1.164879 #> effectiveness[2,5] 0.0273333333 0.16308000    0   0   0   0     1 1.055494 #> effectiveness[3,5] 0.0543333333 0.22671205    0   0   0   0     1 1.016349 #> effectiveness[4,5] 0.1200000000 0.32501571    0   0   0   0     1 1.048483 #> effectiveness[5,5] 0.1680000000 0.37392861    0   0   0   0     1 1.009359 #> effectiveness[6,5] 0.1226666667 0.32810889    0   0   0   0     1 1.031543 #> effectiveness[7,5] 0.2913333333 0.45445249    0   0   0   1     1 1.008216 #> effectiveness[8,5] 0.1923333333 0.39419921    0   0   0   0     1 1.052008 #> effectiveness[1,6] 0.1583333333 0.36511413    0   0   0   0     1 1.015679 #> effectiveness[2,6] 0.0093333333 0.09617331    0   0   0   0     0 1.011632 #> effectiveness[3,6] 0.0283333333 0.16595100    0   0   0   0     1 1.036515 #> effectiveness[4,6] 0.2826666667 0.45037077    0   0   0   1     1 1.036342 #> effectiveness[5,6] 0.1096666667 0.31252591    0   0   0   0     1 1.013336 #> effectiveness[6,6] 0.2710000000 0.44455019    0   0   0   1     1 1.016962 #> effectiveness[7,6] 0.1033333333 0.30444450    0   0   0   0     1 1.022340 #> effectiveness[8,6] 0.0373333333 0.18960891    0   0   0   0     1 1.018029 #> effectiveness[1,7] 0.3540000000 0.47828888    0   0   0   1     1 1.008901 #> effectiveness[2,7] 0.0123333333 0.11038697    0   0   0   0     0 1.152217 #> effectiveness[3,7] 0.0190000000 0.13654748    0   0   0   0     0 1.072770 #> effectiveness[4,7] 0.1830000000 0.38673098    0   0   0   0     1 1.001574 #> effectiveness[5,7] 0.1006666667 0.30093700    0   0   0   0     1 1.057714 #> effectiveness[6,7] 0.3133333333 0.46392596    0   0   0   1     1 1.048209 #> effectiveness[7,7] 0.0130000000 0.11329289    0   0   0   0     0 1.110856 #> effectiveness[8,7] 0.0046666667 0.06816478    0   0   0   0     0 1.184453 #> effectiveness[1,8] 0.4576666667 0.49828772    0   0   0   1     1 1.043276 #> effectiveness[2,8] 0.0093333333 0.09617331    0   0   0   0     0 1.088587 #> effectiveness[3,8] 0.0150000000 0.12157272    0   0   0   0     0 1.055106 #> effectiveness[4,8] 0.2336666667 0.42323311    0   0   0   0     1 1.204243 #> effectiveness[5,8] 0.1206666667 0.32579380    0   0   0   0     1 1.007695 #> effectiveness[6,8] 0.1636666667 0.37003450    0   0   0   0     1 1.047011 #> effectiveness[7,8] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #> effectiveness[8,8] 0.0000000000 0.00000000    0   0   0   0     0 1.000000 #>                    n.eff #> effectiveness[1,1]     1 #> effectiveness[2,1]    84 #> effectiveness[3,1]   110 #> effectiveness[4,1]  2100 #> effectiveness[5,1]  3000 #> effectiveness[6,1]   140 #> effectiveness[7,1]   440 #> effectiveness[8,1]   320 #> effectiveness[1,2]     1 #> effectiveness[2,2]   220 #> effectiveness[3,2]   110 #> effectiveness[4,2]    50 #> effectiveness[5,2]  1700 #> effectiveness[6,2]   140 #> effectiveness[7,2]   280 #> effectiveness[8,2]   120 #> effectiveness[1,3]  3000 #> effectiveness[2,3]  1800 #> effectiveness[3,3]   170 #> effectiveness[4,3]  1000 #> effectiveness[5,3]   160 #> effectiveness[6,3]    52 #> effectiveness[7,3]   130 #> effectiveness[8,3]   240 #> effectiveness[1,4]   310 #> effectiveness[2,4]   520 #> effectiveness[3,4]   540 #> effectiveness[4,4]   520 #> effectiveness[5,4]   400 #> effectiveness[6,4]   160 #> effectiveness[7,4]   120 #> effectiveness[8,4]   260 #> effectiveness[1,5]   110 #> effectiveness[2,5]   310 #> effectiveness[3,5]   570 #> effectiveness[4,5]    95 #> effectiveness[5,5]   370 #> effectiveness[6,5]   150 #> effectiveness[7,5]   280 #> effectiveness[8,5]    62 #> effectiveness[1,6]   230 #> effectiveness[2,6]  3000 #> effectiveness[3,6]   470 #> effectiveness[4,6]    71 #> effectiveness[5,6]   370 #> effectiveness[6,6]   150 #> effectiveness[7,6]   230 #> effectiveness[8,6]   740 #> effectiveness[1,7]   240 #> effectiveness[2,7]   220 #> effectiveness[3,7]   330 #> effectiveness[4,7]  1900 #> effectiveness[5,7]    92 #> effectiveness[6,7]    52 #> effectiveness[7,7]   300 #> effectiveness[8,7]   430 #> effectiveness[1,8]    51 #> effectiveness[2,8]   530 #> effectiveness[3,8]   560 #> effectiveness[4,8]    17 #> effectiveness[5,8]   570 #> effectiveness[6,8]    77 #> effectiveness[7,8]     1 #> effectiveness[8,8]     1 #>  #> $D #> [1] 0 #>  #> attr(,\"class\") #> [1] \"run_metareg\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Bayesian pairwise or network meta-analysis — run_model","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Performs one-stage pairwise network meta-analysis addressing   aggregate binary continuous missing participant outcome data via   pattern-mixture model.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"","code":"run_model(   data,   measure,   model,   assumption,   heter_prior,   mean_misspar,   var_misspar,   D,   ref,   base_risk,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"columns data-frame argument data refer   following elements continuous outcome: binary outcome, columns data-frame argument   data refer following elements: number rows data equals number collected trials.   element appears data many times maximum number   interventions compared trial dataset.   pairwise meta-analysis, maximum number arms inherently two.   holds network meta-analysis without multi-arm trials.   case network meta-analysis multi-arm trials, maximum   number arms exceeds two. See 'Examples' illustrates structure   data network maximum number four arms.   prerequisite run_model multi-arm trials   appear bottom dataset.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"data data-frame one-trial-per-row format arm-level data. See 'Format' specification columns. measure Character string indicating effect measure. binary outcome, following can considered: \"\", \"RR\" \"RD\" odds ratio, relative risk, risk difference, respectively. continuous outcome, following can considered: \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference ratio means, respectively. model Character string indicating analysis model values \"RE\", \"FE\" random-effects fixed-effect model, respectively. default argument \"RE\". assumption Character string indicating structure informative missingness parameter. Set assumption equal one following: \"HIE-COMMON\", \"HIE-TRIAL\", \"HIE-ARM\", \"IDE-COMMON\", \"IDE-TRIAL\", \"IDE-ARM\", \"IND-CORR\", \"IND-UNCORR\". default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\", \"IND\" stand identical, hierarchical independent, respectively. \"CORR\" \"UNCORR\" stand correlated uncorrelated, respectively. heter_prior list three elements following order: 1) character string indicating distribution (currently available) values \"halfnormal\", \"uniform\", \"lognormal\", \"logt\"; 2) two numeric values refer parameters selected distribution. \"lognormal\", \"logt\" numbers refer mean precision, respectively. \"halfnormal\", numbers refer zero scale parameter (equal 4 1 corresponding precision scale parameter 0.5 1). \"uniform\", numbers refer minimum maximum value distribution. See 'Details' heterogeneity_param_prior. mean_misspar scalar numeric vector two numeric values mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption. See also 'Details' missingness_param_prior. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\" default argument 0.04. D binary number direction outcome. Set D = 1 beneficial outcome D = 0 harmful outcome. ref integer specifying reference intervention. number match intervention identifier element t data (See 'Format'). base_risk scalar, vector length three elements sorted ascending order, matrix two columns number rows equal number relevant trials. case scalar vector, elements interval (0, 1) (see 'Details'). base_risk defined, function uses median event risk reference intervention corresponding trials data. argument relevant binary outcome. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"list R2jags output summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   fixed-effect pairwise meta-analysis: EM estimated summary effect measure (according argument   measure). EM_LOR estimated summary odd ratio logarithmic scale   measure = \"RR\" measure = \"RD\". dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. phi informative missingness parameter. fixed-effect network meta-analysis, output additionally includes: SUCRA surface cumulative ranking curve   intervention. SUCRA_LOR surface cumulative ranking curve   intervention odds ratio effect measure measure = \"RR\"   measure = \"RD\". effectiveneness ranking probability intervention   every rank. random-effects pairwise meta-analysis, output additionally   includes following elements: EM_pred predicted summary effect measure (according   argument measure). EM_pred_LOR predicted summary odds ratio logarithmic   scale measure = \"RR\" measure = \"RD\". delta estimated trial-specific effect measure (according   argument measure). tau -trial standard deviation. network meta-analysis, EM EM_pred refer   possible pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network. multi-arm trial, estimate total T-1  delta comparisons baseline intervention trial   (found first column element t), T   number interventions trial. Furthermore, output includes following elements: leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. indic sign basic parameters relation reference   intervention specified argument reg jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. run_model function also returns arguments data,  measure, model, assumption, heter_prior,  mean_misspar, var_misspar, D, ref,  base_risk, n_chains, n_iter, n_burnin,   n_thin specified user inherited   functions package.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"model runs JAGS progress simulation   appears R console. output run_model used S3   object functions package processed   provide end-user-ready output. data_preparation function called prepare data   Bayesian analysis. data_preparation creates   pseudo-data-frames m_new, ,   dimensions element N. m_new takes zero   value observed trial-arms unreported missing participant   outcome data (.e., m equals NA corresponding   trial-arms), value m observed trial-arms   reported missing participant outcome data, NA unobserved   trial-arms. dummy pseudo-data-frame takes value one   observed trial-arms reported missing participant outcome data,   zero value observed trial-arms unreported missing   participant outcome data (.e., m_new equals zero   corresponding trial-arms), NA unobserved trial-arms.   Thus, indicates whether missing participant outcome data   collected observed trial-arms. user defined   element m data, m_new take zero   value observed trial-arms indicate missing participant   outcome data collected analysed outcome. See 'Details'   data_preparation. Furthermore, data_preparation sorts interventions across   arms trial ascending order correspondingly   remaining elements data (see 'Format').   data_preparation considers first column t   control arm every trial. Thus, sorting ensures   interventions lower identifier consistently treated   control arm trial. case relevant non-star-shaped   networks. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. perform Bayesian pairwise network meta-analysis,   prepare_model function called contains WinBUGS   code written Dias et al. (2013a) binomial normal likelihood   analyse aggregate binary continuous outcome data, respectively.   prepare_model uses consistency model (described   Lu Ades (2006)) estimate possible comparisons network.   also accounts multi-arm trials assigning conditional   univariate normal distributions underlying trial-specific effect   size comparisons baseline arm multi-arm trial   (Dias et al., 2013a). code Dias et al. (2013a) extended incorporate   pattern-mixture model adjust underlying outcome arm   every trial missing participant outcome data (Spineli et al., 2021;   Spineli, 2019a; Turner et al., 2015). assumptions   missingness parameter specified using arguments mean_misspar   var_misspar. Specifically, run_model considers   informative missingness odds ratio logarithmic scale binary   outcome data (Spineli, 2019a; Turner et al., 2015; White et al., 2008),   informative missingness difference means measure   \"MD\" \"SMD\", informative missingness ratio means   logarithmic scale measure \"ROM\"   (Spineli et al., 2021; Mavridis et al., 2015). assumption trial-specific (.e., \"IDE-TRIAL\"   \"HIE-TRIAL\"), independent (.e., \"IND-CORR\"   \"IND-UNCORR\"), one numeric value can assigned   mean_misspar missingness scenario applied   trials trial-arms dataset, respectively. assumption   \"IDE-ARM\" \"HIE-ARM\", maximum two   different identical numeric values can assigned   vector mean_misspars: first value refers experimental   arm, second value refers control arm trial.   case network, first value considered   non-reference interventions second value considered   reference intervention network (.e., intervention   identifier equal ref). necessary ensure transitivity   assumptions missingness parameter across network   (Spineli, 2019b). least one trial-arm unreported missing participant   outcome data (.e., m equals NA corresponding   trial-arms) missing participant outcome data   collected analysed outcome (.e., m missing   data), run_model assigns assumption \"IND-UNCORR\"   assumption. Currently, empirically-based prior distributions   informative missingness parameters. user may refer Spineli (2019),   Turner et al. (2015), Mavridis et al. (2015), White et al. (2008)   determine mean_misspar select proper value   var_misspar. scalar base_risk refers fixed baseline risk   selected reference intervention (specified ref).   base_risk three-element vector, refers random   baseline risk elements sorted ascending order   refer lower bound, mean value, upper bound 95%   confidence interval baseline risk selected reference   intervention. baseline_model function called   calculate mean variance approximately normal distribution   logit event ref using three elements   (Dias et al., 2018). base_risk matrix, refers   predicted baseline risk first column number events,   second column sample size corresponding trials   selected reference intervention. baseline_model   function called contains WinBUGS code written Dias et al.   (2013b) hierarchical baseline model. posterior mean   precision predictive distribution logit event   selected reference intervention plugged WinBUGS code   relative effects model (via prepare_model function).   matrix base_risk comprise trials data   include ref, unless justified (Dias et al., 2018). obtain unique absolute risks intervention, network   meta-analysis model extended incorporate transitive risks   framework, namely, intervention absolute risk regardless   comparator intervention(s) trial (Spineli et al., 2017).   absolute risks function odds ratio (base-case   effect measure binary outcome) selected baseline risk   reference intervention (ref) (Appendix Dias et al., 2013a).   advocate using odds ratio effect measure desired   mathematical properties. , relative risk risk difference can   obtained function absolute risks corresponding   interventions comparison interest. Hence, regardless   selected measure binary outcome, run_model performs   pairwise network meta-analysis based odds ratio.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Cooper NJ, Sutton AJ, Morris D, Ades AE, Welton NJ. Addressing -study heterogeneity inconsistency mixed treatment comparisons: Application stroke prevention treatments individuals non-rheumatic atrial fibrillation. Stat Med 2009;28(14):1861--81. doi: 10.1002/sim.3594 Dias S, Ades AE, Welton NJ, Jansen JP, Sutton AJ. Network Meta-Analysis Decision Making. Chichester (UK): Wiley; 2018. Dias S, Sutton AJ, Ades AE, Welton NJ. Evidence synthesis decision making 2: generalized linear modeling framework pairwise network meta-analysis randomized controlled trials. Med Decis Making 2013a;33(5):607--17. doi: 10.1177/0272989X12458724 Dias S, Welton NJ, Sutton AJ, Ades AE. Evidence synthesis decision making 5: baseline natural history model. Med Decis Making 2013b;33(5):657--70. doi: 10.1177/0272989X13485155 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Lu G, Ades AE. Assessing evidence inconsistency mixed treatment comparisons. J Stat Assoc 2006;101:447--59. doi: 10.1198/016214505000001302 Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019a;19(1):86. doi: 10.1186/s12874-019-0731-y Spineli LM. Modeling missing binary outcome data preserving transitivity assumption yielded credible network meta-analysis results. J Clin Epidemiol 2019b;105:19--26. doi: 10.1016/j.jclinepi.2018.09.002 Spineli LM, Brignardello-Petersen R, Heen AF, Achille F, Brandt L, Guyatt GH, et al. Obtaining absolute effect estimates facilitate shared decision making context multiple-treatment comparisons. Abstracts Global Evidence Summit, Cape Town, South Africa. Cochrane Database Systematic Reviews 2017;9(Suppl 1):18911. Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Bayesian pairwise or network meta-analysis — run_model","text":"","code":"data(\"nma.baker2009\")  # Show the first six trials of the dataset head(nma.baker2009) #>                   study t1 t2 t3 t4 r1 r2 r3 r4 m1 m2 m3 m4  n1  n2 n3 n4 #> 1 Llewellyn-Jones, 1996  1  4 NA NA  3  0 NA NA  1  0 NA NA   8   8 NA NA #> 2        Paggiaro, 1998  1  4 NA NA 51 45 NA NA 27 19 NA NA 139 142 NA NA #> 3          Mahler, 1999  1  7 NA NA 47 28 NA NA 23  9 NA NA 143 135 NA NA #> 4        Casaburi, 2000  1  8 NA NA 41 45 NA NA 18 12 NA NA 191 279 NA NA #> 5       van Noord, 2000  1  7 NA NA 18 11 NA NA  8  7 NA NA  50  47 NA NA #> 6         Rennard, 2001  1  7 NA NA 41 38 NA NA 29 22 NA NA 135 132 NA NA  # \\donttest{ # Perform a random-effects network meta-analysis # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_model(data = nma.baker2009,           measure = \"OR\",           model = \"RE\",           assumption = \"IDE-ARM\",           heter_prior = list(\"halfnormal\", 0, 1),           mean_misspar = c(0, 0),           var_misspar = 1,           D = 0,           ref = 1,           n_chains = 3,           n_iter = 1000,           n_burnin = 100,           n_thin = 1) #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 100 #>    Unobserved stochastic nodes: 148 #>    Total graph size: 2578 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>                 mean        sd        2.5%         25%          50% #> EM[2,1] -1.150457395 0.4714269 -2.07118740 -1.43901187 -1.155861503 #> EM[3,1] -0.886491276 0.4198300 -1.78870807 -1.11973319 -0.875422574 #> EM[4,1] -0.365902162 0.2909327 -0.88388202 -0.57193202 -0.393360940 #> EM[5,1] -0.519331069 0.3147220 -1.16586946 -0.72381471 -0.527251474 #> EM[6,1] -0.181393846 0.2842431 -0.72202315 -0.37095354 -0.180798971 #> EM[7,1] -0.516684682 0.2025325 -0.94710042 -0.65246147 -0.509131945 #> EM[8,1] -0.576341169 0.1772450 -0.96518575 -0.67614356 -0.563540087 #> EM[3,2]  0.263966119 0.4908061 -0.72233778 -0.05692014  0.262629626 #> EM[4,2]  0.784555233 0.4852350 -0.16700448  0.47586025  0.784633195 #> EM[5,2]  0.631126326 0.5077285 -0.36036855  0.27692970  0.640432367 #> EM[6,2]  0.969063549 0.4474728  0.04463489  0.68625237  0.990465710 #> EM[7,2]  0.633772713 0.4389230 -0.28506229  0.37312667  0.631417559 #> EM[8,2]  0.574116226 0.4480506 -0.34757743  0.29619458  0.581097169 #> EM[4,3]  0.520589114 0.4811892 -0.42259095  0.18294346  0.512660444 #> EM[5,3]  0.367160207 0.4882853 -0.55094898  0.02700561  0.357062618 #> EM[6,3]  0.705097430 0.4478767 -0.26922858  0.43842074  0.734436471 #> EM[7,3]  0.369806594 0.4132615 -0.47482364  0.10423997  0.368658316 #> EM[8,3]  0.310150107 0.4077920 -0.54706706  0.05991270  0.307893036 #> EM[5,4] -0.153428907 0.3845873 -1.05347934 -0.36148572 -0.134246231 #> EM[6,4]  0.184508316 0.3513406 -0.54787746 -0.02290871  0.198617324 #> EM[7,4] -0.150782520 0.3147406 -0.86410165 -0.32953919 -0.129788380 #> EM[8,4] -0.210439007 0.3124149 -0.91538561 -0.38961923 -0.189601603 #> EM[6,5]  0.337937223 0.3684256 -0.38469557  0.09232980  0.330149932 #> EM[7,5]  0.002646387 0.3220395 -0.63011983 -0.20561750  0.006400873 #> EM[8,5] -0.057010100 0.2968214 -0.68592187 -0.24365872 -0.041181518 #> EM[7,6] -0.335290836 0.2619691 -0.87972104 -0.50542021 -0.331568402 #> EM[8,6] -0.394947323 0.2675572 -0.98420463 -0.55724473 -0.379684251 #> EM[8,7] -0.059656487 0.1941990 -0.44882144 -0.18842111 -0.050115128 #>                  75%       97.5%     Rhat n.eff #> EM[2,1] -0.862710183 -0.12596152 1.023037   870 #> EM[3,1] -0.621189407 -0.07551058 1.038180   160 #> EM[4,1] -0.183220926  0.25032126 1.012349   470 #> EM[5,1] -0.320900315  0.11601187 1.268611    13 #> EM[6,1]  0.007009392  0.37704422 1.060986    79 #> EM[7,1] -0.380557659 -0.14173118 1.176918    16 #> EM[8,1] -0.459647158 -0.24554381 1.059190    40 #> EM[3,2]  0.599570293  1.21930135 1.007680   590 #> EM[4,2]  1.092161063  1.76355154 1.032725   370 #> EM[5,2]  0.966783972  1.62788069 1.104761    26 #> EM[6,2]  1.266702125  1.80512638 1.021608   100 #> EM[7,2]  0.908443642  1.47880444 1.050631    53 #> EM[8,2]  0.853284625  1.45015470 1.033461   110 #> EM[4,3]  0.847002569  1.47633196 1.029891   170 #> EM[5,3]  0.712710217  1.33574218 1.139326    22 #> EM[6,3]  0.992920539  1.56205084 1.054951    70 #> EM[7,3]  0.645091918  1.18203590 1.062332    46 #> EM[8,3]  0.575612239  1.10473426 1.050841    57 #> EM[5,4]  0.088154395  0.55744029 1.142874    25 #> EM[6,4]  0.403810296  0.87590111 1.019367   320 #> EM[7,4]  0.059301021  0.41533593 1.039021    64 #> EM[8,4]  0.016938775  0.32436266 1.015103   300 #> EM[6,5]  0.584547011  1.06969818 1.069375    41 #> EM[7,5]  0.212572036  0.64622170 1.055006    49 #> EM[8,5]  0.138271216  0.50525472 1.120746    23 #> EM[7,6] -0.166509067  0.16792532 1.028434   100 #> EM[8,6] -0.229024534  0.11009329 1.029163  1200 #> EM[8,7]  0.070631805  0.31766260 1.072118    34 #>  #> $dev_o #>                  mean        sd         2.5%        25%       50%       75% #> dev.o[1,1]  2.4115450 2.4281852 0.0093712148 0.56240681 1.7083211 3.5234168 #> dev.o[2,1]  0.8161920 1.1308583 0.0009376827 0.07946047 0.3548814 1.1204747 #> dev.o[3,1]  1.0827915 1.4948656 0.0019359982 0.11409973 0.4958916 1.4789237 #> dev.o[4,1]  0.6931861 1.0000267 0.0005413901 0.06499410 0.3015715 0.9354607 #> dev.o[5,1]  0.6988809 0.9469166 0.0006531148 0.07316821 0.3287342 0.9589277 #> dev.o[6,1]  0.9888134 1.3500710 0.0009162391 0.10472354 0.4587681 1.3480169 #> dev.o[7,1]  0.8073401 1.2165513 0.0007094815 0.08212590 0.3590844 1.0388125 #> dev.o[8,1]  0.7241955 1.0220283 0.0006595321 0.07616470 0.3378966 0.9564050 #> dev.o[9,1]  0.6936812 0.9418638 0.0005654049 0.07297408 0.3316888 0.9492830 #> dev.o[10,1] 0.6019299 0.8228574 0.0007343615 0.06953899 0.2810090 0.8099521 #> dev.o[11,1] 0.8896983 1.2593357 0.0009178171 0.09247315 0.4003198 1.1630071 #> dev.o[12,1] 1.3250123 1.6236874 0.0019820320 0.18832852 0.7544009 1.8504094 #> dev.o[13,1] 1.1266118 1.4774595 0.0008363721 0.12408216 0.5565757 1.5525082 #> dev.o[14,1] 0.9134541 1.2721241 0.0012316005 0.09219138 0.4152833 1.2336916 #> dev.o[15,1] 1.0533763 1.4649874 0.0015291891 0.10352404 0.4625540 1.4627504 #> dev.o[16,1] 1.3530560 1.8382349 0.0012901420 0.15269182 0.6622953 1.8424457 #> dev.o[17,1] 1.9732298 2.1320946 0.0031809710 0.35284955 1.2648545 2.9180339 #> dev.o[18,1] 0.9801065 1.3628272 0.0011487777 0.09468644 0.4518983 1.2994611 #> dev.o[19,1] 1.6154858 1.7235056 0.0024048414 0.31064891 1.0851189 2.3273748 #> dev.o[20,1] 0.7564788 1.0389680 0.0007914758 0.08174697 0.3449128 1.0386716 #> dev.o[21,1] 0.9720095 1.3283225 0.0007608045 0.10881728 0.4514843 1.2746264 #> dev.o[1,2]  3.1716739 1.9646579 0.5825982656 1.72714930 2.7453468 4.1618924 #> dev.o[2,2]  0.8202122 1.1872125 0.0005103766 0.07582771 0.3637984 1.0839905 #> dev.o[3,2]  1.0523591 1.3880825 0.0009821898 0.11970388 0.5504139 1.4707570 #> dev.o[4,2]  0.8044559 1.1883501 0.0007575935 0.07453675 0.3505183 1.0564206 #> dev.o[5,2]  0.6191087 0.8671706 0.0005523755 0.06895514 0.2870350 0.8084518 #> dev.o[6,2]  1.0437644 1.4440492 0.0007884732 0.11124002 0.4943015 1.3862455 #> dev.o[7,2]  0.8694693 1.1942249 0.0010705098 0.09202554 0.3992165 1.1848975 #> dev.o[8,2]  0.7137194 1.0193511 0.0005345633 0.07374173 0.3249472 0.9328348 #> dev.o[9,2]  0.7012497 1.0197925 0.0007950015 0.07535663 0.3122781 0.9009631 #> dev.o[10,2] 1.5730883 1.8650887 0.0024079729 0.21521253 0.9083024 2.2957192 #> dev.o[11,2] 0.9290998 1.2694806 0.0008585036 0.10206833 0.4373737 1.2522050 #> dev.o[12,2] 0.7788746 1.1036050 0.0007469187 0.07955166 0.3493381 1.0128773 #> dev.o[13,2] 0.9890747 1.3518352 0.0015115168 0.10045111 0.4580272 1.3290790 #> dev.o[14,2] 0.8731538 1.2616870 0.0010507304 0.08534924 0.3502225 1.1330587 #> dev.o[15,2] 1.1351626 1.5451891 0.0014902845 0.13485554 0.5338150 1.5351870 #> dev.o[16,2] 1.2822083 1.7303124 0.0013041698 0.13667622 0.6306616 1.7192096 #> dev.o[17,2] 2.3257789 2.0497575 0.0128924320 0.73396190 1.8667469 3.3162586 #> dev.o[18,2] 0.9582609 1.2954432 0.0013267540 0.10034196 0.4656523 1.3211006 #> dev.o[19,2] 0.4040211 0.5922665 0.0003924309 0.04016241 0.1777394 0.5279347 #> dev.o[20,2] 0.7296924 1.0554674 0.0007790455 0.07627004 0.3135054 0.9824824 #> dev.o[21,2] 0.9181406 1.2014237 0.0014417332 0.11650155 0.4611663 1.2510591 #> dev.o[9,3]  0.8778197 1.2398198 0.0007680709 0.08420216 0.3950196 1.1554233 #> dev.o[10,3] 0.7647109 1.1204121 0.0008684290 0.07615765 0.3411675 1.0047708 #> dev.o[12,3] 1.1045024 1.4858750 0.0014260218 0.11624380 0.5411700 1.4779095 #> dev.o[13,3] 1.0296079 1.4571436 0.0009016805 0.09241614 0.4776118 1.3868526 #> dev.o[19,3] 1.2079552 1.0834088 0.0159715798 0.40398655 0.9375590 1.6722036 #> dev.o[10,4] 1.2538611 1.6077512 0.0014809896 0.15995052 0.6758089 1.7160704 #> dev.o[12,4] 0.7708576 1.1146449 0.0006518816 0.06448076 0.3453710 1.0020254 #> dev.o[13,4] 1.2743006 1.7286884 0.0017091898 0.14807310 0.6038472 1.7167405 #>                97.5%     Rhat n.eff #> dev.o[1,1]  8.660506 1.002562   970 #> dev.o[2,1]  4.059691 1.001459  2100 #> dev.o[3,1]  5.073021 1.005145   430 #> dev.o[4,1]  3.597415 1.000506  3000 #> dev.o[5,1]  3.460479 1.002299  1100 #> dev.o[6,1]  4.791581 1.001184  2900 #> dev.o[7,1]  4.002554 1.001517  2000 #> dev.o[8,1]  3.656230 1.002192  3000 #> dev.o[9,1]  3.322207 1.002562   970 #> dev.o[10,1] 2.982722 1.002551  2200 #> dev.o[11,1] 4.637222 1.003822  1500 #> dev.o[12,1] 5.764354 1.002610   950 #> dev.o[13,1] 5.349646 1.021904   120 #> dev.o[14,1] 4.516317 1.001709  2100 #> dev.o[15,1] 5.117041 1.002211  1200 #> dev.o[16,1] 6.584873 1.002099  1300 #> dev.o[17,1] 7.900407 1.004824   650 #> dev.o[18,1] 4.881103 1.002949   820 #> dev.o[19,1] 6.190073 1.014707   190 #> dev.o[20,1] 3.664332 1.000897  3000 #> dev.o[21,1] 4.798228 1.010820   420 #> dev.o[1,2]  7.827497 1.003468  1400 #> dev.o[2,2]  4.293970 1.002374  1100 #> dev.o[3,2]  4.926719 1.013594   170 #> dev.o[4,2]  4.187670 1.000590  3000 #> dev.o[5,2]  3.273074 1.002502  3000 #> dev.o[6,2]  5.052231 1.001261  2600 #> dev.o[7,2]  4.314184 1.001533  1900 #> dev.o[8,2]  3.762744 1.002623  1400 #> dev.o[9,2]  3.588349 1.000752  3000 #> dev.o[10,2] 6.460219 1.001224  2800 #> dev.o[11,2] 4.670274 1.002536  1400 #> dev.o[12,2] 4.051702 1.002519   990 #> dev.o[13,2] 4.633767 1.001056  3000 #> dev.o[14,2] 4.643014 1.002523   990 #> dev.o[15,2] 5.123730 1.000764  3000 #> dev.o[16,2] 6.292543 1.009464   290 #> dev.o[17,2] 7.642999 1.010206   710 #> dev.o[18,2] 4.678737 1.014108   160 #> dev.o[19,2] 2.004720 1.003897   590 #> dev.o[20,2] 3.835667 1.004656   600 #> dev.o[21,2] 4.486921 1.002536   980 #> dev.o[9,3]  4.601582 1.007358   420 #> dev.o[10,3] 3.873107 1.001028  3000 #> dev.o[12,3] 5.271179 1.005946   460 #> dev.o[13,3] 5.319600 1.001287  2800 #> dev.o[19,3] 3.994571 1.004387   610 #> dev.o[10,4] 5.753911 1.002460  1000 #> dev.o[12,4] 4.201442 1.001650  1700 #> dev.o[13,4] 6.234701 1.002604  1100 #>  #> $hat_par #>                     mean         sd        2.5%         25%        50% #> hat.par[1,1]    1.573941  0.7957612   0.3604229   0.9633190   1.462680 #> hat.par[2,1]   50.034149  4.6234751  41.0232147  46.8905312  50.009763 #> hat.par[3,1]   43.951623  4.4867441  35.4515695  40.9192724  43.995218 #> hat.par[4,1]   42.227132  4.5801147  33.7826863  39.1054949  42.019202 #> hat.par[5,1]   17.188515  2.4965460  12.4279176  15.5175208  17.099290 #> hat.par[6,1]   43.732036  4.2450956  35.3979288  40.9203952  43.652488 #> hat.par[7,1]  157.287564  7.5541629 142.5198606 152.2808471 157.255813 #> hat.par[8,1]   68.679443  5.4884634  57.8313169  64.9283985  68.659868 #> hat.par[9,1]   90.406801  5.0522429  80.7728010  87.0327475  90.230383 #> hat.par[10,1]  78.520065  3.7240904  71.0439631  75.9717504  78.506737 #> hat.par[11,1]  72.883984  5.5375938  61.9039880  69.2012816  72.844754 #> hat.par[12,1]  77.448042  4.3779676  68.7352739  74.5022726  77.581825 #> hat.par[13,1]  49.736923  4.5484972  40.9188594  46.6006133  49.681990 #> hat.par[14,1]  34.106796  4.7725600  25.4838498  30.8164619  33.921123 #> hat.par[15,1]  37.244949  4.6488462  28.5643413  34.0299492  36.934931 #> hat.par[16,1] 304.337881 13.7006344 277.2671881 295.1952288 304.400245 #> hat.par[17,1]  10.745588  2.5279610   6.3228699   8.9268672  10.545148 #> hat.par[18,1]  22.284496  3.3493480  16.0409817  19.9803773  22.189905 #> hat.par[19,1]   4.061596  1.3809513   1.8366267   3.0749018   3.876244 #> hat.par[20,1]  25.340087  3.6517840  18.6491195  22.7267528  25.205246 #> hat.par[21,1]  32.560090  4.2659926  24.5101757  29.6445976  32.391862 #> hat.par[1,2]    1.391232  0.7586816   0.2860595   0.8185974   1.261365 #> hat.par[2,2]   46.238839  4.7064246  37.2491781  43.0858836  46.131942 #> hat.par[3,2]   31.052465  4.0053421  23.7869275  28.1611927  31.043942 #> hat.par[4,2]   43.457484  5.0895767  33.6738820  39.8807687  43.469791 #> hat.par[5,2]   11.810082  2.1349502   7.8401949  10.3066241  11.789364 #> hat.par[6,2]   35.101331  3.9673794  27.4774974  32.4186890  35.085527 #> hat.par[7,2]  196.816181  9.9834746 177.3220544 189.9587855 196.952841 #> hat.par[8,2]   51.190545  5.0234563  41.7662661  47.7786529  51.054722 #> hat.par[9,2]   81.762340  5.7229979  70.1781811  77.9426935  81.818352 #> hat.par[10,2]  72.949752  3.9099829  65.3036317  70.2955537  73.045554 #> hat.par[11,2] 118.765512  8.2517432 102.9293359 113.0029186 118.691664 #> hat.par[12,2]  80.181326  4.8316681  70.3612848  77.0098795  80.337308 #> hat.par[13,2]  25.681576  4.4850669  17.5904297  22.5378783  25.428364 #> hat.par[14,2]  31.979835  4.6789629  23.3496793  28.7698163  31.710746 #> hat.par[15,2]  32.087475  4.5045519  24.1205687  29.0072456  31.924819 #> hat.par[16,2] 247.152334 12.6171926 222.5546278 238.6431029 246.851705 #> hat.par[17,2]   7.291951  1.9769183   3.8221661   5.8768429   7.206176 #> hat.par[18,2]  12.860544  2.5731314   8.0820460  11.0968396  12.741397 #> hat.par[19,2]   2.465629  0.9393292   1.0144211   1.7768442   2.336262 #> hat.par[20,2]  18.900210  3.1339846  13.0401433  16.7389749  18.804301 #> hat.par[21,2]  21.557260  3.4255766  15.2687279  19.2319428  21.451191 #> hat.par[9,3]   79.336844  6.0471206  67.8187385  75.3181163  79.206788 #> hat.par[10,3]  68.735712  4.4426356  60.3108678  65.7207934  68.808186 #> hat.par[12,3]  67.668373  4.8092915  58.1934814  64.4743981  67.555301 #> hat.par[13,3]  34.897299  5.2071163  25.0912822  31.1810634  34.809888 #> hat.par[19,3]   2.380916  0.8643189   1.0108997   1.7647247   2.277199 #> hat.par[10,4]  67.011271  4.2971457  58.5084275  64.1926267  67.033034 #> hat.par[12,4]  63.007118  4.3603631  53.9925836  60.1117729  63.174184 #> hat.par[13,4]  41.692709  4.9077243  32.5654843  38.2613205  41.547841 #>                      75%      97.5%     Rhat n.eff #> hat.par[1,1]    2.074413   3.340412 1.007171   380 #> hat.par[2,1]   53.058268  59.330829 1.003168   750 #> hat.par[3,1]   46.945898  52.672265 1.013178   160 #> hat.par[4,1]   45.244500  51.833743 1.001228  2700 #> hat.par[5,1]   18.834455  22.268030 1.005988   400 #> hat.par[6,1]   46.583756  52.131355 1.005163   430 #> hat.par[7,1]  162.239842 171.892176 1.002287  2900 #> hat.par[8,1]   72.389347  79.679919 1.009403   240 #> hat.par[9,1]   93.650528 100.622460 1.007057   390 #> hat.par[10,1]  81.116335  85.625161 1.022873    91 #> hat.par[11,1]  76.562641  83.974931 1.012127   200 #> hat.par[12,1]  80.317984  85.838787 1.004769   470 #> hat.par[13,1]  52.886219  58.529310 1.037923    62 #> hat.par[14,1]  37.172517  43.940409 1.010677   200 #> hat.par[15,1]  40.362700  46.827978 1.013919   180 #> hat.par[16,1] 313.658897 331.444513 1.010132   260 #> hat.par[17,1]  12.355023  16.186651 1.003554   660 #> hat.par[18,1]  24.547967  28.966783 1.011720   180 #> hat.par[19,1]   4.918616   7.180276 1.014706   140 #> hat.par[20,1]  27.763706  32.725917 1.004256   560 #> hat.par[21,1]  35.424371  41.158984 1.002968   900 #> hat.par[1,2]    1.832317   3.095158 1.004019  1300 #> hat.par[2,2]   49.293604  55.751404 1.002219  1800 #> hat.par[3,2]   33.753692  39.178810 1.015328   140 #> hat.par[4,2]   46.735839  53.675376 1.003051  1200 #> hat.par[5,2]   13.206799  16.313175 1.005222   480 #> hat.par[6,2]   37.797197  42.799116 1.003718   620 #> hat.par[7,2]  203.655140 216.059096 1.001585  1800 #> hat.par[8,2]   54.457214  61.571854 1.010372   200 #> hat.par[9,2]   85.627811  93.004715 1.009506   220 #> hat.par[10,2]  75.639630  80.502886 1.001580  1900 #> hat.par[11,2] 124.510758 135.166041 1.000888  3000 #> hat.par[12,2]  83.374024  89.731076 1.002978  1000 #> hat.par[13,2]  28.691913  35.341477 1.005097   440 #> hat.par[14,2]  35.015987  41.629471 1.007695   280 #> hat.par[15,2]  34.842955  41.230992 1.004850   680 #> hat.par[16,2] 255.780309 272.723924 1.005954   410 #> hat.par[17,2]   8.516318  11.597523 1.004572  1000 #> hat.par[18,2]  14.574638  18.334060 1.061835    42 #> hat.par[19,2]   3.016774   4.589282 1.021884    96 #> hat.par[20,2]  20.929451  25.254318 1.004047   640 #> hat.par[21,2]  23.772359  28.803039 1.005474   400 #> hat.par[9,3]   83.271416  91.695599 1.007328   300 #> hat.par[10,3]  71.667403  77.366730 1.004295   530 #> hat.par[12,3]  70.973930  76.836189 1.002107  1200 #> hat.par[13,3]  38.327486  45.384362 1.006728   320 #> hat.par[19,3]   2.854002   4.367982 1.006492   340 #> hat.par[10,4]  69.838537  75.464230 1.004628   490 #> hat.par[12,4]  65.907644  71.253176 1.008902   260 #> hat.par[13,4]  44.884223  51.865121 1.002883   840 #>  #> $leverage_o #>  [1] 0.9807181 0.7825328 0.7522292 0.6456956 0.6343244 0.6963139 0.7846828 #>  [8] 0.7132755 0.6310260 0.5920894 0.7776251 0.6689142 0.7511268 0.7958788 #> [15] 0.6878333 0.9841426 0.8857226 0.7875248 0.7408802 0.6634700 0.7472932 #> [22] 0.2374813 0.7668338 0.6448568 0.7396727 0.5391681 0.6970642 0.8574765 #> [29] 0.6959287 0.7000514 0.7130583 0.8882136 0.7356413 0.9842228 0.7333303 #> [36] 0.8226215 0.9311028 0.3731166 0.6010486 0.3061377 0.6546521 0.5614754 #> [43] 0.7629618 0.7446470 0.7456295 1.0292135 0.1470886 0.6824850 0.6379657 #> [50] 0.7958688 #>  #> $sign_dev_o #>  [1]  1  1  1 -1  1 -1 -1 -1  1  1  1 -1  1  1 -1 -1  1  1  1 -1  1 -1 -1 -1  1 #> [26] -1  1  1  1  1  1 -1 -1  1 -1  1  1 -1 -1 -1  1 -1 -1 -1  1  1 -1 -1  1 -1 #>  #> $phi #>               mean        sd      2.5%        25%         50%        75% #> phi[1]  0.07614733 0.6439254 -1.075005 -0.3798396  0.06050400  0.4712106 #> phi[2] -0.08588665 0.9603206 -2.020328 -0.7254163 -0.07048632  0.5847413 #> phi[3] -0.11261239 0.9199244 -1.841710 -0.7578533 -0.10564303  0.5180707 #> phi[4] -1.00205446 0.8951553 -2.530155 -1.5893751 -1.07653467 -0.5262175 #> phi[5] -0.34890338 0.9383133 -2.160195 -0.9876685 -0.36875108  0.2449978 #> phi[6]  0.85757074 0.8383730 -1.030560  0.3774865  0.93011351  1.4178044 #> phi[7] -0.16503784 0.7153204 -1.549649 -0.6262198 -0.19044988  0.2921151 #> phi[8] -0.11162562 0.9996136 -2.079658 -0.7927454 -0.09938766  0.5485569 #>           97.5%     Rhat n.eff #> phi[1] 1.448556 1.102001    30 #> phi[2] 1.684646 1.011660   210 #> phi[3] 1.619885 1.024109   110 #> phi[4] 1.069101 1.045152    82 #> phi[5] 1.623021 1.075753    34 #> phi[6] 2.352620 1.016442   220 #> phi[7] 1.338563 1.055462    45 #> phi[8] 1.928983 1.008356  1500 #>  #> $model_assessment #>        DIC       pD      dev n_data #> 1 88.88557 35.43231 53.45326     50 #>  #> $data #>                    study t1 t2 t3 t4  r1  r2 r3 r4  m1 m2 m3 m4  n1  n2  n3  n4 #> 1  Llewellyn-Jones, 1996  1  4 NA NA   3   0 NA NA   1  0 NA NA   8   8  NA  NA #> 2         Paggiaro, 1998  1  4 NA NA  51  45 NA NA  27 19 NA NA 139 142  NA  NA #> 3           Mahler, 1999  1  7 NA NA  47  28 NA NA  23  9 NA NA 143 135  NA  NA #> 4         Casaburi, 2000  1  8 NA NA  41  45 NA NA  18 12 NA NA 191 279  NA  NA #> 5        van Noord, 2000  1  7 NA NA  18  11 NA NA   8  7 NA NA  50  47  NA  NA #> 6          Rennard, 2001  1  7 NA NA  41  38 NA NA  29 22 NA NA 135 132  NA  NA #> 7         Casaburi, 2002  1  8 NA NA 156 198 NA NA  77 66 NA NA 371 550  NA  NA #> 8          Chapman, 2002  1  7 NA NA  68  52 NA NA  28 20 NA NA 207 201  NA  NA #> 9          Donohue, 2002  1  7  8 NA  92  82 77 NA  37 20 10 NA 201 213 209  NA #> 10          Mahler, 2002  1  4  7  5  79  77 63 68  69 68 45 52 181 168 160 165 #> 11           Rossi, 2002  1  6 NA NA  75 117 NA NA  59 92 NA NA 220 425  NA  NA #> 12         Hanania, 2003  1  4  7  5  73  79 65 71  59 49 57 53 185 183 177 178 #> 13      Szafranski, 2003  1  2  6  3  53  26 38 35  90 62 64 59 205 198 201 208 #> 14          Briggs, 2005  8  7 NA NA  30  36 NA NA  29 41 NA NA 328 325  NA  NA #> 15        Campbell, 2005  1  6 NA NA  34  35 NA NA  39 30 NA NA 217 215  NA  NA #> 16      Niewoehner, 2005  1  8 NA NA 296 255 NA NA 111 75 NA NA 915 914  NA  NA #> 17       van Noord, 2005  8  6 NA NA   4  14 NA NA   1  1 NA NA  70  69  NA  NA #> 18          Barnes, 2006  1  5 NA NA  24  11 NA NA   4  8 NA NA  73  67  NA  NA #> 19       O Donnell, 2006  1  7  5 NA   6   1  2 NA   5  1  3 NA  64  59  62  NA #> 20     Baumgartner, 2007  1  7 NA NA  24  20 NA NA  32 26 NA NA 143 144  NA  NA #> 21         Freeman, 2007  1  8 NA NA  35  19 NA NA  33 18 NA NA 195 200  NA  NA #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $mean_misspar #> [1] 1e-04 1e-04 #>  #> $var_misspar #> [1] 1 #>  #> $D #> [1] 0 #>  #> $ref #> [1] 1 #>  #> $indic #>       [,1] [,2] [,3] [,4] #>  [1,]    1    1   NA   NA #>  [2,]    1    1   NA   NA #>  [3,]    1    1   NA   NA #>  [4,]    1    1   NA   NA #>  [5,]    1    1   NA   NA #>  [6,]    1    1   NA   NA #>  [7,]    1    1   NA   NA #>  [8,]    1    1   NA   NA #>  [9,]    1    1    1   NA #> [10,]    1    1    1    1 #> [11,]    1    1   NA   NA #> [12,]    1    1    1    1 #> [13,]    1    1    1    1 #> [14,]    1    1   NA   NA #> [15,]    1    1   NA   NA #> [16,]    1    1   NA   NA #> [17,]    1    1   NA   NA #> [18,]    1    1   NA   NA #> [19,]    1    1    1   NA #> [20,]    1    1   NA   NA #> [21,]    1    1   NA   NA #>  #> $jagsfit #> Inference for Bugs model at \"5\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>                    mu.vect sd.vect    2.5%     25%     50%     75%   97.5% #> EM[2,1]             -1.150   0.471  -2.071  -1.439  -1.156  -0.863  -0.126 #> EM[3,1]             -0.886   0.420  -1.789  -1.120  -0.875  -0.621  -0.076 #> EM[4,1]             -0.366   0.291  -0.884  -0.572  -0.393  -0.183   0.250 #> EM[5,1]             -0.519   0.315  -1.166  -0.724  -0.527  -0.321   0.116 #> EM[6,1]             -0.181   0.284  -0.722  -0.371  -0.181   0.007   0.377 #> EM[7,1]             -0.517   0.203  -0.947  -0.652  -0.509  -0.381  -0.142 #> EM[8,1]             -0.576   0.177  -0.965  -0.676  -0.564  -0.460  -0.246 #> EM[3,2]              0.264   0.491  -0.722  -0.057   0.263   0.600   1.219 #> EM[4,2]              0.785   0.485  -0.167   0.476   0.785   1.092   1.764 #> EM[5,2]              0.631   0.508  -0.360   0.277   0.640   0.967   1.628 #> EM[6,2]              0.969   0.447   0.045   0.686   0.990   1.267   1.805 #> EM[7,2]              0.634   0.439  -0.285   0.373   0.631   0.908   1.479 #> EM[8,2]              0.574   0.448  -0.348   0.296   0.581   0.853   1.450 #> EM[4,3]              0.521   0.481  -0.423   0.183   0.513   0.847   1.476 #> EM[5,3]              0.367   0.488  -0.551   0.027   0.357   0.713   1.336 #> EM[6,3]              0.705   0.448  -0.269   0.438   0.734   0.993   1.562 #> EM[7,3]              0.370   0.413  -0.475   0.104   0.369   0.645   1.182 #> EM[8,3]              0.310   0.408  -0.547   0.060   0.308   0.576   1.105 #> EM[5,4]             -0.153   0.385  -1.053  -0.361  -0.134   0.088   0.557 #> EM[6,4]              0.185   0.351  -0.548  -0.023   0.199   0.404   0.876 #> EM[7,4]             -0.151   0.315  -0.864  -0.330  -0.130   0.059   0.415 #> EM[8,4]             -0.210   0.312  -0.915  -0.390  -0.190   0.017   0.324 #> EM[6,5]              0.338   0.368  -0.385   0.092   0.330   0.585   1.070 #> EM[7,5]              0.003   0.322  -0.630  -0.206   0.006   0.213   0.646 #> EM[8,5]             -0.057   0.297  -0.686  -0.244  -0.041   0.138   0.505 #> EM[7,6]             -0.335   0.262  -0.880  -0.505  -0.332  -0.167   0.168 #> EM[8,6]             -0.395   0.268  -0.984  -0.557  -0.380  -0.229   0.110 #> EM[8,7]             -0.060   0.194  -0.449  -0.188  -0.050   0.071   0.318 #> EM.pred[2,1]        -1.151   0.513  -2.116  -1.470  -1.160  -0.829  -0.092 #> EM.pred[3,1]        -0.887   0.464  -1.863  -1.170  -0.868  -0.589   0.028 #> EM.pred[4,1]        -0.374   0.347  -1.019  -0.592  -0.397  -0.155   0.360 #> EM.pred[5,1]        -0.523   0.365  -1.270  -0.745  -0.528  -0.288   0.226 #> EM.pred[6,1]        -0.188   0.341  -0.869  -0.399  -0.184   0.027   0.492 #> EM.pred[7,1]        -0.516   0.281  -1.110  -0.681  -0.509  -0.342   0.008 #> EM.pred[8,1]        -0.577   0.262  -1.151  -0.717  -0.556  -0.412  -0.112 #> EM.pred[3,2]         0.259   0.531  -0.796  -0.092   0.255   0.622   1.269 #> EM.pred[4,2]         0.785   0.514  -0.224   0.458   0.787   1.104   1.816 #> EM.pred[5,2]         0.634   0.545  -0.457   0.277   0.638   0.997   1.692 #> EM.pred[6,2]         0.964   0.489  -0.071   0.660   0.980   1.289   1.898 #> EM.pred[7,2]         0.633   0.478  -0.342   0.350   0.638   0.931   1.548 #> EM.pred[8,2]         0.571   0.485  -0.389   0.267   0.586   0.872   1.525 #> EM.pred[4,3]         0.519   0.517  -0.482   0.163   0.501   0.849   1.506 #> EM.pred[5,3]         0.368   0.521  -0.615   0.010   0.353   0.741   1.400 #> EM.pred[6,3]         0.703   0.484  -0.380   0.433   0.731   1.005   1.621 #> EM.pred[7,3]         0.370   0.450  -0.536   0.086   0.365   0.644   1.284 #> EM.pred[8,3]         0.303   0.448  -0.632   0.035   0.315   0.590   1.149 #> EM.pred[5,4]        -0.159   0.428  -1.173  -0.388  -0.141   0.102   0.629 #> EM.pred[6,4]         0.188   0.402  -0.680  -0.051   0.201   0.437   0.950 #> EM.pred[7,4]        -0.154   0.376  -0.986  -0.363  -0.132   0.081   0.538 #> EM.pred[8,4]        -0.212   0.362  -1.005  -0.418  -0.185   0.031   0.399 #> EM.pred[6,5]         0.338   0.422  -0.510   0.067   0.328   0.607   1.185 #> EM.pred[7,5]         0.006   0.371  -0.710  -0.233   0.008   0.243   0.748 #> EM.pred[8,5]        -0.054   0.349  -0.773  -0.275  -0.041   0.183   0.604 #> EM.pred[7,6]        -0.343   0.325  -1.012  -0.535  -0.338  -0.138   0.281 #> EM.pred[8,6]        -0.397   0.323  -1.040  -0.596  -0.379  -0.202   0.252 #> EM.pred[8,7]        -0.059   0.270  -0.607  -0.229  -0.055   0.109   0.442 #> SUCRA[1]             0.065   0.099   0.000   0.000   0.000   0.143   0.286 #> SUCRA[2]             0.905   0.179   0.286   0.857   1.000   1.000   1.000 #> SUCRA[3]             0.785   0.229   0.143   0.714   0.857   1.000   1.000 #> SUCRA[4]             0.389   0.235   0.000   0.286   0.429   0.571   0.857 #> SUCRA[5]             0.531   0.254   0.000   0.286   0.571   0.714   1.000 #> SUCRA[6]             0.204   0.185   0.000   0.143   0.143   0.286   0.714 #> SUCRA[7]             0.530   0.180   0.286   0.429   0.571   0.714   0.857 #> SUCRA[8]             0.590   0.178   0.286   0.429   0.571   0.714   0.857 #> abs_risk[1]          0.392   0.000   0.392   0.392   0.392   0.392   0.392 #> abs_risk[2]          0.179   0.070   0.075   0.132   0.169   0.214   0.362 #> abs_risk[3]          0.218   0.069   0.097   0.174   0.212   0.257   0.374 #> abs_risk[4]          0.312   0.063   0.210   0.267   0.303   0.349   0.453 #> abs_risk[5]          0.281   0.063   0.167   0.238   0.275   0.318   0.420 #> abs_risk[6]          0.352   0.064   0.238   0.308   0.350   0.393   0.484 #> abs_risk[7]          0.279   0.040   0.200   0.251   0.279   0.306   0.358 #> abs_risk[8]          0.267   0.034   0.197   0.247   0.268   0.289   0.335 #> delta[1,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[2,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[3,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[4,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[5,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[6,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[7,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[8,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[9,1]           0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[10,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[11,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[12,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[13,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[14,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[15,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[16,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[17,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[18,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[19,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[20,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[21,1]          0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> delta[1,2]          -0.411   0.338  -1.064  -0.625  -0.427  -0.197   0.282 #> delta[2,2]          -0.411   0.273  -0.910  -0.599  -0.426  -0.235   0.138 #> delta[3,2]          -0.593   0.239  -1.093  -0.742  -0.580  -0.435  -0.150 #> delta[4,2]          -0.518   0.178  -0.881  -0.626  -0.520  -0.403  -0.172 #> delta[5,2]          -0.539   0.262  -1.087  -0.688  -0.531  -0.364  -0.067 #> delta[6,2]          -0.444   0.238  -0.907  -0.598  -0.451  -0.290   0.033 #> delta[7,2]          -0.535   0.188  -0.951  -0.648  -0.529  -0.407  -0.190 #> delta[8,2]          -0.481   0.199  -0.869  -0.619  -0.479  -0.348  -0.093 #> delta[9,2]          -0.536   0.208  -0.965  -0.671  -0.532  -0.394  -0.138 #> delta[10,2]         -0.307   0.344  -0.893  -0.557  -0.336  -0.091   0.424 #> delta[11,2]         -0.233   0.283  -0.787  -0.416  -0.227  -0.047   0.320 #> delta[12,2]         -0.331   0.309  -0.879  -0.549  -0.357  -0.125   0.310 #> delta[13,2]         -1.207   0.453  -2.087  -1.475  -1.213  -0.943  -0.215 #> delta[14,2]         -0.112   0.223  -0.578  -0.252  -0.108   0.035   0.307 #> delta[15,2]         -0.104   0.272  -0.637  -0.281  -0.112   0.079   0.463 #> delta[16,2]         -0.388   0.145  -0.664  -0.489  -0.395  -0.287  -0.105 #> delta[17,2]         -0.498   0.316  -1.201  -0.685  -0.466  -0.293   0.065 #> delta[18,2]         -0.571   0.326  -1.243  -0.769  -0.573  -0.364   0.063 #> delta[19,2]         -0.560   0.359  -1.350  -0.763  -0.556  -0.343   0.161 #> delta[20,2]         -0.483   0.243  -0.988  -0.631  -0.485  -0.326  -0.022 #> delta[21,2]         -0.640   0.228  -1.155  -0.767  -0.617  -0.488  -0.251 #> delta[9,3]          -0.629   0.202  -1.077  -0.748  -0.604  -0.491  -0.258 #> delta[10,3]         -0.536   0.343  -1.254  -0.748  -0.539  -0.329   0.193 #> delta[12,3]         -0.417   0.330  -1.008  -0.633  -0.445  -0.212   0.309 #> delta[13,3]         -0.948   0.389  -1.791  -1.177  -0.934  -0.687  -0.207 #> delta[19,3]         -0.572   0.275  -1.188  -0.729  -0.555  -0.390  -0.084 #> delta[10,4]         -0.579   0.272  -1.183  -0.733  -0.563  -0.392  -0.108 #> delta[12,4]         -0.435   0.253  -0.932  -0.604  -0.444  -0.278   0.088 #> delta[13,4]         -0.298   0.341  -1.004  -0.520  -0.264  -0.068   0.295 #> dev.o[1,1]           2.412   2.428   0.009   0.562   1.708   3.523   8.661 #> dev.o[2,1]           0.816   1.131   0.001   0.079   0.355   1.120   4.060 #> dev.o[3,1]           1.083   1.495   0.002   0.114   0.496   1.479   5.073 #> dev.o[4,1]           0.693   1.000   0.001   0.065   0.302   0.935   3.597 #> dev.o[5,1]           0.699   0.947   0.001   0.073   0.329   0.959   3.460 #> dev.o[6,1]           0.989   1.350   0.001   0.105   0.459   1.348   4.792 #> dev.o[7,1]           0.807   1.217   0.001   0.082   0.359   1.039   4.003 #> dev.o[8,1]           0.724   1.022   0.001   0.076   0.338   0.956   3.656 #> dev.o[9,1]           0.694   0.942   0.001   0.073   0.332   0.949   3.322 #> dev.o[10,1]          0.602   0.823   0.001   0.070   0.281   0.810   2.983 #> dev.o[11,1]          0.890   1.259   0.001   0.092   0.400   1.163   4.637 #> dev.o[12,1]          1.325   1.624   0.002   0.188   0.754   1.850   5.764 #> dev.o[13,1]          1.127   1.477   0.001   0.124   0.557   1.553   5.350 #> dev.o[14,1]          0.913   1.272   0.001   0.092   0.415   1.234   4.516 #> dev.o[15,1]          1.053   1.465   0.002   0.104   0.463   1.463   5.117 #> dev.o[16,1]          1.353   1.838   0.001   0.153   0.662   1.842   6.585 #> dev.o[17,1]          1.973   2.132   0.003   0.353   1.265   2.918   7.900 #> dev.o[18,1]          0.980   1.363   0.001   0.095   0.452   1.299   4.881 #> dev.o[19,1]          1.615   1.724   0.002   0.311   1.085   2.327   6.190 #> dev.o[20,1]          0.756   1.039   0.001   0.082   0.345   1.039   3.664 #> dev.o[21,1]          0.972   1.328   0.001   0.109   0.451   1.275   4.798 #> dev.o[1,2]           3.172   1.965   0.583   1.727   2.745   4.162   7.827 #> dev.o[2,2]           0.820   1.187   0.001   0.076   0.364   1.084   4.294 #> dev.o[3,2]           1.052   1.388   0.001   0.120   0.550   1.471   4.927 #> dev.o[4,2]           0.804   1.188   0.001   0.075   0.351   1.056   4.188 #> dev.o[5,2]           0.619   0.867   0.001   0.069   0.287   0.808   3.273 #> dev.o[6,2]           1.044   1.444   0.001   0.111   0.494   1.386   5.052 #> dev.o[7,2]           0.869   1.194   0.001   0.092   0.399   1.185   4.314 #> dev.o[8,2]           0.714   1.019   0.001   0.074   0.325   0.933   3.763 #> dev.o[9,2]           0.701   1.020   0.001   0.075   0.312   0.901   3.588 #> dev.o[10,2]          1.573   1.865   0.002   0.215   0.908   2.296   6.460 #> dev.o[11,2]          0.929   1.269   0.001   0.102   0.437   1.252   4.670 #> dev.o[12,2]          0.779   1.104   0.001   0.080   0.349   1.013   4.052 #> dev.o[13,2]          0.989   1.352   0.002   0.100   0.458   1.329   4.634 #> dev.o[14,2]          0.873   1.262   0.001   0.085   0.350   1.133   4.643 #> dev.o[15,2]          1.135   1.545   0.001   0.135   0.534   1.535   5.124 #> dev.o[16,2]          1.282   1.730   0.001   0.137   0.631   1.719   6.293 #> dev.o[17,2]          2.326   2.050   0.013   0.734   1.867   3.316   7.643 #> dev.o[18,2]          0.958   1.295   0.001   0.100   0.466   1.321   4.679 #> dev.o[19,2]          0.404   0.592   0.000   0.040   0.178   0.528   2.005 #> dev.o[20,2]          0.730   1.055   0.001   0.076   0.314   0.982   3.836 #> dev.o[21,2]          0.918   1.201   0.001   0.117   0.461   1.251   4.487 #> dev.o[9,3]           0.878   1.240   0.001   0.084   0.395   1.155   4.602 #> dev.o[10,3]          0.765   1.120   0.001   0.076   0.341   1.005   3.873 #> dev.o[12,3]          1.105   1.486   0.001   0.116   0.541   1.478   5.271 #> dev.o[13,3]          1.030   1.457   0.001   0.092   0.478   1.387   5.320 #> dev.o[19,3]          1.208   1.083   0.016   0.404   0.938   1.672   3.995 #> dev.o[10,4]          1.254   1.608   0.001   0.160   0.676   1.716   5.754 #> dev.o[12,4]          0.771   1.115   0.001   0.064   0.345   1.002   4.201 #> dev.o[13,4]          1.274   1.729   0.002   0.148   0.604   1.717   6.235 #> effectiveness[1,1]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,1]   0.656   0.475   0.000   0.000   1.000   1.000   1.000 #> effectiveness[3,1]   0.256   0.436   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,1]   0.011   0.104   0.000   0.000   0.000   0.000   0.000 #> effectiveness[5,1]   0.044   0.205   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,1]   0.002   0.045   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,1]   0.007   0.083   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,1]   0.024   0.154   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,2]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,2]   0.210   0.408   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,2]   0.440   0.496   0.000   0.000   0.000   1.000   1.000 #> effectiveness[4,2]   0.046   0.210   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,2]   0.131   0.337   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,2]   0.013   0.113   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,2]   0.066   0.248   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,2]   0.094   0.291   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,3]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,3]   0.049   0.217   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,3]   0.109   0.311   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,3]   0.112   0.315   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,3]   0.206   0.405   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,3]   0.024   0.154   0.000   0.000   0.000   0.000   0.000 #> effectiveness[7,3]   0.222   0.415   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,3]   0.278   0.448   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,4]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,4]   0.033   0.178   0.000   0.000   0.000   0.000   1.000 #> effectiveness[3,4]   0.067   0.250   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,4]   0.128   0.335   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,4]   0.165   0.371   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,4]   0.037   0.189   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,4]   0.250   0.433   0.000   0.000   0.000   0.250   1.000 #> effectiveness[8,4]   0.320   0.467   0.000   0.000   0.000   1.000   1.000 #> effectiveness[1,5]   0.013   0.112   0.000   0.000   0.000   0.000   0.000 #> effectiveness[2,5]   0.023   0.150   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,5]   0.051   0.221   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,5]   0.211   0.408   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,5]   0.177   0.382   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,5]   0.082   0.274   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,5]   0.269   0.444   0.000   0.000   0.000   1.000   1.000 #> effectiveness[8,5]   0.174   0.379   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,6]   0.078   0.269   0.000   0.000   0.000   0.000   1.000 #> effectiveness[2,6]   0.017   0.128   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,6]   0.040   0.196   0.000   0.000   0.000   0.000   1.000 #> effectiveness[4,6]   0.252   0.434   0.000   0.000   0.000   1.000   1.000 #> effectiveness[5,6]   0.156   0.363   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,6]   0.198   0.399   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,6]   0.165   0.371   0.000   0.000   0.000   0.000   1.000 #> effectiveness[8,6]   0.094   0.292   0.000   0.000   0.000   0.000   1.000 #> effectiveness[1,7]   0.259   0.438   0.000   0.000   0.000   1.000   1.000 #> effectiveness[2,7]   0.005   0.068   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,7]   0.023   0.150   0.000   0.000   0.000   0.000   0.000 #> effectiveness[4,7]   0.160   0.367   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,7]   0.088   0.283   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,7]   0.428   0.495   0.000   0.000   0.000   1.000   1.000 #> effectiveness[7,7]   0.022   0.146   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,7]   0.016   0.125   0.000   0.000   0.000   0.000   0.000 #> effectiveness[1,8]   0.650   0.477   0.000   0.000   1.000   1.000   1.000 #> effectiveness[2,8]   0.007   0.085   0.000   0.000   0.000   0.000   0.000 #> effectiveness[3,8]   0.014   0.119   0.000   0.000   0.000   0.000   0.000 #> effectiveness[4,8]   0.080   0.271   0.000   0.000   0.000   0.000   1.000 #> effectiveness[5,8]   0.033   0.178   0.000   0.000   0.000   0.000   1.000 #> effectiveness[6,8]   0.216   0.412   0.000   0.000   0.000   0.000   1.000 #> effectiveness[7,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> effectiveness[8,8]   0.000   0.000   0.000   0.000   0.000   0.000   0.000 #> hat.par[1,1]         1.574   0.796   0.360   0.963   1.463   2.074   3.340 #> hat.par[2,1]        50.034   4.623  41.023  46.891  50.010  53.058  59.331 #> hat.par[3,1]        43.952   4.487  35.452  40.919  43.995  46.946  52.672 #> hat.par[4,1]        42.227   4.580  33.783  39.105  42.019  45.245  51.834 #> hat.par[5,1]        17.189   2.497  12.428  15.518  17.099  18.834  22.268 #> hat.par[6,1]        43.732   4.245  35.398  40.920  43.652  46.584  52.131 #> hat.par[7,1]       157.288   7.554 142.520 152.281 157.256 162.240 171.892 #> hat.par[8,1]        68.679   5.488  57.831  64.928  68.660  72.389  79.680 #> hat.par[9,1]        90.407   5.052  80.773  87.033  90.230  93.651 100.622 #> hat.par[10,1]       78.520   3.724  71.044  75.972  78.507  81.116  85.625 #> hat.par[11,1]       72.884   5.538  61.904  69.201  72.845  76.563  83.975 #> hat.par[12,1]       77.448   4.378  68.735  74.502  77.582  80.318  85.839 #> hat.par[13,1]       49.737   4.548  40.919  46.601  49.682  52.886  58.529 #> hat.par[14,1]       34.107   4.773  25.484  30.816  33.921  37.173  43.940 #> hat.par[15,1]       37.245   4.649  28.564  34.030  36.935  40.363  46.828 #> hat.par[16,1]      304.338  13.701 277.267 295.195 304.400 313.659 331.445 #> hat.par[17,1]       10.746   2.528   6.323   8.927  10.545  12.355  16.187 #> hat.par[18,1]       22.284   3.349  16.041  19.980  22.190  24.548  28.967 #> hat.par[19,1]        4.062   1.381   1.837   3.075   3.876   4.919   7.180 #> hat.par[20,1]       25.340   3.652  18.649  22.727  25.205  27.764  32.726 #> hat.par[21,1]       32.560   4.266  24.510  29.645  32.392  35.424  41.159 #> hat.par[1,2]         1.391   0.759   0.286   0.819   1.261   1.832   3.095 #> hat.par[2,2]        46.239   4.706  37.249  43.086  46.132  49.294  55.751 #> hat.par[3,2]        31.052   4.005  23.787  28.161  31.044  33.754  39.179 #> hat.par[4,2]        43.457   5.090  33.674  39.881  43.470  46.736  53.675 #> hat.par[5,2]        11.810   2.135   7.840  10.307  11.789  13.207  16.313 #> hat.par[6,2]        35.101   3.967  27.477  32.419  35.086  37.797  42.799 #> hat.par[7,2]       196.816   9.983 177.322 189.959 196.953 203.655 216.059 #> hat.par[8,2]        51.191   5.023  41.766  47.779  51.055  54.457  61.572 #> hat.par[9,2]        81.762   5.723  70.178  77.943  81.818  85.628  93.005 #> hat.par[10,2]       72.950   3.910  65.304  70.296  73.046  75.640  80.503 #> hat.par[11,2]      118.766   8.252 102.929 113.003 118.692 124.511 135.166 #> hat.par[12,2]       80.181   4.832  70.361  77.010  80.337  83.374  89.731 #> hat.par[13,2]       25.682   4.485  17.590  22.538  25.428  28.692  35.341 #> hat.par[14,2]       31.980   4.679  23.350  28.770  31.711  35.016  41.629 #> hat.par[15,2]       32.087   4.505  24.121  29.007  31.925  34.843  41.231 #> hat.par[16,2]      247.152  12.617 222.555 238.643 246.852 255.780 272.724 #> hat.par[17,2]        7.292   1.977   3.822   5.877   7.206   8.516  11.598 #> hat.par[18,2]       12.861   2.573   8.082  11.097  12.741  14.575  18.334 #> hat.par[19,2]        2.466   0.939   1.014   1.777   2.336   3.017   4.589 #> hat.par[20,2]       18.900   3.134  13.040  16.739  18.804  20.929  25.254 #> hat.par[21,2]       21.557   3.426  15.269  19.232  21.451  23.772  28.803 #> hat.par[9,3]        79.337   6.047  67.819  75.318  79.207  83.271  91.696 #> hat.par[10,3]       68.736   4.443  60.311  65.721  68.808  71.667  77.367 #> hat.par[12,3]       67.668   4.809  58.193  64.474  67.555  70.974  76.836 #> hat.par[13,3]       34.897   5.207  25.091  31.181  34.810  38.327  45.384 #> hat.par[19,3]        2.381   0.864   1.011   1.765   2.277   2.854   4.368 #> hat.par[10,4]       67.011   4.297  58.508  64.193  67.033  69.839  75.464 #> hat.par[12,4]       63.007   4.360  53.993  60.112  63.174  65.908  71.253 #> hat.par[13,4]       41.693   4.908  32.565  38.261  41.548  44.884  51.865 #> phi[1]               0.076   0.644  -1.075  -0.380   0.061   0.471   1.449 #> phi[2]              -0.086   0.960  -2.020  -0.725  -0.070   0.585   1.685 #> phi[3]              -0.113   0.920  -1.842  -0.758  -0.106   0.518   1.620 #> phi[4]              -1.002   0.895  -2.530  -1.589  -1.077  -0.526   1.069 #> phi[5]              -0.349   0.938  -2.160  -0.988  -0.369   0.245   1.623 #> phi[6]               0.858   0.838  -1.031   0.377   0.930   1.418   2.353 #> phi[7]              -0.165   0.715  -1.550  -0.626  -0.190   0.292   1.339 #> phi[8]              -0.112   1.000  -2.080  -0.793  -0.099   0.549   1.929 #> tau                  0.167   0.087   0.042   0.103   0.151   0.219   0.369 #> totresdev.o         53.453   9.203  36.967  47.285  52.657  59.071  73.920 #> deviance           581.035  13.640 556.124 571.411 580.354 589.917 609.396 #>                     Rhat n.eff #> EM[2,1]            1.023   870 #> EM[3,1]            1.038   160 #> EM[4,1]            1.012   470 #> EM[5,1]            1.269    13 #> EM[6,1]            1.061    79 #> EM[7,1]            1.177    16 #> EM[8,1]            1.059    40 #> EM[3,2]            1.008   590 #> EM[4,2]            1.033   370 #> EM[5,2]            1.105    26 #> EM[6,2]            1.022   100 #> EM[7,2]            1.051    53 #> EM[8,2]            1.033   110 #> EM[4,3]            1.030   170 #> EM[5,3]            1.139    22 #> EM[6,3]            1.055    70 #> EM[7,3]            1.062    46 #> EM[8,3]            1.051    57 #> EM[5,4]            1.143    25 #> EM[6,4]            1.019   320 #> EM[7,4]            1.039    64 #> EM[8,4]            1.015   300 #> EM[6,5]            1.069    41 #> EM[7,5]            1.055    49 #> EM[8,5]            1.121    23 #> EM[7,6]            1.028   100 #> EM[8,6]            1.029  1200 #> EM[8,7]            1.072    34 #> EM.pred[2,1]       1.021  1300 #> EM.pred[3,1]       1.035   220 #> EM.pred[4,1]       1.009   610 #> EM.pred[5,1]       1.166    20 #> EM.pred[6,1]       1.046   120 #> EM.pred[7,1]       1.100    26 #> EM.pred[8,1]       1.037    73 #> EM.pred[3,2]       1.009   790 #> EM.pred[4,2]       1.030   400 #> EM.pred[5,2]       1.093    28 #> EM.pred[6,2]       1.018   130 #> EM.pred[7,2]       1.046    61 #> EM.pred[8,2]       1.028   140 #> EM.pred[4,3]       1.029   210 #> EM.pred[5,3]       1.118    25 #> EM.pred[6,3]       1.046    86 #> EM.pred[7,3]       1.055    52 #> EM.pred[8,3]       1.041    71 #> EM.pred[5,4]       1.121    29 #> EM.pred[6,4]       1.018   500 #> EM.pred[7,4]       1.033    92 #> EM.pred[8,4]       1.018   310 #> EM.pred[6,5]       1.060    50 #> EM.pred[7,5]       1.042    66 #> EM.pred[8,5]       1.080    34 #> EM.pred[7,6]       1.025   130 #> EM.pred[8,6]       1.024  3000 #> EM.pred[8,7]       1.040    57 #> SUCRA[1]           1.050    72 #> SUCRA[2]           1.093    59 #> SUCRA[3]           1.101    35 #> SUCRA[4]           1.011   220 #> SUCRA[5]           1.118    25 #> SUCRA[6]           1.029   130 #> SUCRA[7]           1.025    85 #> SUCRA[8]           1.054    55 #> abs_risk[1]        1.000     1 #> abs_risk[2]        1.019  1400 #> abs_risk[3]        1.034   200 #> abs_risk[4]        1.012   390 #> abs_risk[5]        1.283    13 #> abs_risk[6]        1.062    67 #> abs_risk[7]        1.180    16 #> abs_risk[8]        1.060    40 #> delta[1,1]         1.000     1 #> delta[2,1]         1.000     1 #> delta[3,1]         1.000     1 #> delta[4,1]         1.000     1 #> delta[5,1]         1.000     1 #> delta[6,1]         1.000     1 #> delta[7,1]         1.000     1 #> delta[8,1]         1.000     1 #> delta[9,1]         1.000     1 #> delta[10,1]        1.000     1 #> delta[11,1]        1.000     1 #> delta[12,1]        1.000     1 #> delta[13,1]        1.000     1 #> delta[14,1]        1.000     1 #> delta[15,1]        1.000     1 #> delta[16,1]        1.000     1 #> delta[17,1]        1.000     1 #> delta[18,1]        1.000     1 #> delta[19,1]        1.000     1 #> delta[20,1]        1.000     1 #> delta[21,1]        1.000     1 #> delta[1,2]         1.018   270 #> delta[2,2]         1.011   260 #> delta[3,2]         1.116    22 #> delta[4,2]         1.031    90 #> delta[5,2]         1.124    22 #> delta[6,2]         1.114    22 #> delta[7,2]         1.043    55 #> delta[8,2]         1.110    23 #> delta[9,2]         1.094    27 #> delta[10,2]        1.018   330 #> delta[11,2]        1.082    40 #> delta[12,2]        1.011   440 #> delta[13,2]        1.023  3000 #> delta[14,2]        1.067    36 #> delta[15,2]        1.040   130 #> delta[16,2]        1.024    93 #> delta[17,2]        1.030   240 #> delta[18,2]        1.196    17 #> delta[19,2]        1.231    15 #> delta[20,2]        1.129    20 #> delta[21,2]        1.063    39 #> delta[9,3]         1.037    63 #> delta[10,3]        1.297    12 #> delta[12,3]        1.200    16 #> delta[13,3]        1.028   270 #> delta[19,3]        1.100    26 #> delta[10,4]        1.170    16 #> delta[12,4]        1.126    21 #> delta[13,4]        1.057    63 #> dev.o[1,1]         1.003   970 #> dev.o[2,1]         1.001  2100 #> dev.o[3,1]         1.005   430 #> dev.o[4,1]         1.001  3000 #> dev.o[5,1]         1.002  1100 #> dev.o[6,1]         1.001  2900 #> dev.o[7,1]         1.002  2000 #> dev.o[8,1]         1.002  3000 #> dev.o[9,1]         1.003   970 #> dev.o[10,1]        1.003  2200 #> dev.o[11,1]        1.004  1500 #> dev.o[12,1]        1.003   950 #> dev.o[13,1]        1.022   120 #> dev.o[14,1]        1.002  2100 #> dev.o[15,1]        1.002  1200 #> dev.o[16,1]        1.002  1300 #> dev.o[17,1]        1.005   650 #> dev.o[18,1]        1.003   820 #> dev.o[19,1]        1.015   190 #> dev.o[20,1]        1.001  3000 #> dev.o[21,1]        1.011   420 #> dev.o[1,2]         1.003  1400 #> dev.o[2,2]         1.002  1100 #> dev.o[3,2]         1.014   170 #> dev.o[4,2]         1.001  3000 #> dev.o[5,2]         1.003  3000 #> dev.o[6,2]         1.001  2600 #> dev.o[7,2]         1.002  1900 #> dev.o[8,2]         1.003  1400 #> dev.o[9,2]         1.001  3000 #> dev.o[10,2]        1.001  2800 #> dev.o[11,2]        1.003  1400 #> dev.o[12,2]        1.003   990 #> dev.o[13,2]        1.001  3000 #> dev.o[14,2]        1.003   990 #> dev.o[15,2]        1.001  3000 #> dev.o[16,2]        1.009   290 #> dev.o[17,2]        1.010   710 #> dev.o[18,2]        1.014   160 #> dev.o[19,2]        1.004   590 #> dev.o[20,2]        1.005   600 #> dev.o[21,2]        1.003   980 #> dev.o[9,3]         1.007   420 #> dev.o[10,3]        1.001  3000 #> dev.o[12,3]        1.006   460 #> dev.o[13,3]        1.001  2800 #> dev.o[19,3]        1.004   610 #> dev.o[10,4]        1.002  1000 #> dev.o[12,4]        1.002  1700 #> dev.o[13,4]        1.003  1100 #> effectiveness[1,1] 1.000     1 #> effectiveness[2,1] 1.009   230 #> effectiveness[3,1] 1.011   240 #> effectiveness[4,1] 1.021  2000 #> effectiveness[5,1] 1.229    42 #> effectiveness[6,1] 1.134  1500 #> effectiveness[7,1] 1.191   280 #> effectiveness[8,1] 1.178    94 #> effectiveness[1,2] 1.000     1 #> effectiveness[2,2] 1.005   540 #> effectiveness[3,2] 1.025    83 #> effectiveness[4,2] 1.023   480 #> effectiveness[5,2] 1.090    50 #> effectiveness[6,2] 1.127   260 #> effectiveness[7,2] 1.094    80 #> effectiveness[8,2] 1.011   510 #> effectiveness[1,3] 1.000     1 #> effectiveness[2,3] 1.032   320 #> effectiveness[3,3] 1.040   130 #> effectiveness[4,3] 1.014   360 #> effectiveness[5,3] 1.014   220 #> effectiveness[6,3] 1.010  2000 #> effectiveness[7,3] 1.016   180 #> effectiveness[8,3] 1.033    79 #> effectiveness[1,4] 1.000     1 #> effectiveness[2,4] 1.072   200 #> effectiveness[3,4] 1.013   570 #> effectiveness[4,4] 1.002  2000 #> effectiveness[5,4] 1.019   190 #> effectiveness[6,4] 1.027   490 #> effectiveness[7,4] 1.002  1800 #> effectiveness[8,4] 1.001  3000 #> effectiveness[1,5] 1.109   310 #> effectiveness[2,5] 1.083   240 #> effectiveness[3,5] 1.016   620 #> effectiveness[4,5] 1.002  1900 #> effectiveness[5,5] 1.029   120 #> effectiveness[6,5] 1.001  3000 #> effectiveness[7,5] 1.012   210 #> effectiveness[8,5] 1.018   180 #> effectiveness[1,6] 1.071    92 #> effectiveness[2,6] 1.100   270 #> effectiveness[3,6] 1.071   170 #> effectiveness[4,6] 1.012   220 #> effectiveness[5,6] 1.011   340 #> effectiveness[6,6] 1.019   160 #> effectiveness[7,6] 1.003  1100 #> effectiveness[8,6] 1.101    56 #> effectiveness[1,7] 1.019   130 #> effectiveness[2,7] 1.184   430 #> effectiveness[3,7] 1.171   100 #> effectiveness[4,7] 1.033   110 #> effectiveness[5,7] 1.032   190 #> effectiveness[6,7] 1.017   120 #> effectiveness[7,7] 1.062   350 #> effectiveness[8,7] 1.173   140 #> effectiveness[1,8] 1.024    94 #> effectiveness[2,8] 1.098   600 #> effectiveness[3,8] 1.121   240 #> effectiveness[4,8] 1.016   400 #> effectiveness[5,8] 1.241    50 #> effectiveness[6,8] 1.026   120 #> effectiveness[7,8] 1.000     1 #> effectiveness[8,8] 1.000     1 #> hat.par[1,1]       1.007   380 #> hat.par[2,1]       1.003   750 #> hat.par[3,1]       1.013   160 #> hat.par[4,1]       1.001  2700 #> hat.par[5,1]       1.006   400 #> hat.par[6,1]       1.005   430 #> hat.par[7,1]       1.002  2900 #> hat.par[8,1]       1.009   240 #> hat.par[9,1]       1.007   390 #> hat.par[10,1]      1.023    91 #> hat.par[11,1]      1.012   200 #> hat.par[12,1]      1.005   470 #> hat.par[13,1]      1.038    62 #> hat.par[14,1]      1.011   200 #> hat.par[15,1]      1.014   180 #> hat.par[16,1]      1.010   260 #> hat.par[17,1]      1.004   660 #> hat.par[18,1]      1.012   180 #> hat.par[19,1]      1.015   140 #> hat.par[20,1]      1.004   560 #> hat.par[21,1]      1.003   900 #> hat.par[1,2]       1.004  1300 #> hat.par[2,2]       1.002  1800 #> hat.par[3,2]       1.015   140 #> hat.par[4,2]       1.003  1200 #> hat.par[5,2]       1.005   480 #> hat.par[6,2]       1.004   620 #> hat.par[7,2]       1.002  1800 #> hat.par[8,2]       1.010   200 #> hat.par[9,2]       1.010   220 #> hat.par[10,2]      1.002  1900 #> hat.par[11,2]      1.001  3000 #> hat.par[12,2]      1.003  1000 #> hat.par[13,2]      1.005   440 #> hat.par[14,2]      1.008   280 #> hat.par[15,2]      1.005   680 #> hat.par[16,2]      1.006   410 #> hat.par[17,2]      1.005  1000 #> hat.par[18,2]      1.062    42 #> hat.par[19,2]      1.022    96 #> hat.par[20,2]      1.004   640 #> hat.par[21,2]      1.005   400 #> hat.par[9,3]       1.007   300 #> hat.par[10,3]      1.004   530 #> hat.par[12,3]      1.002  1200 #> hat.par[13,3]      1.007   320 #> hat.par[19,3]      1.006   340 #> hat.par[10,4]      1.005   490 #> hat.par[12,4]      1.009   260 #> hat.par[13,4]      1.003   840 #> phi[1]             1.102    30 #> phi[2]             1.012   210 #> phi[3]             1.024   110 #> phi[4]             1.045    82 #> phi[5]             1.076    34 #> phi[6]             1.016   220 #> phi[7]             1.055    45 #> phi[8]             1.008  1500 #> tau                1.067    35 #> totresdev.o        1.001  3000 #> deviance           1.001  3000 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> DIC info (using the rule, pD = var(deviance)/2) #> pD = 93.0 and DIC = 674.1 #> DIC is an estimate of expected predictive error (lower deviance is better). #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $EM_pred #>                      mean        sd        2.5%         25%          50% #> EM.pred[2,1] -1.151298723 0.5127137 -2.11571446 -1.47009489 -1.159722517 #> EM.pred[3,1] -0.886659706 0.4636182 -1.86264718 -1.17012391 -0.868153177 #> EM.pred[4,1] -0.373932628 0.3473482 -1.01947300 -0.59203352 -0.396744220 #> EM.pred[5,1] -0.522542661 0.3647921 -1.27026885 -0.74462124 -0.527583213 #> EM.pred[6,1] -0.187927360 0.3409946 -0.86858781 -0.39917981 -0.184096545 #> EM.pred[7,1] -0.515672618 0.2811553 -1.11016211 -0.68133851 -0.509414983 #> EM.pred[8,1] -0.576707227 0.2622863 -1.15112040 -0.71673319 -0.556226961 #> EM.pred[3,2]  0.259422621 0.5311385 -0.79553100 -0.09166589  0.254803143 #> EM.pred[4,2]  0.784867631 0.5137902 -0.22353928  0.45841904  0.786659019 #> EM.pred[5,2]  0.633554354 0.5448076 -0.45709893  0.27674651  0.638147585 #> EM.pred[6,2]  0.963805667 0.4885538 -0.07102698  0.66042598  0.980024132 #> EM.pred[7,2]  0.633294053 0.4775114 -0.34188531  0.34976534  0.638101960 #> EM.pred[8,2]  0.570970146 0.4854307 -0.38896302  0.26740553  0.586129640 #> EM.pred[4,3]  0.518894218 0.5168285 -0.48248598  0.16294158  0.501228651 #> EM.pred[5,3]  0.368299620 0.5210370 -0.61463395  0.01020033  0.353153359 #> EM.pred[6,3]  0.703096473 0.4842746 -0.38020029  0.43268128  0.731216873 #> EM.pred[7,3]  0.369538159 0.4504237 -0.53601167  0.08576401  0.365243735 #> EM.pred[8,3]  0.302705905 0.4478853 -0.63212914  0.03496151  0.314798467 #> EM.pred[5,4] -0.159470343 0.4276894 -1.17338087 -0.38797988 -0.140769227 #> EM.pred[6,4]  0.187868845 0.4019272 -0.67993726 -0.05135997  0.200671651 #> EM.pred[7,4] -0.153560350 0.3762669 -0.98626059 -0.36345085 -0.132076205 #> EM.pred[8,4] -0.212202835 0.3622258 -1.00520689 -0.41846471 -0.185294786 #> EM.pred[6,5]  0.338045659 0.4217633 -0.50974025  0.06687044  0.327560088 #> EM.pred[7,5]  0.005948058 0.3706323 -0.71037618 -0.23325615  0.008003512 #> EM.pred[8,5] -0.053999986 0.3489046 -0.77326967 -0.27450143 -0.040838366 #> EM.pred[7,6] -0.343338061 0.3247804 -1.01248539 -0.53522583 -0.337727874 #> EM.pred[8,6] -0.396702997 0.3234919 -1.04045902 -0.59620197 -0.379329304 #> EM.pred[8,7] -0.058822852 0.2696988 -0.60680304 -0.22863130 -0.054739466 #>                      75%        97.5%     Rhat n.eff #> EM.pred[2,1] -0.82865005 -0.091819060 1.021369  1300 #> EM.pred[3,1] -0.58911966  0.028153493 1.034655   220 #> EM.pred[4,1] -0.15530899  0.360097900 1.009269   610 #> EM.pred[5,1] -0.28834060  0.225608290 1.166040    20 #> EM.pred[6,1]  0.02658501  0.491707614 1.045868   120 #> EM.pred[7,1] -0.34209596  0.007665486 1.100366    26 #> EM.pred[8,1] -0.41249960 -0.112417624 1.036583    73 #> EM.pred[3,2]  0.62212509  1.269294638 1.008750   790 #> EM.pred[4,2]  1.10362229  1.815684256 1.030340   400 #> EM.pred[5,2]  0.99651919  1.691500191 1.093486    28 #> EM.pred[6,2]  1.28892054  1.898039496 1.017854   130 #> EM.pred[7,2]  0.93058951  1.547885418 1.046256    61 #> EM.pred[8,2]  0.87212634  1.524505574 1.028234   140 #> EM.pred[4,3]  0.84850842  1.505813341 1.028978   210 #> EM.pred[5,3]  0.74113244  1.399930005 1.118173    25 #> EM.pred[6,3]  1.00474851  1.621271785 1.046409    86 #> EM.pred[7,3]  0.64387387  1.283679703 1.055153    52 #> EM.pred[8,3]  0.59042376  1.148813087 1.041274    71 #> EM.pred[5,4]  0.10196303  0.629338085 1.120510    29 #> EM.pred[6,4]  0.43703956  0.949937660 1.017991   500 #> EM.pred[7,4]  0.08056971  0.537539919 1.032642    92 #> EM.pred[8,4]  0.03116435  0.399356470 1.018354   310 #> EM.pred[6,5]  0.60695414  1.184680110 1.059845    50 #> EM.pred[7,5]  0.24343536  0.748305665 1.042355    66 #> EM.pred[8,5]  0.18298224  0.603833037 1.079884    34 #> EM.pred[7,6] -0.13775319  0.280982874 1.025480   130 #> EM.pred[8,6] -0.20158619  0.252307901 1.024356  3000 #> EM.pred[8,7]  0.10898875  0.442379615 1.039617    57 #>  #> $tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.16684955  0.08695102  0.04180378  0.10296874  0.15109810  0.21870954  #>       97.5%        Rhat       n.eff  #>  0.36901019  1.06716647 35.00000000  #>  #> $delta #>                   mean        sd       2.5%        25%        50%         75% #> delta[1,2]  -0.4108438 0.3380698 -1.0642573 -0.6250737 -0.4267303 -0.19747608 #> delta[2,2]  -0.4111760 0.2727124 -0.9104194 -0.5991915 -0.4259964 -0.23455522 #> delta[3,2]  -0.5928279 0.2391978 -1.0932093 -0.7423204 -0.5799364 -0.43489310 #> delta[4,2]  -0.5183529 0.1783381 -0.8814147 -0.6264391 -0.5198834 -0.40279433 #> delta[5,2]  -0.5393444 0.2619497 -1.0867831 -0.6877899 -0.5309497 -0.36439653 #> delta[6,2]  -0.4440569 0.2381721 -0.9067040 -0.5981189 -0.4508904 -0.29003770 #> delta[7,2]  -0.5353811 0.1880450 -0.9514362 -0.6476487 -0.5289725 -0.40687461 #> delta[8,2]  -0.4807058 0.1987590 -0.8694835 -0.6188209 -0.4785630 -0.34823349 #> delta[9,2]  -0.5356874 0.2080430 -0.9649050 -0.6712097 -0.5318989 -0.39354881 #> delta[10,2] -0.3071020 0.3438657 -0.8932947 -0.5570851 -0.3362129 -0.09149541 #> delta[11,2] -0.2331103 0.2827048 -0.7867335 -0.4163653 -0.2268497 -0.04655054 #> delta[12,2] -0.3308467 0.3089716 -0.8788430 -0.5493305 -0.3568021 -0.12508611 #> delta[13,2] -1.2067193 0.4529828 -2.0867222 -1.4748368 -1.2127200 -0.94281371 #> delta[14,2] -0.1124708 0.2234597 -0.5779866 -0.2519719 -0.1076974  0.03496334 #> delta[15,2] -0.1038363 0.2720584 -0.6371048 -0.2810336 -0.1116828  0.07882627 #> delta[16,2] -0.3877464 0.1449756 -0.6643414 -0.4894265 -0.3954018 -0.28664938 #> delta[17,2] -0.4978980 0.3161014 -1.2011705 -0.6847518 -0.4657173 -0.29269020 #> delta[18,2] -0.5710568 0.3255046 -1.2431324 -0.7690379 -0.5729091 -0.36421568 #> delta[19,2] -0.5602555 0.3594146 -1.3501493 -0.7625071 -0.5559364 -0.34266145 #> delta[20,2] -0.4830552 0.2425669 -0.9875160 -0.6309644 -0.4853094 -0.32575937 #> delta[21,2] -0.6402058 0.2277677 -1.1554991 -0.7669922 -0.6170978 -0.48767196 #> delta[9,3]  -0.6285839 0.2019050 -1.0765034 -0.7479367 -0.6044621 -0.49094945 #> delta[10,3] -0.5355076 0.3427714 -1.2543910 -0.7481707 -0.5390890 -0.32920019 #> delta[12,3] -0.4165550 0.3304344 -1.0077867 -0.6325844 -0.4446506 -0.21181798 #> delta[13,3] -0.9484395 0.3885521 -1.7912804 -1.1765513 -0.9339392 -0.68662035 #> delta[19,3] -0.5718306 0.2747548 -1.1880774 -0.7294649 -0.5552135 -0.39005352 #> delta[10,4] -0.5786039 0.2717302 -1.1831116 -0.7326928 -0.5627816 -0.39236359 #> delta[12,4] -0.4348077 0.2532940 -0.9317903 -0.6043521 -0.4437809 -0.27784089 #> delta[13,4] -0.2979885 0.3413242 -1.0036402 -0.5199442 -0.2643466 -0.06811241 #>                   97.5%     Rhat n.eff #> delta[1,2]   0.28218937 1.018067   270 #> delta[2,2]   0.13767607 1.011486   260 #> delta[3,2]  -0.15044633 1.116368    22 #> delta[4,2]  -0.17161444 1.030888    90 #> delta[5,2]  -0.06679820 1.123637    22 #> delta[6,2]   0.03275476 1.113635    22 #> delta[7,2]  -0.18958812 1.042533    55 #> delta[8,2]  -0.09311539 1.109667    23 #> delta[9,2]  -0.13771410 1.094215    27 #> delta[10,2]  0.42404171 1.017729   330 #> delta[11,2]  0.32003407 1.081974    40 #> delta[12,2]  0.30950123 1.010767   440 #> delta[13,2] -0.21498586 1.023361  3000 #> delta[14,2]  0.30738774 1.067443    36 #> delta[15,2]  0.46266790 1.039914   130 #> delta[16,2] -0.10463391 1.024175    93 #> delta[17,2]  0.06462683 1.030210   240 #> delta[18,2]  0.06281581 1.195735    17 #> delta[19,2]  0.16098148 1.231100    15 #> delta[20,2] -0.02224163 1.129298    20 #> delta[21,2] -0.25077525 1.062849    39 #> delta[9,3]  -0.25837706 1.036818    63 #> delta[10,3]  0.19334812 1.296797    12 #> delta[12,3]  0.30922135 1.200162    16 #> delta[13,3] -0.20725575 1.027717   270 #> delta[19,3] -0.08371687 1.099964    26 #> delta[10,4] -0.10797418 1.169723    16 #> delta[12,4]  0.08805550 1.126261    21 #> delta[13,4]  0.29538628 1.057289    63 #>  #> $heter_prior #> [1] 0 1 1 #>  #> $SUCRA #>                mean        sd      2.5%       25%       50%       75%     97.5% #> SUCRA[1] 0.06485714 0.0990476 0.0000000 0.0000000 0.0000000 0.1428571 0.2857143 #> SUCRA[2] 0.90547619 0.1793633 0.2857143 0.8571429 1.0000000 1.0000000 1.0000000 #> SUCRA[3] 0.78542857 0.2292039 0.1428571 0.7142857 0.8571429 1.0000000 1.0000000 #> SUCRA[4] 0.38885714 0.2347505 0.0000000 0.2857143 0.4285714 0.5714286 0.8571429 #> SUCRA[5] 0.53095238 0.2540064 0.0000000 0.2857143 0.5714286 0.7142857 1.0000000 #> SUCRA[6] 0.20442857 0.1848955 0.0000000 0.1428571 0.1428571 0.2857143 0.7142857 #> SUCRA[7] 0.53019048 0.1800530 0.2857143 0.4285714 0.5714286 0.7142857 0.8571429 #> SUCRA[8] 0.58980952 0.1778152 0.2857143 0.4285714 0.5714286 0.7142857 0.8571429 #>              Rhat n.eff #> SUCRA[1] 1.049655    72 #> SUCRA[2] 1.092685    59 #> SUCRA[3] 1.100854    35 #> SUCRA[4] 1.010861   220 #> SUCRA[5] 1.117574    25 #> SUCRA[6] 1.028811   130 #> SUCRA[7] 1.025308    85 #> SUCRA[8] 1.054081    55 #>  #> $effectiveness #>                           mean         sd 2.5% 25% 50%  75% 97.5%     Rhat #> effectiveness[1,1] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #> effectiveness[2,1] 0.656000000 0.47512024    0   0   1 1.00     1 1.009270 #> effectiveness[3,1] 0.255666667 0.43630801    0   0   0 1.00     1 1.010745 #> effectiveness[4,1] 0.011000000 0.10431983    0   0   0 0.00     0 1.021331 #> effectiveness[5,1] 0.044000000 0.20512929    0   0   0 0.00     1 1.228855 #> effectiveness[6,1] 0.002000000 0.04468406    0   0   0 0.00     0 1.134123 #> effectiveness[7,1] 0.007000000 0.08338656    0   0   0 0.00     0 1.190545 #> effectiveness[8,1] 0.024333333 0.15410756    0   0   0 0.00     0 1.178469 #> effectiveness[1,2] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #> effectiveness[2,2] 0.210333333 0.40761330    0   0   0 0.00     1 1.005144 #> effectiveness[3,2] 0.440000000 0.49646970    0   0   0 1.00     1 1.025487 #> effectiveness[4,2] 0.046000000 0.20952001    0   0   0 0.00     1 1.022739 #> effectiveness[5,2] 0.131000000 0.33745660    0   0   0 0.00     1 1.089626 #> effectiveness[6,2] 0.013000000 0.11329289    0   0   0 0.00     0 1.126713 #> effectiveness[7,2] 0.066000000 0.24832349    0   0   0 0.00     1 1.093912 #> effectiveness[8,2] 0.093666667 0.29141299    0   0   0 0.00     1 1.010910 #> effectiveness[1,3] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #> effectiveness[2,3] 0.049333333 0.21659916    0   0   0 0.00     1 1.031908 #> effectiveness[3,3] 0.108666667 0.31127242    0   0   0 0.00     1 1.040122 #> effectiveness[4,3] 0.111666667 0.31500841    0   0   0 0.00     1 1.013659 #> effectiveness[5,3] 0.206333333 0.40474003    0   0   0 0.00     1 1.013653 #> effectiveness[6,3] 0.024333333 0.15410756    0   0   0 0.00     0 1.010085 #> effectiveness[7,3] 0.221666667 0.41543722    0   0   0 0.00     1 1.015733 #> effectiveness[8,3] 0.278000000 0.44808808    0   0   0 1.00     1 1.032904 #> effectiveness[1,4] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #> effectiveness[2,4] 0.032666667 0.17779227    0   0   0 0.00     1 1.071821 #> effectiveness[3,4] 0.067000000 0.25006368    0   0   0 0.00     1 1.013294 #> effectiveness[4,4] 0.128333333 0.33451635    0   0   0 0.00     1 1.001752 #> effectiveness[5,4] 0.164666667 0.37094126    0   0   0 0.00     1 1.018555 #> effectiveness[6,4] 0.037000000 0.18879322    0   0   0 0.00     1 1.026923 #> effectiveness[7,4] 0.250000000 0.43308489    0   0   0 0.25     1 1.001612 #> effectiveness[8,4] 0.320333333 0.46668243    0   0   0 1.00     1 1.000934 #> effectiveness[1,5] 0.012666667 0.11184987    0   0   0 0.00     0 1.109137 #> effectiveness[2,5] 0.023000000 0.14992829    0   0   0 0.00     0 1.083369 #> effectiveness[3,5] 0.051333333 0.22071353    0   0   0 0.00     1 1.015902 #> effectiveness[4,5] 0.211333333 0.40832234    0   0   0 0.00     1 1.001528 #> effectiveness[5,5] 0.177333333 0.38201422    0   0   0 0.00     1 1.029346 #> effectiveness[6,5] 0.081666667 0.27390186    0   0   0 0.00     1 1.000554 #> effectiveness[7,5] 0.269000000 0.44351389    0   0   0 1.00     1 1.011505 #> effectiveness[8,5] 0.173666667 0.37888574    0   0   0 0.00     1 1.018418 #> effectiveness[1,6] 0.078333333 0.26874020    0   0   0 0.00     1 1.070590 #> effectiveness[2,6] 0.016666667 0.12804044    0   0   0 0.00     0 1.099663 #> effectiveness[3,6] 0.040000000 0.19599185    0   0   0 0.00     1 1.071354 #> effectiveness[4,6] 0.251666667 0.43404303    0   0   0 1.00     1 1.011677 #> effectiveness[5,6] 0.156333333 0.36323161    0   0   0 0.00     1 1.010699 #> effectiveness[6,6] 0.198333333 0.39881103    0   0   0 0.00     1 1.019335 #> effectiveness[7,6] 0.164666667 0.37094126    0   0   0 0.00     1 1.002831 #> effectiveness[8,6] 0.094000000 0.29187737    0   0   0 0.00     1 1.101474 #> effectiveness[1,7] 0.259333333 0.43834188    0   0   0 1.00     1 1.019413 #> effectiveness[2,7] 0.004666667 0.06816478    0   0   0 0.00     0 1.184453 #> effectiveness[3,7] 0.023000000 0.14992829    0   0   0 0.00     0 1.170637 #> effectiveness[4,7] 0.160000000 0.36666717    0   0   0 0.00     1 1.033217 #> effectiveness[5,7] 0.087666667 0.28285666    0   0   0 0.00     1 1.031854 #> effectiveness[6,7] 0.427666667 0.49482270    0   0   0 1.00     1 1.017400 #> effectiveness[7,7] 0.021666667 0.14561693    0   0   0 0.00     0 1.062029 #> effectiveness[8,7] 0.016000000 0.12549601    0   0   0 0.00     0 1.173218 #> effectiveness[1,8] 0.649666667 0.47715383    0   0   1 1.00     1 1.024194 #> effectiveness[2,8] 0.007333333 0.08533454    0   0   0 0.00     0 1.097838 #> effectiveness[3,8] 0.014333333 0.11888061    0   0   0 0.00     0 1.121145 #> effectiveness[4,8] 0.080000000 0.27133843    0   0   0 0.00     1 1.016306 #> effectiveness[5,8] 0.032666667 0.17779227    0   0   0 0.00     1 1.241211 #> effectiveness[6,8] 0.216000000 0.41158288    0   0   0 0.00     1 1.026146 #> effectiveness[7,8] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #> effectiveness[8,8] 0.000000000 0.00000000    0   0   0 0.00     0 1.000000 #>                    n.eff #> effectiveness[1,1]     1 #> effectiveness[2,1]   230 #> effectiveness[3,1]   240 #> effectiveness[4,1]  2000 #> effectiveness[5,1]    42 #> effectiveness[6,1]  1500 #> effectiveness[7,1]   280 #> effectiveness[8,1]    94 #> effectiveness[1,2]     1 #> effectiveness[2,2]   540 #> effectiveness[3,2]    83 #> effectiveness[4,2]   480 #> effectiveness[5,2]    50 #> effectiveness[6,2]   260 #> effectiveness[7,2]    80 #> effectiveness[8,2]   510 #> effectiveness[1,3]     1 #> effectiveness[2,3]   320 #> effectiveness[3,3]   130 #> effectiveness[4,3]   360 #> effectiveness[5,3]   220 #> effectiveness[6,3]  2000 #> effectiveness[7,3]   180 #> effectiveness[8,3]    79 #> effectiveness[1,4]     1 #> effectiveness[2,4]   200 #> effectiveness[3,4]   570 #> effectiveness[4,4]  2000 #> effectiveness[5,4]   190 #> effectiveness[6,4]   490 #> effectiveness[7,4]  1800 #> effectiveness[8,4]  3000 #> effectiveness[1,5]   310 #> effectiveness[2,5]   240 #> effectiveness[3,5]   620 #> effectiveness[4,5]  1900 #> effectiveness[5,5]   120 #> effectiveness[6,5]  3000 #> effectiveness[7,5]   210 #> effectiveness[8,5]   180 #> effectiveness[1,6]    92 #> effectiveness[2,6]   270 #> effectiveness[3,6]   170 #> effectiveness[4,6]   220 #> effectiveness[5,6]   340 #> effectiveness[6,6]   160 #> effectiveness[7,6]  1100 #> effectiveness[8,6]    56 #> effectiveness[1,7]   130 #> effectiveness[2,7]   430 #> effectiveness[3,7]   100 #> effectiveness[4,7]   110 #> effectiveness[5,7]   190 #> effectiveness[6,7]   120 #> effectiveness[7,7]   350 #> effectiveness[8,7]   140 #> effectiveness[1,8]    94 #> effectiveness[2,8]   600 #> effectiveness[3,8]   240 #> effectiveness[4,8]   400 #> effectiveness[5,8]    50 #> effectiveness[6,8]   120 #> effectiveness[7,8]     1 #> effectiveness[8,8]     1 #>  #> $abs_risk #>                  mean         sd       2.5%       25%       50%       75% #> abs_risk[1] 0.3916667 0.00000000 0.39166667 0.3916667 0.3916667 0.3916667 #> abs_risk[2] 0.1791936 0.06981948 0.07505596 0.1324666 0.1685171 0.2136569 #> abs_risk[3] 0.2177287 0.06917150 0.09717459 0.1736402 0.2115289 0.2570227 #> abs_risk[4] 0.3119393 0.06272293 0.21012139 0.2665410 0.3028690 0.3489784 #> abs_risk[5] 0.2811854 0.06304957 0.16711946 0.2379183 0.2753665 0.3183832 #> abs_risk[6] 0.3520352 0.06386817 0.23824326 0.3076209 0.3495289 0.3933380 #> abs_risk[7] 0.2792951 0.04017563 0.19982119 0.2510964 0.2789967 0.3055791 #> abs_risk[8] 0.2671125 0.03386768 0.19694517 0.2466694 0.2681848 0.2890589 #>                 97.5%     Rhat n.eff #> abs_risk[1] 0.3916667 1.000000     1 #> abs_risk[2] 0.3620972 1.019440  1400 #> abs_risk[3] 0.3738296 1.034005   200 #> abs_risk[4] 0.4526447 1.011685   390 #> abs_risk[5] 0.4196281 1.282735    13 #> abs_risk[6] 0.4841884 1.062073    67 #> abs_risk[7] 0.3584626 1.179604    16 #> abs_risk[8] 0.3349556 1.059972    40 #>  #> $base_risk #> [1] 0.3916667 #>  #> attr(,\"class\") #> [1] \"run_model\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the node-splitting approach — run_nodesplit","title":"Perform the node-splitting approach — run_nodesplit","text":"Performs Bayesian node-splitting approach Dias et al. (2010)   extended address aggregate binary continuous missing participant   outcome data via pattern-mixture model (Spineli et al., 2021;   Spineli, 2019). model offers local evaluation   plausibility consistency assumption network   (Dias et al., 2010).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the node-splitting approach — run_nodesplit","text":"","code":"run_nodesplit(full, n_chains, n_iter, n_burnin, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the node-splitting approach — run_nodesplit","text":"full object S3 class run_model. See 'Value' run_model. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the node-splitting approach — run_nodesplit","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic   following monitored parameters: direct summary effect measure (according argument   measure defined run_model) split node based   corresponding trials. indirect indirect summary effect measure (according   argument measure defined run_model) split   node based remaining network removing (splitting)   corresponding node. diff inconsistency parameter split node defined   difference direct indirect effect corresponding   split node. tau -trial standard deviation split node,   random-effects model specified. Furthermore, output includes following element: model_assessment data-frame measures model assessment   split node: deviance information criterion,   total residual deviance, number effective parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the node-splitting approach — run_nodesplit","text":"run_nodesplit inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, ref, indic   run_model (now contained argument full).   prevents specifying different Bayesian model considered   run_model. Therefore, user needs first apply   run_model, use run_nodesplit   (see 'Examples'). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_nodesplit   currently performs node-splitting using odds ratio effect measure   base-case effect measure run_model   binary outcome (see also 'Details' run_model). perform Bayesian node-splitting approach,   prepare_nodesplit function called contains   WinBUGS code written Dias et al. (2010) binomial normal   likelihood analyse binary continuous outcome data, respectively.   prepare_nodesplit extended incorporate   pattern-mixture model informative missingness parameters binary   continuous outcome data (see 'Details' run_model). run_nodesplit runs Bayesian node-splitting approach   JAGS. progress simulation appears R console.   number times run_nodesplit used appears R console   text red equals number split nodes (see 'Examples').   split nodes network, execution function   stopped error message printed R console.   model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. run_nodesplit uses   mtc.nodesplit.comparisons   function R-package   gemtc   obtain automatically nodes split based decision rule   van Valkenhoef et al. (2016).   run_nodesplit uses option (1) van Valkenhoef et al. (2016)   parameterise multi-arm trials contain node--split.   contrast,   mtc.nodesplit.comparisons   uses option (3) van Valkenhoef et al. (2016).   Option (1) keeps baseline arm node--split corresponding   multi-arms. Option (3) excludes arms node--split   corresponding multi-arm trials. output run_nodesplit end-user-ready.   nodesplit_plot function inherits output   run_nodesplit S3 object processes provide   end-user-ready output. run_nodesplit can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform the node-splitting approach — run_nodesplit","text":"Dias S, Welton NJ, Caldwell DM, Ades AE. Checking consistency mixed treatment comparison meta-analysis. Stat Med 2010;29(7-8):932--44. doi: 10.1002/sim.3767 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y van Valkenhoef G, Dias S, Ades AE, Welton NJ. Automated generation node-splitting models assessment inconsistency network meta-analysis. Res Synth Methods 2016;7(1):80--93. doi: 10.1002/jrsm.1167","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform the node-splitting approach — run_nodesplit","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_nodesplit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the node-splitting approach — run_nodesplit","text":"","code":"data(\"nma.baker2009\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_baker.rds', package = 'rnmamod'))  # \\donttest{ # Run random-effects node-splitting approach # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_nodesplit(full = res,               n_chains = 3,               n_iter = 1000,               n_burnin = 100,               n_thin = 1) #> JAGS generates initial values for the parameters. #> 1 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 1 until convergence #> 2 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 2 until convergence #> 3 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 3 until convergence #> 4 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 4 until convergence #> 5 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 5 until convergence #> 6 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2534 #>  #> Initializing model #>  #> Updating model for split node 6 until convergence #> 7 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2525 #>  #> Initializing model #>  #> Updating model for split node 7 until convergence #> 8 out of 8 split nodes #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 79 #>    Unobserved stochastic nodes: 141 #>    Total graph size: 2530 #>  #> Initializing model #>  #> Updating model for split node 8 until convergence #> $direct #>   treat1 treat2       mean        sd       2.5%        97.5%     Rhat n.eff #> 1      6      1 -0.4051748 0.2881095 -0.8277626  0.258595609 1.160710    19 #> 2      7      1 -0.7061183 0.2048064 -1.1062416 -0.237698997 1.321727    11 #> 3      8      1 -0.3939128 0.1868743 -0.7637187 -0.022303677 1.147058    20 #> 4      5      4 -0.2541271 0.2292428 -0.7155505  0.166248247 1.008492   250 #> 5      7      4 -0.5127616 0.2354707 -0.9668011 -0.048588736 1.072882    34 #> 6      7      5 -0.4162774 0.2267083 -0.8336832 -0.005106965 1.055457    42 #> 7      8      6 -1.6887592 0.7882375 -3.1482169 -0.085437373 1.060952    50 #> 8      8      7 -0.8245797 0.3383449 -1.4029114 -0.072943391 1.010965   200 #>  #> $indirect #>   treat1 treat2        mean        sd       2.5%       97.5%     Rhat n.eff #> 1      6      1  1.21307590 0.7227542 -0.2949785  2.71312222 1.023088   330 #> 2      7      1 -0.38600154 0.6087917 -1.3687411  1.04931900 1.389008    10 #> 3      8      1 -0.98310736 0.5676435 -2.2247075 -0.13040627 1.020644   140 #> 4      5      4 -0.83814233 0.4776175 -1.8849520  0.06428168 1.059472    49 #> 5      7      4 -0.23434623 0.1650901 -0.5549826  0.09367799 1.051047    45 #> 6      7      5 -0.33552809 0.3022950 -0.9328942  0.25532323 1.100729    26 #> 7      8      6 -0.08077327 0.2073334 -0.4833248  0.32036144 1.033531    76 #> 8      8      7 -0.01011442 0.1964527 -0.4019750  0.33934927 1.008633   620 #>  #> $diff #>   treat1 treat2        mean        sd       2.5%       97.5%     Rhat n.eff #> 1      6      1 -1.61825068 0.7908899 -3.1139536 0.039242813 1.032931    87 #> 2      7      1 -0.32011679 0.6359012 -1.7704306 0.636843943 1.332284    11 #> 3      8      1  0.58919452 0.5194541 -0.2623170 1.722718020 1.011117   780 #> 4      5      4  0.58401518 0.5082450 -0.4347414 1.635375554 1.026496    89 #> 5      7      4 -0.27841539 0.2667468 -0.8189545 0.247394578 1.007975   290 #> 6      7      5 -0.08074927 0.4400514 -0.9174754 0.791481971 1.086301    31 #> 7      8      6 -1.60798596 0.8002984 -3.1029704 0.001399872 1.078260    36 #> 8      8      7 -0.81446533 0.4193489 -1.5318569 0.081104474 1.009178   270 #>  #> $tau #>   treat1 treat2        50%         sd         2.5%     97.5%     Rhat n.eff #> 1      6      1 0.12850034 0.10146983 0.0026951306 0.3644712 1.332412    12 #> 2      7      1 0.09440514 0.10086801 0.0005205508 0.3576373 1.867228     6 #> 3      8      1 0.12137280 0.07845900 0.0150229895 0.2922614 1.042283    81 #> 4      5      4 0.14543350 0.09585586 0.0036653203 0.3996323 1.183107    54 #> 5      7      4 0.09376025 0.09052217 0.0030909292 0.3351126 1.131206    25 #> 6      7      5 0.14199747 0.08247375 0.0382641931 0.3416285 1.032216    73 #> 7      8      6 0.12591997 0.08338546 0.0184798181 0.3351017 1.199441    16 #> 8      8      7 0.14001323 0.09538700 0.0339289532 0.3794030 1.012826   200 #>  #> $model #> [1] \"RE\" #>  #> $model_assessment #>   treat1 treat2 deviance      DIC       pD #> 1      6      1 54.91672 91.76099 36.84427 #> 2      7      1 55.27202 91.58647 36.31445 #> 3      8      1 53.74910 89.14903 35.39993 #> 4      5      4 53.95318 91.98579 38.03261 #> 5      7      4 53.60225 89.80769 36.20544 #> 6      7      5 54.57756 92.68134 38.10378 #> 7      8      6 53.52367 89.48341 35.95974 #> 8      8      7 53.65634 90.56977 36.91344 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> attr(,\"class\") #> [1] \"run_nodesplit\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Performs sensitivity analysis applying pairwise   meta-analysis network meta-analysis series different scenarios   informative missingness parameter.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"","code":"run_sensitivity(   full,   assumption,   mean_scenarios,   var_misspar,   n_chains,   n_iter,   n_burnin,   n_thin,   inits = NULL )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"full object S3 class run_model. See 'Value' run_model. assumption Character string indicating structure informative missingness parameter. Set assumption equal one following two: \"HIE-ARM\", \"IDE-ARM\" (see 'Details'). default argument \"IDE-ARM\". abbreviations \"IDE\", \"HIE\" stand identical, hierarchical, respectively. mean_scenarios vector numeric values mean normal distribution informative missingness parameter (see 'Details'). vector length equal 5 larger. missing--random (MAR) assumption median vector, number informative scenarios appear MAR. default scenarios c(-log(3), -log(2), log(0.9999), log(2), log(3)) c(-2, -1, 0, 1, 2) binary continuous outcome data, respectively. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure (defined run_model) \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\", default argument 0.04. n_chains Integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"list R2jags outputs summaries posterior   distribution, Gelman-Rubin convergence diagnostic   (Gelman et al., 1992) following monitored parameters   random-effects pairwise meta-analysis: EM estimated summary effect measure (according    argument measure defined run_model). EM_LOR estimated summary odd ratio logarithmic scale   measure = \"RR\" measure = \"RD\". tau -trial standard deviation. element    appear case fixed-effect pairwise meta-analysis. random-effects network meta-analysis, EM refer possible   pairwise comparisons interventions network. Furthermore,  tau typically assumed common observed comparisons   network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"model runs JAGS progress simulation   appears R console. number times run_sensitivity   used appears R console text red equals   number scenarios defined square length   vector specified mean_scenarios (see 'Examples').   output run_sensitivity used S3 object   functions package processed provide   end-user-ready output. case pairwise meta-analysis, EM tau   estimated many times number scenarios considered.   case network meta-analysis, possible pairwise comparison   estimated many times number scenarios considered. informative missingness parameter assumed differ across   interventions dataset. Therefore, user can specify   informative missingness parameter arm-specific identical   (assumption = \"IDE-ARM\"), arm-specific   hierarchical (assumption = \"HIE-ARM\") (Spineli et al., 2021). length vector specified argument mean_scenarios   equal 5 (positive odd integer) allow   adequate number scenarios. important number   corresponding MAR assumption middle numbers   vector specified argument mean_scenarios. MAR   assumption constitutes primary analysis.   informative missingness difference means parameter (relevant   raw standardised mean diffenre), MAR assumption equals 0.   informative missingness odds ratio parameter (IMOR; relevant   odds ratio) informative missingness ratio means (IMRoM;   relevant ratio means) parameter, MAR assumption equals 1;   however, parameters analysed logarithmic scale. advise   using value 0.999 rather 1 mean_scenarios   IMOR IMRoM parameters; otherwise, execution function   stopped error 'Invalid parent values' printed   R console. Currently, empirically-based prior distributions   informative missingness parameters. users may refer Spineli (2019),   Mavridis et al. (2015), Turner et al. (2015), White et al. (2008)   determine mean_scenarios informative missingness mechanism   select proper value var_misspar. run_sensitivity inherits arguments data,   measure, model, heter_prior, D, indic,   base_risk, ref run_model   (now contained argument full). prevents specifying   different Bayesian model considered primary analysis   (via run_model)--exception assumption   argument restricted two character strings. Therefore,   user needs first apply run_model, use   run_sensitivity (see 'Examples'). run_sensitivity function also returns arguments   measure, scenarios, D, heter, n_chains,   n_iter, n_burnin, n_thin specified user   inherited relevant functions package. model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. run_sensitivity can used missing participant   outcome data extracted least one trial. Otherwise,   execution function stopped error message   printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Gelman, , Rubin, DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 Spineli LM, Kalyvas C, Papadimitropoulou K. Quantifying robustness primary analysis results: case study missing outcome data pairwise network meta-analysis. Res Synth Methods 2021;12(4):475--90. doi: 10.1002/jrsm.1478 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y Turner NL, Dias S, Ades AE, Welton NJ. Bayesian framework account uncertainty due missing binary outcome data pairwise meta-analysis. Stat Med 2015;34(12):2062--80. doi: 10.1002/sim.6475 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_sensitivity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform sensitivity analysis for missing participant outcome data — run_sensitivity","text":"","code":"data(\"pma.taylor2004\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_taylor.rds', package = 'rnmamod'))  # \\donttest{ # Perform the sensitivity analysis (default arguments) # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_sensitivity(full = res,                 assumption = \"IDE-ARM\",                 var_misspar = 1,                 n_chains = 3,                 n_iter = 1000,                 n_burnin = 100,                 n_thin = 5) #> The default scenarios were considered: c(-2, -1, 0, 1, 2). #> JAGS generates initial values for the parameters. #> 1 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 1 until convergence #> 2 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 2 until convergence #> 3 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 3 until convergence #> 4 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 4 until convergence #> 5 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 5 until convergence #> 6 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 6 until convergence #> 7 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 7 until convergence #> 8 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 8 until convergence #> 9 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 9 until convergence #> 10 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 10 until convergence #> 11 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 11 until convergence #> 12 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 12 until convergence #> 13 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 13 until convergence #> 14 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 14 until convergence #> 15 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 15 until convergence #> 16 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 16 until convergence #> 17 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 17 until convergence #> 18 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 18 until convergence #> 19 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 19 until convergence #> 20 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 20 until convergence #> 21 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 21 until convergence #> 22 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 22 until convergence #> 23 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 23 until convergence #> 24 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 24 until convergence #> 25 out of 25 total scenarios #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 28 #>    Total graph size: 339 #>  #> Initializing model #>  #> Updating model for scenario 25 until convergence #> $EM #>               mean        sd       2.5%        25%          50%           75% #>  [1,] -0.083767263 0.2660897 -0.5871490 -0.2553942 -0.083441407  0.0835259239 #>  [2,] -0.135373191 0.2500720 -0.6039926 -0.2997241 -0.130400483  0.0255714434 #>  [3,] -0.156571209 0.2458816 -0.6217541 -0.3053434 -0.152549025 -0.0099799074 #>  [4,] -0.169645775 0.2557590 -0.7478970 -0.3112498 -0.157961571 -0.0196033369 #>  [5,] -0.184007973 0.2523523 -0.6783044 -0.3389226 -0.178944274 -0.0173934378 #>  [6,] -0.085257996 0.2623760 -0.6162234 -0.2399078 -0.081229272  0.0773023037 #>  [7,] -0.102998272 0.2603404 -0.6041621 -0.2745696 -0.097456761  0.0691334098 #>  [8,] -0.123479467 0.2619242 -0.6422429 -0.2680094 -0.131704385  0.0364263282 #>  [9,] -0.159042253 0.2701517 -0.7842676 -0.2944719 -0.143911473  0.0020470485 #> [10,] -0.144296664 0.2734450 -0.7057398 -0.2877330 -0.152682262 -0.0006615422 #> [11,] -0.017262325 0.2670952 -0.4761185 -0.1811843 -0.016252339  0.1330684670 #> [12,] -0.077194556 0.2630689 -0.5565626 -0.2306088 -0.086969849  0.0873986084 #> [13,] -0.118347223 0.2621878 -0.5905706 -0.2641378 -0.124469188  0.0348279578 #> [14,] -0.117517119 0.2596380 -0.6538857 -0.2713124 -0.112236051  0.0636435951 #> [15,] -0.123291194 0.2321049 -0.6144391 -0.2413051 -0.120469059  0.0155817437 #> [16,] -0.028967765 0.2374524 -0.4569183 -0.1956619 -0.035976472  0.1080036141 #> [17,] -0.033278582 0.2393568 -0.5090799 -0.1876118 -0.032801472  0.1069492587 #> [18,] -0.041006169 0.2704348 -0.6299697 -0.2015224 -0.016276617  0.1369826806 #> [19,] -0.076615331 0.2833405 -0.5950304 -0.2429014 -0.069663141  0.0732077683 #> [20,] -0.105457060 0.2582874 -0.6177022 -0.2685833 -0.092145060  0.0539712222 #> [21,] -0.006523787 0.2441667 -0.4986136 -0.1664051  0.009223824  0.1444706392 #> [22,] -0.003757884 0.2539070 -0.4550146 -0.1902224  0.018879189  0.1619549574 #> [23,] -0.053176183 0.2779952 -0.5171080 -0.2275229 -0.060890400  0.1080152886 #> [24,] -0.064139485 0.2567573 -0.5034721 -0.2413353 -0.070952482  0.0961894542 #> [25,] -0.079532787 0.2514462 -0.6160589 -0.2273448 -0.075447492  0.0723120874 #>           97.5%      Rhat n.eff #>  [1,] 0.4255672 1.0127876   260 #>  [2,] 0.3597753 1.0087629   240 #>  [3,] 0.3043359 1.0015006   600 #>  [4,] 0.2659810 1.0015976   600 #>  [5,] 0.3200412 1.0132486   600 #>  [6,] 0.4453039 1.0033652   410 #>  [7,] 0.3655557 1.0003083   600 #>  [8,] 0.4071642 1.0143294   600 #>  [9,] 0.3318797 1.0181557   160 #> [10,] 0.3573721 1.0148546   380 #> [11,] 0.4818761 1.0095298   190 #> [12,] 0.3887805 0.9988638   600 #> [13,] 0.3770747 0.9990815   600 #> [14,] 0.3543751 1.0067869   600 #> [15,] 0.3113384 1.0084148   340 #> [16,] 0.4391679 1.0026613   480 #> [17,] 0.4274605 1.0047682   320 #> [18,] 0.4420873 1.0022778   600 #> [19,] 0.4648740 1.0080744   410 #> [20,] 0.3802614 1.0024037   600 #> [21,] 0.4456060 1.0160127   240 #> [22,] 0.4939045 1.0021145   550 #> [23,] 0.5273180 1.0024649   500 #> [24,] 0.4284508 1.0123574   320 #> [25,] 0.3724498 1.0076068   490 #>  #> $tau #>            mean        sd        2.5%        25%       50%       75%     97.5% #>  [1,] 0.2140638 0.2113879 0.010503957 0.07453078 0.1534500 0.2789046 0.7232777 #>  [2,] 0.2533746 0.2373810 0.013461874 0.08853451 0.1882525 0.3263761 0.9028062 #>  [3,] 0.2285916 0.2536187 0.008528579 0.08257352 0.1669957 0.3026568 0.8066088 #>  [4,] 0.2407443 0.1984416 0.012930526 0.10170221 0.1832201 0.3424973 0.7224866 #>  [5,] 0.2381770 0.2279607 0.011169537 0.09202832 0.1866613 0.3102785 0.8100560 #>  [6,] 0.2222402 0.1973194 0.009847599 0.07596633 0.1661309 0.3188870 0.7103917 #>  [7,] 0.2190736 0.1980064 0.007348719 0.08283416 0.1665810 0.2923180 0.7053675 #>  [8,] 0.2410638 0.2175789 0.012990213 0.08503178 0.1921475 0.3193150 0.9039997 #>  [9,] 0.2407883 0.2244062 0.007543975 0.08001305 0.1740062 0.3308362 0.8157748 #> [10,] 0.2434443 0.2573367 0.009324447 0.08083154 0.1649251 0.3155368 0.8460848 #> [11,] 0.2231697 0.2306704 0.015722844 0.08161744 0.1596850 0.2764771 0.8799915 #> [12,] 0.2453558 0.2520949 0.008573179 0.09023378 0.1867532 0.3332556 0.7673977 #> [13,] 0.2324852 0.2181758 0.013723350 0.08361607 0.1737863 0.3268266 0.8205538 #> [14,] 0.2250647 0.2092751 0.012082158 0.07774385 0.1655311 0.3080694 0.8512765 #> [15,] 0.2256121 0.2134246 0.017168535 0.07939105 0.1673514 0.2929849 0.7267891 #> [16,] 0.1957288 0.1724942 0.013531851 0.07240843 0.1491581 0.2700078 0.6703720 #> [17,] 0.2194047 0.2207308 0.017404072 0.07924889 0.1653957 0.2867934 0.7003202 #> [18,] 0.2380276 0.2317014 0.006788260 0.08152290 0.1723599 0.3222653 0.8387800 #> [19,] 0.2387290 0.2453093 0.012160294 0.08865527 0.1741473 0.3134959 0.8421131 #> [20,] 0.2490903 0.2597332 0.020681725 0.09492346 0.1820908 0.3026568 0.9741500 #> [21,] 0.2252942 0.1937180 0.021046557 0.08838774 0.1714358 0.3038312 0.7460939 #> [22,] 0.2181207 0.2000347 0.010640094 0.07727056 0.1699001 0.2869206 0.7585545 #> [23,] 0.2528960 0.2395219 0.018176468 0.10275769 0.1882447 0.3233727 0.8577428 #> [24,] 0.2429186 0.2053908 0.017816191 0.10276279 0.1902846 0.3297238 0.7495462 #> [25,] 0.2374162 0.2151635 0.010690259 0.09236478 0.1809893 0.3250247 0.7203618 #>           Rhat n.eff #>  [1,] 1.008330   490 #>  [2,] 1.034649   100 #>  [3,] 1.008304   350 #>  [4,] 1.020929   120 #>  [5,] 1.072795    50 #>  [6,] 1.002455   600 #>  [7,] 1.041891   220 #>  [8,] 1.066613    40 #>  [9,] 1.022801   140 #> [10,] 1.012524   600 #> [11,] 1.009736   180 #> [12,] 1.013631   600 #> [13,] 1.030074   140 #> [14,] 1.031110   150 #> [15,] 1.018159   180 #> [16,] 1.010821   410 #> [17,] 1.011519   260 #> [18,] 1.038130    67 #> [19,] 1.019720   230 #> [20,] 1.036726   100 #> [21,] 1.031107   100 #> [22,] 1.007445   600 #> [23,] 1.024303   480 #> [24,] 1.011560   300 #> [25,] 1.046659    89 #>  #> $measure #> [1] \"SMD\" #>  #> $model #> [1] \"RE\" #>  #> $scenarios #> [1] -2 -1  0  1  2 #>  #> $D #> [1] 0 #>  #> $heter #> [1] -2.9900000  0.2143347  4.0000000 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 5 #>  #> attr(,\"class\") #> [1] \"run_sensitivity\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Performs Bayesian pairwise meta-analysis pairwise   comparison least two trials network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"","code":"run_series_meta(full, n_chains, n_iter, n_burnin, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"full object S3 class run_model. See 'Value' run_model. n_chains Integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic (Gelman et al., 1992)   following monitored parameters: EM summary effect estimate (according argument   measure defined run_model) observed   pairwise comparison least two trials network. tau -trial standard deviation pairwise comparisons   least two trials, random-effects model   specified. single binary vector indicates comparisons EM   one trial.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"run_series_meta inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar run_model   (now contained argument full). prevents specifying   different Bayesian model considered run_model.   Therefore, user needs first apply run_model,   use run_series_meta (see 'Examples'). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_series_meta   currently performs series pairwise meta-analysis using odds ratio   effect measure base-case effect measure   run_model binary outcome (see also 'Details'   run_model). run_series_meta runs series Bayesian pairwise meta-analyses   JAGS. progress simulation appears R console.   number times function used also printed console   (red) equal number  observed pairwise comparisons   network (see 'Examples').   model updated convergence using   autojags function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. output run_series_meta end-user-ready.   series_meta_plot function inherits output   run_series_meta S3 object processes provide   end-user-ready output. run_series_meta can used network interventions.   case two interventions, execution function   stopped error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_series_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a series of Bayesian pairwise meta-analyses — run_series_meta","text":"","code":"data(\"nma.dogliotti2014\")  # Show the first six trials of the dataset (one-trial-per-row format) head(nma.dogliotti2014) #>              study t1 t2 t3   r1   r2 r3  m1  m2 m3   n1   n2 n3 #> 1     BAATAF, 1990  1  7 NA  195  188 NA   0  21 NA  208  212 NA #> 2     SPINAF, 1992  1  7 NA  186  172 NA  56  81 NA  265  260 NA #> 3    SPAF-II, 1994  2  7 NA  480  478 NA  23  38 NA  545  555 NA #> 4      PATAF, 1999  2  7 NA  243   86 NA  54  42 NA  319  131 NA #> 5 ACTIVE (W), 2006  3  7 NA 2825 3089 NA 410 223 NA 3335 3371 NA #> 6       JAST, 2006  1  2 NA  338  313 NA  89  96 NA  445  426 NA  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_dogliotti.rds', package = 'rnmamod'))  # \\donttest{ # Run separate random-effects pairwise meta-analyses # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_series_meta(full = res,                 n_chains = 3,                 n_iter = 1000,                 n_burnin = 100,                 n_thin = 1) #> JAGS generates initial values for the parameters. #> 1 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 20 #>    Unobserved stochastic nodes: 29 #>    Total graph size: 524 #>  #> Initializing model #>  #> 2 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 28 #>    Unobserved stochastic nodes: 37 #>    Total graph size: 691 #>  #> Initializing model #>  #> 3 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 4 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 16 #>    Unobserved stochastic nodes: 25 #>    Total graph size: 439 #>  #> Initializing model #>  #> 5 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 6 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 7 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 8 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 9 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 10 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> 11 out of 11 observed comparisons (and model updating until convergence) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 4 #>    Unobserved stochastic nodes: 13 #>    Total graph size: 187 #>  #> Initializing model #>  #> $EM #>    t1 t2        mean        sd       2.5%         25%         50%        75% #> 1   1  7  1.15235079 0.4173154  0.3384150  0.89806509  1.15877520 1.39413159 #> 2   2  7  0.47798799 0.3944712 -0.2552132  0.21341040  0.46089935 0.73268963 #> 3   3  7  0.62653264 1.0309703 -1.6303228  0.20918545  0.65241723 1.07669405 #> 4   1  2  0.36553553 0.3491212 -0.3061068  0.14482301  0.36472583 0.59008385 #> 5   2  3  0.40581491 1.0037677 -1.6937198 -0.01632159  0.38421585 0.79306531 #> 6   6  7 -0.30672385 1.0967459 -2.8017192 -0.77300286 -0.28044033 0.20929728 #> 7   7  8  0.24854020 1.0144071 -2.0399658 -0.13400743  0.24793136 0.65299523 #> 8   2  8  0.79756416 1.0925159 -1.5595775  0.27594909  0.76747267 1.34352678 #> 9   4  5  0.33832210 1.0309382 -1.8246280 -0.15793893  0.34938002 0.81753648 #> 10  4  7 -0.03234975 1.0191277 -2.2023084 -0.49863186 -0.05171578 0.43504987 #> 11  5  7 -0.35185948 1.0194500 -2.5090194 -0.83853896 -0.36318075 0.08649267 #>       97.5%     Rhat n.eff #> 1  1.977190 1.011984   380 #> 2  1.273613 1.015978   160 #> 3  2.812909 1.002113  3000 #> 4  1.045928 1.018192   180 #> 5  2.647802 1.012703  2200 #> 6  1.911347 1.005589   400 #> 7  2.384398 1.000501  3000 #> 8  3.126049 1.005208   520 #> 9  2.503829 1.004511   500 #> 10 2.071973 1.009145   660 #> 11 1.819058 1.026767    93 #>  #> $tau #>   t1 t2      mean        sd       2.5%       25%       50%       75%    97.5% #> 1  1  7 0.5157228 0.3353686 0.04454063 0.2766017 0.4611808 0.6948008 1.362739 #> 2  2  7 0.5804492 0.2910952 0.10747695 0.3781262 0.5351060 0.7443720 1.279603 #> 4  1  2 0.3022915 0.2914252 0.01090753 0.1015294 0.2282345 0.4018738 1.137898 #>       Rhat n.eff #> 1 1.012057   520 #> 2 1.068582    51 #> 4 1.055955    45 #>  #> $measure #> [1] \"OR\" #>  #> $model #> [1] \"RE\" #>  #> $single #>  [1] 0 0 1 0 1 1 1 1 1 1 1 #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> attr(,\"class\") #> [1] \"run_series_meta\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform the unrelated mean effects model — run_ume","title":"Perform the unrelated mean effects model — run_ume","text":"Performs unrelated mean effects model Dias et al. (2013)   refined (Spineli, 2021) extended address aggregate   binary continuous missing participant outcome data via   pattern-mixture model (Spineli et al. 2021; Spineli, 2019). model   offers global evaluation plausibility consistency   assumption network.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform the unrelated mean effects model — run_ume","text":"","code":"run_ume(full, n_iter, n_burnin, n_chains, n_thin, inits = NULL)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform the unrelated mean effects model — run_ume","text":"full object S3 class run_model. See 'Value' run_model. n_iter Positive integer specifying number Markov chains MCMC sampling; argument jags function R-package R2jags. default argument 10000. n_burnin Positive integer specifying number iterations discard beginning MCMC sampling; argument jags function R-package R2jags. default argument 1000. n_chains Positive integer specifying number chains MCMC sampling; argument jags function R-package R2jags. default argument 2. n_thin Positive integer specifying thinning rate MCMC sampling; argument jags function R-package R2jags. default argument 1. inits list initial values parameters; argument jags function R-package R2jags. default argument NULL, JAGS generates initial values.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform the unrelated mean effects model — run_ume","text":"R2jags output summaries posterior distribution,   Gelman-Rubin convergence diagnostic (Gelman et al., 1992)   following monitored parameters: EM summary effect estimate (according argument   measure defined run_model) pairwise   comparison observed network. dev_o deviance contribution trial-arm based   observed outcome. hat_par fitted outcome trial-arm. tau -trial standard deviation (assumed common across   observed pairwise comparisons) whole network, random-effects   model specified. m_tau -trial standard deviation (assumed common   across observed pairwise comparisons) subset multi-arm   trials, random-effects model specified. output also includes following elements: leverage_o leverage observed outcome trial-arm. sign_dev_o sign difference observed fitted   outcome trial-arm. model_assessment data-frame measures model assessment:   deviance information criterion, number effective parameters, total   residual deviance. jagsfit object S3 class jags   posterior results monitored parameters used   mcmc_diagnostics function. Furthermore, run_ume returns character vector pairwise   comparisons observed network, obs_comp, character   vector comparisons non-baseline interventions observed   multi-arm trials , frail_comp. vectors used  ume_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform the unrelated mean effects model — run_ume","text":"run_ume inherits arguments data,   measure, model, assumption, heter_prior,   mean_misspar, var_misspar, ref   run_model.   prevents specifying different Bayesian model considered   run_model.Therefore, user needs first apply   run_model, use run_ume (see 'Examples'). run_ume function also returns arguments data,   model, measure, assumption, n_chains,   n_iter, n_burnin, n_thin specified user   inherited relevant functions package. Initially, run_ume calls improved_ume function   identify frail comparisons, , comparisons   non-baseline interventions multi-arm trials investigated   two-arm multi-arm trial network (Spineli, 2021). 'original'   model Dias et al. (2013) omits frail comparisons estimation   process. Consequently, number estimated summary effects less   obtained performing separate pairwise meta-analyses   (see run_series_meta). binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, run_ume currently   considers odds ratio effect measure base-case   effect measure run_model binary outcome   (see also 'Details' run_model). run_ume calls prepare_ume function contains   WinBUGS code written Dias et al. (2013) binomial normal   likelihood analyse binary continuous outcome data, respectively.   prepare_ume extended incorporate   pattern-mixture model informative missingness parameters binary   continuous outcome data (see 'Details' run_model).   prepare_ume also refined account   multi-arm trials assigning conditional univariate normal distributions   underlying trial-specific effect size comparisons   baseline arm multi-arm trial (Spineli, 2021). run_ume runs Bayesian unrelated mean effects model JAGS.   progress simulation appears R console. model   updated convergence using autojags   function R-package   R2jags 2 updates   number iterations thinning equal n_iter n_thin,   respectively. output run_ume end-user-ready.   ume_plot function uses output run_ume S3   object processes provide end-user-ready output. run_ume can used network interventions. case   two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform the unrelated mean effects model — run_ume","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Gelman , Rubin DB. Inference iterative simulation using multiple sequences. Stat Sci 1992;7(4):457--72. doi: 10.1214/ss/1177011136 Spineli LM. Revised Framework Evaluate Consistency Assumption Globally Network Interventions. Med Decis Making 2021. doi: 10.1177/0272989X211068005 Spineli LM, Kalyvas C, Papadimitropoulou K. Continuous(ly) missing outcome data network meta-analysis: one-stage pattern-mixture model approach. Stat Methods Med Res 2021;30(4):958--75. doi: 10.1177/0962280220983544 Spineli LM. empirical comparison Bayesian modelling strategies missing binary outcome data network meta-analysis. BMC Med Res Methodol 2019;19(1):86. doi: 10.1186/s12874-019-0731-y","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform the unrelated mean effects model — run_ume","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/run_ume.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform the unrelated mean effects model — run_ume","text":"","code":"data(\"nma.liu2013\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # \\donttest{ # Run random-effects unrelated mean effects model # Note: Ideally, set 'n_iter' to 10000 and 'n_burnin' to 1000 run_ume(full = res,         n_chains = 3,         n_iter = 1000,         n_burnin = 100,         n_thin = 1) #> JAGS generates initial values for the parameters. #> Running the model ... #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 59 #>    Unobserved stochastic nodes: 80 #>    Total graph size: 1291 #>  #> Initializing model #>  #> ... Updating the model until convergence #> $EM #>               mean        sd       2.5%        25%        50%         75% #> EM[2,1]  0.5681292 0.8912131 -1.3203372  0.1176278  0.5741752  1.05236808 #> EM[3,1]  0.1715804 0.7260854 -1.2770450 -0.2670411  0.1369518  0.61971457 #> EM[4,1]  0.7528986 0.5718437 -0.4818844  0.4086407  0.7784579  1.15694168 #> EM[5,1]  1.8711790 0.8303822  0.2082119  1.3467923  1.9049764  2.41737624 #> EM[4,2] -0.4463600 0.9955184 -2.5102008 -1.0099103 -0.4473231  0.16807986 #> EM[6,2] -1.2752044 1.1559992 -3.7018401 -1.9010846 -1.2324002 -0.60932553 #> EM[4,3]  1.1348160 1.0534356 -1.0638717  0.5272045  1.1181986  1.72285976 #> EM[5,4] -0.9007546 1.4615159 -3.9141208 -1.8003520 -0.8424791  0.04003111 #>            97.5%     Rhat n.eff #> EM[2,1] 2.449376 1.016460   230 #> EM[3,1] 1.704471 1.000798  3000 #> EM[4,1] 1.765843 1.025656    89 #> EM[5,1] 3.400341 1.008515   670 #> EM[4,2] 1.499241 1.002813   880 #> EM[6,2] 1.012703 1.001111  3000 #> EM[4,3] 3.324289 1.011875   320 #> EM[5,4] 1.855078 1.049140    51 #>  #> $dev_o #>                    mean         sd         2.5%        25%       50% #> dev.o[1,1]  0.970963571 1.36148728 0.0010111172 0.09386610 0.4460961 #> dev.o[2,1]  0.917329137 1.24604622 0.0013529294 0.09021059 0.4356120 #> dev.o[3,1]  1.103704146 1.52652981 0.0009674224 0.11482700 0.5237140 #> dev.o[4,1]  0.948581438 1.36111445 0.0006594315 0.08673430 0.4237909 #> dev.o[5,1]  1.029419304 1.45898368 0.0008789751 0.10191027 0.4550973 #> dev.o[6,1]  1.081482610 1.40614158 0.0012629258 0.12109131 0.5394558 #> dev.o[7,1]  0.973741432 1.30107663 0.0010777738 0.10930357 0.4571097 #> dev.o[8,1]  0.005346873 0.05799602 0.0000000000 0.00000000 0.0000000 #> dev.o[9,1]  0.915892187 1.39149799 0.0007771566 0.09017262 0.3870513 #> dev.o[10,1] 0.963967309 1.20983803 0.0010663618 0.11133591 0.5019317 #> dev.o[11,1] 0.930890943 1.43253385 0.0007036155 0.08196349 0.4111237 #> dev.o[1,2]  0.987033691 1.46831189 0.0007417604 0.09932607 0.4340799 #> dev.o[2,2]  1.141183759 1.49078481 0.0013080503 0.12572520 0.5608204 #> dev.o[3,2]  1.036591110 1.47268945 0.0008486308 0.10128498 0.4614623 #> dev.o[4,2]  1.068996277 1.53193502 0.0014546151 0.09995544 0.4739631 #> dev.o[5,2]  1.029377530 1.44751665 0.0010388246 0.09963814 0.4474852 #> dev.o[6,2]  1.131849491 1.46403866 0.0009463409 0.14018186 0.5721071 #> dev.o[7,2]  0.760219913 1.05690852 0.0009615915 0.07745369 0.3365414 #> dev.o[8,2]  0.008929242 0.08914316 0.0000000000 0.00000000 0.0000000 #> dev.o[9,2]  1.046793470 1.51913824 0.0010046834 0.10694817 0.4814010 #> dev.o[10,2] 1.391634448 1.73034570 0.0013100903 0.18094357 0.7289814 #> dev.o[11,2] 1.129136652 1.49950939 0.0008867486 0.11456361 0.5257653 #> dev.o[9,3]  1.240317506 1.73336995 0.0014739687 0.11253051 0.5622008 #> dev.o[10,3] 0.856577405 1.21580612 0.0010979446 0.08837889 0.3812082 #> dev.o[11,3] 1.081476645 1.44399550 0.0015586247 0.12736416 0.5266357 #>                      75%      97.5%     Rhat n.eff #> dev.o[1,1]  1.243112e+00 5.04451324 1.008496   720 #> dev.o[2,1]  1.267057e+00 4.23240503 1.000788  3000 #> dev.o[3,1]  1.417584e+00 5.72052298 1.005279   420 #> dev.o[4,1]  1.247564e+00 4.88889763 1.004556   500 #> dev.o[5,1]  1.362659e+00 5.07489728 1.002212  1200 #> dev.o[6,1]  1.513443e+00 5.03583520 1.002605   950 #> dev.o[7,1]  1.344400e+00 4.57147440 1.000841  3000 #> dev.o[8,1]  2.131628e-14 0.01197497 1.009160  3000 #> dev.o[9,1]  1.200898e+00 4.65062103 1.001288  2500 #> dev.o[10,1] 1.363772e+00 4.34039116 1.001153  3000 #> dev.o[11,1] 1.203937e+00 4.86214600 1.002340  1300 #> dev.o[1,2]  1.296360e+00 5.23276194 1.000690  3000 #> dev.o[2,2]  1.565150e+00 5.45205614 1.002187  1300 #> dev.o[3,2]  1.398969e+00 5.14756462 1.001756  1600 #> dev.o[4,2]  1.391335e+00 5.26498302 1.001240  2700 #> dev.o[5,2]  1.364684e+00 5.11306911 1.004512   780 #> dev.o[6,2]  1.594826e+00 5.31235936 1.000821  3000 #> dev.o[7,2]  1.017476e+00 3.77265758 1.001774  3000 #> dev.o[8,2]  3.996803e-14 0.02572654 1.094847  2100 #> dev.o[9,2]  1.384587e+00 5.16795390 1.000561  3000 #> dev.o[10,2] 1.970629e+00 6.05530800 1.000994  3000 #> dev.o[11,2] 1.600020e+00 5.12083972 1.001571  1900 #> dev.o[9,3]  1.660940e+00 5.98406220 1.012072   190 #> dev.o[10,3] 1.117273e+00 4.33290156 1.003818   600 #> dev.o[11,3] 1.456546e+00 5.16437178 1.001546  1900 #>  #> $hat_par #>                    mean         sd       2.5%       25%       50%       75% #> hat.par[1,1]  27.096999 4.55850427 18.5583387 23.916743 26.873529 30.036949 #> hat.par[2,1]   2.765541 1.34879274  0.6375523  1.759074  2.582536  3.594605 #> hat.par[3,1]  10.011834 1.23685570  7.0885398  9.274469 10.247520 10.975565 #> hat.par[4,1]  23.005496 2.41076327 17.9136832 21.440126 23.102573 24.719263 #> hat.par[5,1]   7.857640 2.08740103  4.0470057  6.386321  7.807589  9.275931 #> hat.par[6,1]   3.270669 0.97303099  1.4064387  2.552636  3.280861  4.001999 #> hat.par[7,1]   2.490043 1.21350140  0.6929613  1.586406  2.311003  3.184244 #> hat.par[8,1]  11.997361 0.02844125 11.9940140 12.000000 12.000000 12.000000 #> hat.par[9,1]  15.630130 2.61969205 10.5834493 13.872279 15.600276 17.404821 #> hat.par[10,1]  3.363480 1.25464639  1.3309647  2.422807  3.221254  4.141476 #> hat.par[11,1]  4.653607 1.62605731  1.9485598  3.510408  4.495649  5.664815 #> hat.par[1,2]  37.860969 5.03290337 27.8663080 34.394716 37.894111 41.193323 #> hat.par[2,2]   4.196059 1.65043438  1.5557809  2.986912  3.977811  5.178795 #> hat.par[3,2]   8.063744 1.38766291  4.9521273  7.193159  8.206144  9.105972 #> hat.par[4,2]  16.181946 2.53852625 11.1822900 14.482939 16.201885 17.956516 #> hat.par[5,2]   3.031828 1.51187283  0.6683662  1.922380  2.792466  3.964113 #> hat.par[6,2]   3.683265 0.94485714  1.6524792  3.031520  3.771094  4.393343 #> hat.par[7,2]   2.483608 1.16236154  0.6548759  1.622135  2.341155  3.186961 #> hat.par[8,2]  14.995601 0.04355646 14.9871422 15.000000 15.000000 15.000000 #> hat.par[9,2]  16.693908 2.84060697 11.2641435 14.753277 16.697490 18.639685 #> hat.par[10,2]  3.220690 1.31717975  0.9450829  2.245069  3.123782  4.103729 #> hat.par[11,2]  6.966097 1.55324640  4.0422347  5.844454  7.006330  8.067815 #> hat.par[9,3]  21.574689 2.39057933 16.5671824 20.045627 21.803618 23.253723 #> hat.par[10,3]  8.439279 1.34688779  5.5589419  7.585440  8.540986  9.433256 #> hat.par[11,3] 11.477103 1.70199398  7.7186714 10.406705 11.693299 12.718340 #>                   97.5%     Rhat n.eff #> hat.par[1,1]  36.785851 1.023498    92 #> hat.par[2,1]   5.672698 1.002734   920 #> hat.par[3,1]  11.771486 1.030281    89 #> hat.par[4,1]  27.429474 1.004553   760 #> hat.par[5,1]  12.099977 1.003862  3000 #> hat.par[6,1]   5.061812 1.011858   200 #> hat.par[7,1]   5.358772 1.005199  1700 #> hat.par[8,1]  12.000000 1.009160  3000 #> hat.par[9,1]  20.824272 1.007680   650 #> hat.par[10,1]  6.211958 1.000843  3000 #> hat.par[11,1]  8.115920 1.010288   490 #> hat.par[1,2]  47.802737 1.011347   190 #> hat.par[2,2]   7.952980 1.001774  1600 #> hat.par[3,2]  10.220351 1.009042   240 #> hat.par[4,2]  21.042772 1.001505  2000 #> hat.par[5,2]   6.457335 1.001532  3000 #> hat.par[6,2]   5.299355 1.001920  1400 #> hat.par[7,2]   5.099728 1.003425   690 #> hat.par[8,2]  15.000000 1.094847  2100 #> hat.par[9,2]  22.157005 1.011682   180 #> hat.par[10,2]  5.955262 1.005615   540 #> hat.par[11,2]  9.953841 1.002109  1400 #> hat.par[9,3]  25.873896 1.019505   140 #> hat.par[10,3] 10.751522 1.008300   580 #> hat.par[11,3] 14.229942 1.002993  1600 #>  #> $leverage_o #>  [1]  0.970527112  0.650903920  1.103619855  0.948576767  1.025028874 #>  [6]  0.714721185  0.857645223 -0.006581762  0.867552196  0.795867508 #> [11]  0.797514917  0.986299246  0.959282822  1.034711926  1.063899715 #> [16]  1.028969766  0.812252574  0.637358474  0.003704423  0.990083556 #> [21]  0.673802956  0.794514909  0.892164888  0.726783188  1.012716919 #>  #> $sign_dev_o #>  [1] -1 -1 -1 -1  1  1  1 -1 -1  1 -1  1  1 -1 -1 -1 -1 -1 -1 -1 -1  1  1  1 -1 #>  #> $tau #>         mean           sd         2.5%          25%          50%          75%  #>   0.70391650   0.43155849   0.05070578   0.38544236   0.67683734   0.96698359  #>        97.5%         Rhat        n.eff  #>   1.67475714   1.01288096 160.00000000  #>  #> $m_tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.80404912  0.53249428  0.05171884  0.38760970  0.71620686  1.13182895  #>       97.5%        Rhat       n.eff  #>  2.02388401  1.06189177 61.00000000  #>  #> $model_assessment #>        DIC       pD      dev #> 1 44.09336 20.34192 23.75144 #>  #> $obs_comp #> [1] \"2vs1\" \"3vs1\" \"4vs1\" \"5vs1\" \"4vs2\" \"6vs2\" \"4vs3\" \"5vs4\" #>  #> $jagsfit #> Inference for Bugs model at \"15\", fit using jags, #>  3 chains, each with 1000 iterations (first 0 discarded) #>  n.sims = 3000 iterations saved #>               mu.vect sd.vect   2.5%    25%    50%    75%  97.5%  Rhat n.eff #> EM[2,1]         0.568   0.891 -1.320  0.118  0.574  1.052  2.449 1.016   230 #> EM[3,1]         0.172   0.726 -1.277 -0.267  0.137  0.620  1.704 1.001  3000 #> EM[4,1]         0.753   0.572 -0.482  0.409  0.778  1.157  1.766 1.026    89 #> EM[5,1]         1.871   0.830  0.208  1.347  1.905  2.417  3.400 1.009   670 #> EM[4,2]        -0.446   0.996 -2.510 -1.010 -0.447  0.168  1.499 1.003   880 #> EM[6,2]        -1.275   1.156 -3.702 -1.901 -1.232 -0.609  1.013 1.001  3000 #> EM[4,3]         1.135   1.053 -1.064  0.527  1.118  1.723  3.324 1.012   320 #> EM[5,4]        -0.901   1.462 -3.914 -1.800 -0.842  0.040  1.855 1.049    51 #> dev.o[1,1]      0.971   1.361  0.001  0.094  0.446  1.243  5.045 1.008   720 #> dev.o[2,1]      0.917   1.246  0.001  0.090  0.436  1.267  4.232 1.001  3000 #> dev.o[3,1]      1.104   1.527  0.001  0.115  0.524  1.418  5.721 1.005   420 #> dev.o[4,1]      0.949   1.361  0.001  0.087  0.424  1.248  4.889 1.005   500 #> dev.o[5,1]      1.029   1.459  0.001  0.102  0.455  1.363  5.075 1.002  1200 #> dev.o[6,1]      1.081   1.406  0.001  0.121  0.539  1.513  5.036 1.003   950 #> dev.o[7,1]      0.974   1.301  0.001  0.109  0.457  1.344  4.571 1.001  3000 #> dev.o[8,1]      0.005   0.058  0.000  0.000  0.000  0.000  0.012 1.009  3000 #> dev.o[9,1]      0.916   1.391  0.001  0.090  0.387  1.201  4.651 1.001  2500 #> dev.o[10,1]     0.964   1.210  0.001  0.111  0.502  1.364  4.340 1.001  3000 #> dev.o[11,1]     0.931   1.433  0.001  0.082  0.411  1.204  4.862 1.002  1300 #> dev.o[1,2]      0.987   1.468  0.001  0.099  0.434  1.296  5.233 1.001  3000 #> dev.o[2,2]      1.141   1.491  0.001  0.126  0.561  1.565  5.452 1.002  1300 #> dev.o[3,2]      1.037   1.473  0.001  0.101  0.461  1.399  5.148 1.002  1600 #> dev.o[4,2]      1.069   1.532  0.001  0.100  0.474  1.391  5.265 1.001  2700 #> dev.o[5,2]      1.029   1.448  0.001  0.100  0.447  1.365  5.113 1.005   780 #> dev.o[6,2]      1.132   1.464  0.001  0.140  0.572  1.595  5.312 1.001  3000 #> dev.o[7,2]      0.760   1.057  0.001  0.077  0.337  1.017  3.773 1.002  3000 #> dev.o[8,2]      0.009   0.089  0.000  0.000  0.000  0.000  0.026 1.095  2100 #> dev.o[9,2]      1.047   1.519  0.001  0.107  0.481  1.385  5.168 1.001  3000 #> dev.o[10,2]     1.392   1.730  0.001  0.181  0.729  1.971  6.055 1.001  3000 #> dev.o[11,2]     1.129   1.500  0.001  0.115  0.526  1.600  5.121 1.002  1900 #> dev.o[9,3]      1.240   1.733  0.001  0.113  0.562  1.661  5.984 1.012   190 #> dev.o[10,3]     0.857   1.216  0.001  0.088  0.381  1.117  4.333 1.004   600 #> dev.o[11,3]     1.081   1.444  0.002  0.127  0.527  1.457  5.164 1.002  1900 #> hat.par[1,1]   27.097   4.559 18.558 23.917 26.874 30.037 36.786 1.023    92 #> hat.par[2,1]    2.766   1.349  0.638  1.759  2.583  3.595  5.673 1.003   920 #> hat.par[3,1]   10.012   1.237  7.089  9.274 10.248 10.976 11.771 1.030    89 #> hat.par[4,1]   23.005   2.411 17.914 21.440 23.103 24.719 27.429 1.005   760 #> hat.par[5,1]    7.858   2.087  4.047  6.386  7.808  9.276 12.100 1.004  3000 #> hat.par[6,1]    3.271   0.973  1.406  2.553  3.281  4.002  5.062 1.012   200 #> hat.par[7,1]    2.490   1.214  0.693  1.586  2.311  3.184  5.359 1.005  1700 #> hat.par[8,1]   11.997   0.028 11.994 12.000 12.000 12.000 12.000 1.009  3000 #> hat.par[9,1]   15.630   2.620 10.583 13.872 15.600 17.405 20.824 1.008   650 #> hat.par[10,1]   3.363   1.255  1.331  2.423  3.221  4.141  6.212 1.001  3000 #> hat.par[11,1]   4.654   1.626  1.949  3.510  4.496  5.665  8.116 1.010   490 #> hat.par[1,2]   37.861   5.033 27.866 34.395 37.894 41.193 47.803 1.011   190 #> hat.par[2,2]    4.196   1.650  1.556  2.987  3.978  5.179  7.953 1.002  1600 #> hat.par[3,2]    8.064   1.388  4.952  7.193  8.206  9.106 10.220 1.009   240 #> hat.par[4,2]   16.182   2.539 11.182 14.483 16.202 17.957 21.043 1.002  2000 #> hat.par[5,2]    3.032   1.512  0.668  1.922  2.792  3.964  6.457 1.002  3000 #> hat.par[6,2]    3.683   0.945  1.652  3.032  3.771  4.393  5.299 1.002  1400 #> hat.par[7,2]    2.484   1.162  0.655  1.622  2.341  3.187  5.100 1.003   690 #> hat.par[8,2]   14.996   0.044 14.987 15.000 15.000 15.000 15.000 1.095  2100 #> hat.par[9,2]   16.694   2.841 11.264 14.753 16.697 18.640 22.157 1.012   180 #> hat.par[10,2]   3.221   1.317  0.945  2.245  3.124  4.104  5.955 1.006   540 #> hat.par[11,2]   6.966   1.553  4.042  5.844  7.006  8.068  9.954 1.002  1400 #> hat.par[9,3]   21.575   2.391 16.567 20.046 21.804 23.254 25.874 1.020   140 #> hat.par[10,3]   8.439   1.347  5.559  7.585  8.541  9.433 10.752 1.008   580 #> hat.par[11,3]  11.477   1.702  7.719 10.407 11.693 12.718 14.230 1.003  1600 #> m.tau           0.804   0.532  0.052  0.388  0.716  1.132  2.024 1.062    61 #> resdev.o[1]     1.958   2.013  0.048  0.576  1.313  2.656  7.481 1.001  3000 #> resdev.o[2]     2.059   1.873  0.051  0.673  1.592  2.877  7.008 1.001  2600 #> resdev.o[3]     2.140   2.115  0.060  0.636  1.510  2.920  8.152 1.009   290 #> resdev.o[4]     2.018   2.105  0.052  0.562  1.377  2.731  7.869 1.007   290 #> resdev.o[5]     2.059   2.069  0.047  0.558  1.399  2.866  7.429 1.005   400 #> resdev.o[6]     2.213   1.847  0.101  0.876  1.817  2.992  7.024 1.005   410 #> resdev.o[7]     1.734   1.666  0.053  0.545  1.241  2.466  6.268 1.001  3000 #> resdev.o[8]     0.014   0.132  0.000  0.000  0.000  0.000  0.048 1.042  3000 #> resdev.o[9]     3.203   2.628  0.213  1.276  2.499  4.476  9.810 1.006   360 #> resdev.o[10]    3.212   2.290  0.298  1.533  2.721  4.382  9.193 1.002  1100 #> resdev.o[11]    3.142   2.447  0.246  1.376  2.568  4.189  9.446 1.006   460 #> tau             0.704   0.432  0.051  0.385  0.677  0.967  1.675 1.013   160 #> totresdev.o    23.751   6.812 12.479 18.847 23.020 28.029 38.904 1.003   710 #>  #> For each parameter, n.eff is a crude measure of effective sample size, #> and Rhat is the potential scale reduction factor (at convergence, Rhat=1). #>  #> $data #>                study t1 t2 t3 r1 r2 r3 m1 m2 m3  n1  n2 n3 #> 356    Richard, 2012  1  3  4 15 16 23  6  8  4  39  42 34 #> 357     Barone, 2010  1  2 NA 27 38 NA 19 20 NA 152 144 NA #> 358 Weinbtraub, 2010  1  3 NA  2  5 NA  6  6 NA  27  28 NA #> 359      Menza, 2009  1  4  5  4  2  9  6  7  5  17  18 17 #> 360      Devos, 2008  1  4  5  4  8 11  0  2  1  16  15 17 #> 361   Antonini, 2006  4  5 NA 10  8 NA  4  4 NA  16  15 NA #> 362     Barone, 2006  2  4 NA 23 16 NA  1  7 NA  33  34 NA #> 363  Rektorova, 2003  2  6 NA  8  3 NA  3  2 NA  22  19 NA #> 364  Leentjens, 2003  1  4 NA  4  3 NA  0  0 NA   6   6 NA #> 365    Wermuth, 1998  1  4 NA  3  2 NA  2  5 NA  19  18 NA #> 366      Rabey, 1996  4  5 NA 12 15 NA  8 12 NA  20  27 NA #>  #> $model #> [1] \"RE\" #>  #> $measure #> [1] \"OR\" #>  #> $assumption #> [1] \"IDE-ARM\" #>  #> $phi #> NULL #>  #> $n_chains #> [1] 3 #>  #> $n_iter #> [1] 1000 #>  #> $n_burnin #> [1] 100 #>  #> $n_thin #> [1] 1 #>  #> $m_tau #>        mean          sd        2.5%         25%         50%         75%  #>  0.80404912  0.53249428  0.05171884  0.38760970  0.71620686  1.13182895  #>       97.5%        Rhat       n.eff  #>  2.02388401  1.06189177 61.00000000  #>  #> $frail_comp #> [1] \"4vs3\" #>  #> attr(,\"class\") #> [1] \"run_ume\" # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot of SUCRA values — scatterplot_sucra","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Creates scatterplot SUCRA values   network meta-analysis network meta-regression specified level   value investigated covariate.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"","code":"scatterplot_sucra(full, reg, cov_value, drug_names)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"full object S3 class run_model. See 'Value' run_model. reg object S3 class run_metareg. See 'Value' run_metareg. cov_value list two elements following order: 1) number covariate value interest (see 'Arguments' run_metareg), 2) character indicate name covariate. See also 'Details'. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"scatterplot SUCRA values network meta-analysis   (y-axis) SUCRA values network meta-regression   (x-axis) specified level value investigated covariate.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"names interventions appear point plot.   Three coloured rectangles drawn scatterplot: red rectangle   SUCRA values 50%, yellow rectangular SUCRA values   50% 80%, green rectangle SUCRA values 80%.   Interventions falling green area considered highest   ranked interventions, whilst interventions falling red area   considered lowest ranked interventions. covariate binary, specify second element   cov_value name level scatterplot   created. scatterplot_sucra integrated metareg_plot. scatterplot_sucra can used network interventions.   Otherwise, execution function stopped error   message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Salanti G, Ades AE, Ioannidis JP. Graphical methods numerical summaries presenting results multiple-treatment meta-analysis: overview tutorial. J Clin Epidemiol 2011;64(2):163--71. doi: 10.1016/j.jclinepi.2010.03.016","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplot_sucra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scatterplot of SUCRA values — scatterplot_sucra","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviance scatterplots — scatterplots_dev","title":"Deviance scatterplots — scatterplots_dev","text":"Illustrates posterior mean deviance contribution   individual data points unrelated mean effects model (via   run_ume) posterior mean deviance contribution   consistency model (via run_model).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviance scatterplots — scatterplots_dev","text":"","code":"scatterplots_dev(full, ume, colour)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviance scatterplots — scatterplots_dev","text":"full numeric vector posterior mean deviance obtained using consistency model (see 'Value' run_model). ume numeric vector posterior mean deviance obtained using unrelated mean effects model (see 'Value' run_ume). colour string define colour points plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviance scatterplots — scatterplots_dev","text":"scatterplot posterior mean deviance contribution   individual data points unrelated mean effects model   consistency model. data point corresponds trial-arm   indicated pair numbers. first number refers position   trial dataset, second number refers   corresponding trial-arm (see 'Arguments' 'Value'  data_preparation).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deviance scatterplots — scatterplots_dev","text":"scatterplots_dev integrated ume_plot   function compare models regarding posterior mean deviance.   scatterplot also considered Dias et al. (2013).   majority data points scattered across diagonal line,   may conclude compared models good agreement. Data points   systematically scattered diagonal line may   contribute poor fit unrelated mean effects model   consistency model, respectively.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deviance scatterplots — scatterplots_dev","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013a;33(5):641--56. doi: 10.1177/0272989X12455847","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/scatterplots_dev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviance scatterplots — scatterplots_dev","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Facilitates comparison consistency model   (via run_model) series pairwise meta-analyses   (via run_series_meta) regarding estimated summary effect   sizes -trial standard deviation comparisons   least two trials.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"","code":"series_meta_plot(full, meta, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"full object S3 class run_model. See 'Value' run_model. meta object S3 class run_series_meta. See 'Value' run_series_meta. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"R console prints data-frame estimated summary effect   sizes -trial standard deviation comparisons   models. comparisons least two trials. case   fixed-effect model, data-frame printed without results   -trial standard deviation. Furthermore, series_meta_plot exports data-frame 'xlsx'   file working  directory user.  series_meta_plot returns panel two forest plots: (1)   forest plot posterior median 95% credible interval summary   effect size observed comparisons network meta-analysis   corresponding pairwise meta-analyses, (2) forest plot   posterior median 95% credible interval -trial standard   deviation observed comparisons. estimated median 95%   credible intervals -trial standard deviation network   meta-analysis appear forest plot solid two dotted parallel   blue lines, respectively. different levels heterogeneity appear   green, yellow, orange, red rectangles indicate low, reasonable,   fairly high, fairly extreme heterogeneity, respectively, following   classification Spiegelhalter et al. (2004).   fixed-effect model fitted, forest plot   estimated summary effect sizes shown.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"series_meta_plot can used network   interventions. Otherwise, execution function stopped   error message printed R console. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, series_meta_plot   currently presents results odds ratio   base-case effect measure run_model binary   outcome (see also 'Details' run_model). user can detect inconsistencies estimated   effects compared models explore gains precision   stemming applying network meta-analysis. Furthermore, user can   investigate plausibility common -trial heterogeneity   assumption typically considered network meta-analysis.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Spiegelhalter DJ, Abrams KR, Myles JP. Bayesian approaches clinical trials health-care evaluation. John Wiley Sons, Chichester, 2004.","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/series_meta_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for a series of pairwise meta-analyses — series_meta_plot","text":"","code":"data(\"nma.dogliotti2014\")  # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_dogliotti.rds', package = 'rnmamod'))  # Read results from 'run_series_meta' (using the default arguments) meta <- readRDS(system.file('extdata/meta_dogliotti.rds',                 package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"aspirin\", \"aspirin plus clopidogrel\",                   \"dabigatran 110 mg\", \"dabigatran 150 mg\", \"rivaroxaban\",                   \"vitamin K antagonist\", \"apixaban\")  # Plot the results from both models series_meta_plot(full = res,                  meta = meta,                  drug_names = interv_names) #> $tabulated_results #>  #>  #> Table: Estimation for each observed comparison #>  #> |Comparison                      |Median NMA |SD NMA |95% CrI NMA   |Median MA |SD MA |95% CrI MA    |Median tau |SD tau |95% CrI tau  | #> |:-------------------------------|:----------|:------|:-------------|:---------|:-----|:-------------|:----------|:------|:------------| #> |aspirin vs placebo              |1.53       |0.27   |(0.92, 2.78)  |1.43      |0.37  |(0.66, 2.97)  |0.24       |0.28   |(0.01, 1.08) | #> |vitamin K antagonist vs placebo |2.72       |0.30   |(1.54, 5.19)* |3.00      |0.42  |(1.28, 6.96)* |0.45       |0.34   |(0.03, 1.34) | #> |vitamin K antagonist vs aspirin |1.77       |0.23   |(1.13, 2.84)* |1.60      |0.39  |(0.75, 3.56)  |0.51       |0.30   |(0.10, 1.29) | #>  #> $forest_plots  #>"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Applies pattern-mixture model specific assumption   informative missingness parameter trial-arms   continuous missing participant outcome data uses Taylor   series obtain effect size standard error trial   (Mavridis et al., 2015).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"","code":"taylor_continuous(data, measure, mean_value, var_value, rho)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"columns data-frame argument data refer   following ordered elements continuous outcome:","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"data data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. See 'Format' specification columns. measure Character string indicating effect measure values \"MD\", \"SMD\", \"ROM\" mean difference, standardised mean difference, ratio means, respectively. mean_value numeric value mean normal distribution informative missingness parameter. value considered trial-arms dataset. default argument 0 corresponds missing--random assumption. informative missingness ratio means, mean value defined logarithmic scale. var_value positive non-zero number variance normal distribution informative missingness parameter. measure \"MD\", \"SMD\" default argument 1; measure \"ROM\" default argument 0.04. value considered trial-arms dataset. rho numeric value interval [-1, 1] indicates correlation coefficient two informative missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"data-frame additionally includes following elements: EM effect size adjusted missing participants   obtained using Taylor series. se.EM standard error effect size adjusted missing   participants obtained using Taylor series.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"taylor_continuous function integrated   unrelated_effects_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_continuous.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pattern-mixture model with Taylor series for continuous outcome — taylor_continuous","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":null,"dir":"Reference","previous_headings":"","what":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"Applies pattern-mixture model specific assumption   informative missingness odds ratio trial-arms   binary missing participant outcome data uses Taylor   series obtain odds ratio (logarithmic scale) standard   error trial (White et al., 2008).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"","code":"taylor_imor(data, mean_value, var_value, rho)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"columns data-frame argument data refer   following ordered elements binary outcome:","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"data data-frame long arm-based format. Two-arm trials occupy one row data-frame. Multi-arm trials occupy many rows number possible comparisons among interventions. See 'Format' specification columns. mean_value numeric value mean normal distribution informative missingness odds ratio logarithmic scale. value considered trial-arms dataset. default argument 0 corresponds missing--random assumption. var_value positive non-zero number variance normal distribution informative missingness odds ratio logarithmic scale. default argument 1. rho numeric value interval [-1, 1] indicates correlation coefficient two missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"data-frame additionally includes following elements: EM odds ratio logarithmic scale (log ) adjusted   missing participants obtained using Taylor series. se.EM standard error log adjusted missing   participants obtained using Taylor series.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"taylor_imor function integrated   unrelated_effects_plot function.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/taylor_imor.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pattern-mixture model with Taylor series for a binary outcome — taylor_imor","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Rating the quality of transitivity evaluation — trans_quality","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Classifies systematic review multiple interventions   low, unclear high quality regarding transitivity evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rating the quality of transitivity evaluation — trans_quality","text":"","code":"trans_quality(   plan_protocol,   plan_methods,   report_results,   discuss_trans,   proper_table )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rating the quality of transitivity evaluation — trans_quality","text":"plan_protocol Character string indicates systematic review planned protocol assess transitivity assumption. following values can considered: \"\", \"\", \"protocol\", \"direct methods\", \"indirect methods\". \"\" implies least one direct one indirect method used. plan_methods Character string indicates whether systematic review described methods section strategy assess transitivity assumption. following values can considered: \"Yes\", \"\". report_results Character string indicates whether systematic review reported results section transitivity evaluation strategy employed. following values can considered: \"\", \"\", \"direct methods\", \"indirect methods\". \"\" implies least one direct one indirect method used. discuss_trans Character string indicates whether systematic review discussed transitivity assumption model parameters considered. following values can considered: \"\", \"\", \"treatment effects\", \"parameter\", \"NMA conducted\". \"\" implies treatment effect model parameters considered. proper_table Character string indicates whether systematic review reported proper table characteristics. following values can considered: \"\", \"table\", \"Yes\".","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rating the quality of transitivity evaluation — trans_quality","text":"character value \"Low\", \"Unclear\",  \"High\" indicate low, unclear, high-quality transitivity   evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rating the quality of transitivity evaluation — trans_quality","text":"systematic review \"Low\" quality transitivity   evaluation provide protocol, describe evaluation   strategy methods section, report evaluation results,   discusses transitivity evaluation provide table   characteristics. contrary, systematic review \"High\"   quality transitivity evaluation provides evaluation plan   protocol (including least one direct method), describes evaluation   strategy methods section (including least one direct method),   reports evaluation results results section, discusses   transitivity evaluation considering least one model parameter   (NMA conducted), provides proper table   characteristics. Otherwise, systematic review judged   \"Unclear\" quality transitivity evaluation.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Spineli LM, Kalyvas C, Seide SE, Papadimitropoulou K. Low awareness transitivity assumption complex networks interventions: empirical evidence 356 network meta-analyses. 2022 submitted","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/trans_quality.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rating the quality of transitivity evaluation — trans_quality","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for the unrelated mean effects model — ume_plot","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"ume_plot hosts toolkit functions facilitates   comparison consistency model (via run_model)   unrelated mean effects model (via run_ume) regarding   posterior summaries summary effect size pairwise comparisons   observed network, -trial standard deviation (tau)   model assessment parameters.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"","code":"ume_plot(full, ume, drug_names, save_xls)"},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"full object S3 class run_model. See 'Value' run_model. ume object S3 class run_ume. See 'Value' run_ume. drug_names vector labels name interventions order appear argument data run_model. drug_names defined, order interventions appear data used, instead. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"ume_plot prints R console message   parsimonious model () based DIC (red text). , function   returns following list elements: table_effect_size posterior median, posterior standard   deviation, 95% credible interval summary effect size   pairwise comparison observed network consistency model   unrelated mean effects model. table_model_assessment DIC, number effective   parameters, total residual deviance consistency model   unrelated mean effects model (Spiegelhalter et al., 2002). table_tau posterior median 95% credible interval   tau consistency model unrelated mean effects   model. fixed-effect model performed, ume_plot   return element. scatterplots scatterplot Bland-Altman plot   posterior mean deviance contribution individual data points   consistency model unrelated mean effects model. See 'Details'   'Value' scatterplots_dev   bland_altman_plot, respectively. levarage_plots leverage plot consistency model   unrelated mean effects model, separately. See 'Details'   'Value' leverage_plot. intervalplots panel interval plots summary effect   size consistency model unrelated mean effects model   pairwise comparison observed network. See 'Details'   'Value' intervalplot_panel_ume.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"deviance information criterion (DIC) consistency model   compared DIC unrelated mean effects model   (Dias et al., 2013). difference DIC exceeds 5, unrelated mean   effects model preferred. difference DIC less -5,   consistency preferred; otherwise, little choose   compared models. binary outcome, measure \"RR\" (relative risk) \"RD\"   (risk difference) run_model, ume_plot currently   presents results network meta-analysis unrelated mean effects   odds ratio base-case effect measure   run_model binary outcome (see also 'Details'   run_model). Furthermore, ume_plot exports table_effect_size   table_model_assessment separate 'xlsx' files (via   write_xlsx function) working   directory user. ume_plot can used network interventions.   case two interventions, execution function stopped   error message printed R console.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"Dias S, Welton NJ, Sutton AJ, Caldwell DM, Lu G, Ades AE. Evidence synthesis decision making 4: inconsistency networks evidence based randomized controlled trials. Med Decis Making 2013;33(5):641--56. doi: 10.1177/0272989X12455847 Spiegelhalter DJ, Best NG, Carlin BP, van der Linde . Bayesian measures model complexity fit. J R Stat Soc B 2002;64(4):583--396. doi: 10.1111/1467-9868.00353","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/ume_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"End-user-ready results for the unrelated mean effects model — ume_plot","text":"","code":"data(\"nma.liu2013\")  # \\donttest{ # Read results from 'run_model' (using the default arguments) res <- readRDS(system.file('extdata/res_liu.rds', package = 'rnmamod'))  # Read results from 'run_ume' (using the default arguments) ume <- readRDS(system.file('extdata/ume_liu.rds', package = 'rnmamod'))  # The names of the interventions in the order they appear in the dataset interv_names <- c(\"placebo\", \"pramipexole\", \"serotonin-norepinephrine                   reuptake inhibitor\", \"serotonin reuptake inhibitor\",                   \"tricyclic antidepressant\", \"pergolide\")  # Plot the results from both models ume_plot(full = res,          ume = ume,          drug_names = interv_names) #> There is little to choose between the two models. #> $table_effect_size #>  #>  #> Table: Estimation for each observed comparison #>  #> |Comparison                                                                                   | Median NMA | SD NMA |   95% CrI NMA   | Median UME | SD UME |   95% CrI UME   | #> |:--------------------------------------------------------------------------------------------|:----------:|:------:|:---------------:|:----------:|:------:|:---------------:| #> |pramipexole vs placebo                                                                       |    2.22    |  0.65  | ( 0.61,  8.71)  |    1.79    |  0.84  | ( 0.31, 10.28)  | #> |serotonin-norepinephrine #>                   reuptake inhibitor vs placebo                      |    1.12    |  0.70  | ( 0.29,  4.78)  |    1.18    |  0.72  | ( 0.29,  5.19)  | #> |serotonin reuptake inhibitor vs placebo                                                      |    2.03    |  0.51  | ( 0.69,  5.25)  |    2.29    |  0.57  | ( 0.65,  6.30)  | #> |tricyclic antidepressant vs placebo                                                          |    4.48    |  0.71  | ( 1.08, 17.87)* |    6.75    |  0.79  | ( 1.44, 32.94)* | #> |serotonin reuptake inhibitor vs pramipexole                                                  |    0.92    |  0.70  | ( 0.20,  3.32)  |    0.63    |  0.98  | ( 0.08,  4.41)  | #> |pergolide vs pramipexole                                                                     |    0.27    |  1.13  | ( 0.03,  2.41)  |    0.28    |  1.15  | ( 0.03,  2.45)  | #> |serotonin reuptake inhibitor vs serotonin-norepinephrine #>                   reuptake inhibitor |    1.81    |  0.76  | ( 0.35,  7.27)  |    3.26    |  0.94  | ( 0.46, 21.27)  | #> |tricyclic antidepressant vs serotonin reuptake inhibitor                                     |    2.22    |  0.70  | ( 0.58,  8.99)  |    0.41    |  1.42  | ( 0.02,  6.57)  | #>  #> $table_model_assessment #>  #>  #> Table: Model assessment parameters (25 unconstrained data points) #>  #> |    |Full NMA | UME model | #> |:---|:--------|:---------:| #> |DIC |43.52515 | 44.02893  | #> |pD  |18.94214 | 20.13015  | #> |dev |24.58300 | 23.89878  | #>  #> $table_tau #>  #>  #> Table: Between-trial standard deviation #>  #> |          |Median    | Lower 95% CrI | Upper 95% CrI | #> |:---------|:---------|:-------------:|:-------------:| #> |Full NMA  |0.5907608 |   0.0370939   |   1.541924    | #> |UME model |0.5992070 |   0.0354797   |   1.633918    | #>  #> $scatterplots  #>  #> $leverage_plots  #>  #> $intervalplots  #>  # }"},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Performs unrelated trial effects model (also known fixed   effects model) illustrates results trial corresponding   pairwise comparison.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"","code":"unrelated_effects_plot(   data,   measure,   char,   drug_names,   trial_names,   mean_misspar,   var_misspar,   rho,   save_xls )"},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"data data-frame one-trial-per-row format containing arm-level data trial. See 'Format' run_model. measure Character string indicating effect measure values \"\", \"MD\", \"SMD\", \"ROM\" odds ratio, mean difference, standardised mean difference ratio means, respectively. char data-frame three columns number rows equal number trials data. column refers trial-characteristic nominal elements. drug_names vector labels name interventions order appear argument data. drug_names defined, order interventions appear data used, instead. trial_names vector labels name trials order appear argument data. trial_names defined, order trials appear data used, instead. mean_misspar numeric value mean normal distribution informative missingness parameter (see 'Details'). default argument 0 corresponds missing--random assumption. value considered across trials dataset. var_misspar positive non-zero number variance normal distribution informative missingness parameter. measure \"\", \"MD\", \"SMD\" default argument 1. measure \"ROM\" default argument 0.04. value considered across trials dataset. rho numeric value interval [-1, 1] indicates correlation coefficient two informative missingness parameters trial. value considered across trials dataset. default argument 0 corresponds uncorrelated missingness parameters. save_xls Logical indicate whether export tabulated results 'xlsx' file (via write_xlsx function R-package writexl) working directory user. default FALSE (export).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"panel interval plots observed comparison   network, 15 trials data. Otherwise,  unrelated_effects_plot exports data-frame 'xlsx' file   working  directory user. data-frame includes  data long format, within-trial effect measure   95% confidence interval corresponding comparisons,   interventions compared, three characteristics (defined  char).   datasets 15 trials, plot becomes cluttered   difficult identify trial-names. Hence, exporting results   Excel file viable alternative.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"unrelated trial effects model may alternative network   meta-analysis, latter deemed appropriate (e.g.,   considerable statistical heterogeneity, substantial intransitivity).   presence missing participant outcome data, effect size   standard error adjusted applying pattern-mixture model   Taylor series trial-arms reported missing participants (Mavridis et   al., 2015; White et al., 2008). unrelated_effects_plot function   calls taylor_imor taylor_continuous   functions (binary continuous outcome, respectively) employ   pattern-mixture model Taylor series. unrelated_effects_plot   function considers informative missingness odds ratio   logarithmic scale binary outcome data (White et al., 2008),   informative missingness difference means measure   \"MD\" \"SMD\", informative missingness ratio means   logarithmic scale measure \"ROM\"   (Mavridis et al., 2015). number interval plots equals number observed comparisons   network. interval plot, y-axis refers trials   network x-axis refers selected effect measure. odds ratio   ratio means calculated logarithmic scale   reported original scale exponentiation. unrelated_effects_plot depicts three characteristics   trial using different colours, line-types point-shapes   corresponding 95% confidence interval point estimate. Ideally,   characteristic three categories; otherwise,   plot becomes cluttered. now, unrelated_effects_plot function   uses default colour palette, line-types point-shapes.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Mavridis D, White IR, Higgins JP, Cipriani , Salanti G. Allowing uncertainty due missing continuous outcome data pairwise network meta-analysis. Stat Med 2015;34(5):721--41. doi: 10.1002/sim.6365 White IR, Higgins JP, Wood . Allowing uncertainty due missing data meta-analysis--part 1: two-stage methods. Stat Med 2008;27(5):711--27. doi: 10.1002/sim.3008","code":""},{"path":[]},{"path":"https://loukiaspin.github.io/rnmamod/reference/unrelated_effects_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"End-user-ready results for unrelated trial effects model — unrelated_effects_plot","text":"Loukia M. Spineli","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-040-2023-0x-xx","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.4.0 (2023-0X-XX)","title":"rnmamod, version 0.4.0 (2023-0X-XX)","text":"returns barplot ratio MCMC error posterior standard deviation barplot Gelman-Rubin R diagnostic. Green bars indicate ratio less 0.05 R less 1.10; otherwise, bars red. corresponding models updated convergence via autojags function R package R2jags. argument inits added allow user define initial values parameters, following documentation jags function R package R2jags. reports tables evidence base information one outcome. network plot reported (see use netplot, instead). Self-created function using R package igraph. function creates network plot.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-030-2022-11-01","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.3.0 (2022-11-01)","title":"rnmamod, version 0.3.0 (2022-11-01)","text":"CRAN release: 2022-11-01 processes elements argument base_risk fixed, random predicted baseline model passes output run_model run_metareg obtain absolute risks interventions. predicted baseline model conducted, returns forest plot trial-specific summary probability event selected reference intervention. upgraded plot presents two forest plots side--side: () one estimation prediction network meta-analysis network meta-regression selected comparator intervention (allows comparison two analyses), (ii) one SUCRA values analyses. forest plots present results network meta-regression selected value investigated covariate. (binary outcome) yields graph league_table_absolute, input rnmamod object: user defines input includes summary effect corresponding (credible confidence) interval comparisons reference intervention. results stem network meta-analysis conducted using another R-package statistical software. calculates robustness index sensitivity analysis performed using R-package netmeta metafor. user defines input function returns robustness index. function returns output robustness_index function. classifies systematic review multiple interventions low, unclear high quality regarding transitivity evaluation based five quality criteria.","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-020-2022-04-06","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.2.0 (2022-04-06)","title":"rnmamod, version 0.2.0 (2022-04-06)","text":"CRAN release: 2022-04-06 Typos links (functions packages) documentation corrected. allows user define reference intervention network via argument ref; (binary outcome) estimates absolute risks non-reference interventions using selected baseline risk reference intervention (argument base_risk); (binary outcome) estimates relative risks risk difference functions estimated absolute risks. (binary outcome) presents absolute risks per 1000 participants main diagonal, odds ratio upper -diagonals, risk difference per 1000 participants lower -diagonals; allow user select interventions present via argument show (ideal large networks make league table cluttered). allow user select interventions present via argument show (ideal large networks make league table cluttered); allow user illustrate results two outcomes model (.e. via run_model run_metareg) results two models outcome (applicable : () run_model versus run_metareg, (ii) run_model versus run_series_meta). present extent heterogeneity forest plot tau using different colours low, reasonable, fairly high, fairly extreme tau (classification suggested Spiegelhalter et al., 2004; ISBN 0471499757).","code":""},{"path":"https://loukiaspin.github.io/rnmamod/news/index.html","id":"rnmamod-version-010-2021-11-21","dir":"Changelog","previous_headings":"","what":"rnmamod, version 0.1.0 (2021-11-21)","title":"rnmamod, version 0.1.0 (2021-11-21)","text":"CRAN release: 2021-11-29 First CRAN submission.","code":""}]
