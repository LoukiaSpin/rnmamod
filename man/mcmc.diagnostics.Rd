% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc.diagnostics_function.R
\name{mcmc.diagnostics}
\alias{mcmc.diagnostics}
\title{Markov Chain Monte Carlo Diagnostics}
\usage{
mcmc.diagnostics(net, par)
}
\arguments{
\item{net}{An object of S3 class \code{\link{run.model}}, \code{\link{run.series.meta}}, \code{\link{run.nodesplit}}, \code{\link{run.UME}},
\code{\link{run.sensitivity}} and \code{\link{run.metareg}}. See 'Value' in the functions above.}

\item{par}{A vector of three character strings that refer to three monitored parameters in \code{jagsfit} which is an object of S3 class
\code{\link{run.model}}, \code{\link{run.UME}} and \code{\link{run.metareg}}.
These three selected parameters will be considered in the diagnostic plots (see 'Value').
This argument will be ignored for objects of S3 class \code{\link{run.series.meta}}, \code{\link{run.nodesplit}}, or \code{\link{run.sensitivity}}.}
}
\value{
This function returns a data-frame that contains the Gelman-Rubin convergence diagnostic, R-hat, and convergence status of the following monitored parameters:
\tabular{ll}{
 \code{EM} \tab The estimated summary effect measure.\cr
 \tab \cr
 \code{EM.pred} \tab The predicted summary effect measure.\cr
 \tab \cr
 \code{delta} \tab The estimated trial-specific effect measure.\cr
 \tab \cr
 \code{tau} \tab The between-trial standard deviation.\cr
 \tab \cr
 \code{direct} \tab The direct estimate of the split node (see 'Value' \code{\link{run.nodesplit}}).\cr
 \tab \cr
 \code{indirect} \tab The indirect estimate of the split node (see 'Value' \code{\link{run.nodesplit}}).\cr
 \tab \cr
 \code{IF} \tab The inconsistency factor of the split node (see 'Value' \code{\link{run.nodesplit}}).\cr
 \tab \cr
 \code{phi} \tab The informative missingness parameter.\cr
 \tab \cr
 \code{beta} \tab The regression coefficient.\cr
}
\code{mcmc.diagnostics} also uses the \code{\link[mcmcplots]{mcmcplot}} function to create an HTML file with a panel of diagnostic plots (trace, density, and autocorrelation) for each monitored parameter.
}
\description{
This function evaluates whether convergence has been achieved for the monitored parameters of the Bayesian models.
  The Gelman-Rubin convergence diagnostic and relevant diagnostic plots are applied for that purpose.
}
\details{
For each monitored parameter, \code{mcmc.diagnostics} considers the maximum R-hat and compares it with the threshold 1.1: convergence is achieved for the monitored parameter, when the maximum R-hat
  is below that threshold; otherwise, the Markov Chain Monte Carlo algorithm has not converged for that parameter. If the monitored parameter is a vector with the posterior results, there is only one R-hat.
  If the monitored parameter is a matrix of the posterior results, there are as many R-hats as the number of rows for that parameter.
}
\examples{
data("nma.liu2013")

\dontrun{
# Perform a random-effects network meta-analysis
res <- run.model(data = nma.liu2013,
                 measure = "OR",
                 model = "RE",
                 assumption = "IDE-ARM",
                 heter.prior = list("halfnormal", 0, 1),
                 mean.misspar = c(0, 0),
                 var.misspar = 1,
                 D = 1,
                 n.chains = 3,
                 n.iter = 10000,
                 n.burnin = 1000,
                 n.thin = 1)

# Obtain the diagnostic plots and check convergence for all monitored parameters using the R.hat
mcmc.diagnostics(net = res, par = c("tau", "EM[2,1]", "EM.pred[2,1]"))
}

}
\references{
Gelman, A, Rubin, DB. Inference from iterative simulation using multiple sequences. \emph{Stat Sci} 1992;\bold{7}:457--472. [\doi{10.1214/ss/1177011136}]
}
\seealso{
\code{\link[mcmcplots]{mcmcplot}}, \code{\link{run.model}}, \code{\link{run.series.meta}}, \code{\link{run.nodesplit}}, \code{\link{run.UME}}, \code{\link{run.UME}}, \code{\link{run.metareg}}
}
\author{
{Loukia M. Spineli}
}
